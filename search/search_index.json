{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Xin ch\u00e0o! \u0110\u00e2y l\u00e0 trang web \u0111\u01b0\u1ee3c d\u1ef1ng d\u1ef1a tr\u00ean th\u01b0 vi\u1ec7n mkdocs.</p> <p>N\u1ebfu c\u00f3 b\u1ea5t c\u1ee9 v\u1ea5n \u0111\u1ec1 g\u00ec vui l\u00f2ng m\u1edf m\u1ed9t issue t\u1ea1i Github, xin c\u1ea3m \u01a1n!</p>"},{"location":"navigation/","title":"N\u1ed9i dung","text":"<ul> <li>Trang ch\u1ee7<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>N\u1ed9i dung</li> </ul> </li> <li>CP<ul> <li>Quy ho\u1ea1ch \u0111\u1ed9ng ch\u1eef s\u1ed1</li> <li>Chia c\u0103n v\u00e0 c\u00e1c bi\u1ebfn th\u1ec3</li> <li>D\u1ef1ng c\u00e2y truy v\u1ea5n</li> <li>Thu\u1eadt to\u00e1n Manacher</li> <li>Offline Incremental SCC</li> </ul> </li> </ul>"},{"location":"CP/dp-digit/","title":"Quy ho\u1ea1ch \u0111\u1ed9ng ch\u1eef s\u1ed1","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t k\u0129 thu\u1eadt t\u01b0\u01a1ng \u0111\u1ed1i ph\u1ed5 bi\u1ebfn, m\u1edbi \u0111\u01b0\u1ee3c du nh\u1eadp v\u00e0o Vi\u1ec7t Nam trong nh\u1eefng n\u0103m g\u1ea7n \u0111\u00e2y. Tuy nhi\u00ean nh\u1eefng t\u00e0i li\u1ec7u vi\u1ebft v\u1ec1 k\u0129 thu\u1eadt n\u00e0y b\u1eb1ng ti\u1ebfng Vi\u1ec7t c\u00f2n kh\u00e1 \u00edt. V\u1eady n\u00ean trong b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd c\u1ed1 g\u1eafng tr\u00ecnh b\u00e0y \u0111\u1ea7y \u0111\u1ee7 v\u1ec1 dp digit c\u01a1 b\u1ea3n c\u0169ng nh\u01b0 m\u1ed9t s\u1ed1 k\u0129 thu\u1eadt t\u1ed1i \u01b0u. </p>"},{"location":"CP/dp-digit/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>B\u00e0i to\u00e1n \u0111\u01b0a ra th\u01b0\u1eddng s\u1ebd l\u00e0: \u0111\u1ebfm s\u1ed1 l\u01b0\u1ee3ng c\u00e1c s\u1ed1 nguy\u00ean c\u00f3 gi\u00e1 tr\u1ecb tr\u00ean m\u1ed9t mi\u1ec1n \\([L,R]\\) x\u00e1c \u0111\u1ecbnh v\u00e0 tho\u1ea3 m\u00e3n m\u1ed9t t\u00ednh ch\u1ea5t n\u00e0o \u0111\u00f3.</p> <p>N\u1ebfu gi\u1edbi h\u1ea1n \\(R-L\\) nh\u1ecf, ta c\u00f3 th\u1ec3 duy\u1ec7t nh\u01b0 sau:</p> Pseudo Code <pre><code>for i = L -&gt; R:\n    if (ok(i)): ans++\nprint(ans)\n</code></pre> <p>Trong \u0111\u00f3 h\u00e0m <code>ok(i)</code> l\u00e0 h\u00e0m x\u00e1c \u0111\u1ecbnh xem \\(i\\) c\u00f3 tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t \u0111\u1ec1 b\u00e0i kh\u00f4ng. \u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch l\u00e0m n\u00e0y l\u00e0 \\(O((R-L+1) \\times ...)\\), c\u00f3 th\u1ec3 kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c b\u00e0i to\u00e1n gi\u1edbi h\u1ea1n l\u1edbn h\u01a1n.</p> <p>Ta s\u1ebd nh\u00ecn b\u00e0i to\u00e1n theo m\u1ed9t h\u01b0\u1edbng kh\u00e1c. G\u1ecdi \\(G(x)\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng c\u00e1c s\u1ed1 nguy\u00ean nh\u01b0 v\u1eady trong ph\u1ea1m vi t\u1eeb \\(0\\) \u0111\u1ebfn \\(x\\), th\u00ec \u0111\u00e1p \u00e1n c\u1ee7a b\u1ea3i to\u00e1n l\u00e0 \\(G(R)-G(L-1)\\). Nh\u01b0 v\u1eady, b\u00e0i to\u00e1n quy v\u1ec1 vi\u1ec7c t\u00ednh h\u00e0m \\(G(x)\\).</p> <p>Thay v\u00ec duy\u1ec7t t\u1eebng s\u1ed1 m\u1ed9t \u0111\u1ec3 ki\u1ec3m tra, ta s\u1ebd \u0111i x\u00e2y d\u1ef1ng t\u1eebng ch\u1eef s\u1ed1 m\u1ed9t c\u1ee7a m\u1ed9t s\u1ed1 tho\u1ea3 m\u00e3n. Gi\u1ea3 s\u1eed s\u1ed1 \\(X\\) c\u00f3 d\u1ea1ng \\(a_{n-1} a_{n-2} ... a_{0}\\) v\u1edbi \\(n\\) l\u00e0 s\u1ed1 ch\u1eef s\u1ed1 t\u1ed1i \u0111a.</p> <ul> <li>G\u1ecdi s\u1ed1 hi\u1ec7n \u0111ang x\u00e2y d\u1ef1ng l\u00e0 s\u1ed1 \\(Y=a'_{n-1}...a'_0\\)</li> <li>Gi\u1ea3 s\u1eed ch\u00fang ta x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c ch\u1eef s\u1ed1 \\(a'_{n-1} a'_{n-2}... a'_{i+1}\\). B\u00e2y gi\u1edd ch\u00fang ta c\u1ea7n x\u00e2y d\u1ef1ng ch\u1eef s\u1ed1 \\(a'_{i}\\)</li> <li>\u0110i\u1ec1u ki\u1ec7n c\u1ee7a ch\u00fang ta l\u00e0 \\(Y \\leq X\\). N\u1ebfu tr\u01b0\u1edbc \\(i\\) t\u1ed3n t\u1ea1i m\u1ed9t ch\u1ec9 s\u1ed1 \\(j\\) m\u00e0 \\(a'_j&lt;a_j\\), th\u00ec v\u1ecb tr\u00ed th\u1ee9 \\(i\\) ta c\u00f3 th\u1ec3 \u0111i\u1ec1n m\u1ed9t ch\u1eef s\u1ed1 b\u1ea5t k\u00ec trong kho\u1ea3ng cho ph\u00e9p, v\u00ec ta \u0111\u00e3 ch\u1eafc ch\u1eafn r\u1eb1ng \\(Y&lt;X\\). Ng\u01b0\u1ee3c l\u1ea1i, ta ch\u1ec9 c\u00f3 th\u1ec3 \u0111i\u1ec1n c\u00e1c ch\u1eef s\u1ed1 \\(\\leq a_i\\) v\u00e0o \\(a'_i\\), v\u00ec ta c\u00f3 \\(a'_{n-1} ... a'_{i+1} = a_{n-1}...a_{i+1}\\). N\u1ebfu ta \u0111i\u1ec1n m\u1ed9t ch\u1eef s\u1ed1 \\(&gt;a_i\\) v\u00e0o v\u1ecb tr\u00ed th\u1ee9 \\(i\\), th\u00ec c\u00f3 th\u1ec3 kh\u1eb3ng \u0111\u1ecbnh \\(Y&gt;X\\), kh\u00f4ng tho\u1ea3 m\u00e3n v\u1edbi y\u00eau c\u1ea7u hi\u1ec7n gi\u1edd.</li> </ul> <p>Ta s\u1ebd c\u00f3 m\u1ed9t h\u00e0m \u0111\u1ec7 quy: \\(dp(i, ...)\\) l\u00e0 h\u00e0m quay lui \u0111\u1ec3 th\u1eed c\u00e1c kh\u1ea3 n\u0103ng c\u1ee7a ch\u1eef s\u1ed1 th\u1ee9 \\(i\\). V\u1edbi m\u1ed7i gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 c\u1ee7a \\(a'_{i}\\), ta s\u1ebd g\u1ecdi \u0111\u1ec7 quy \u0111\u1ebfn \\(dp(i-1,...)\\). B\u1eb1ng c\u00e1ch g\u1ecdi \\(dp(n-1,...)\\), ta s\u1ebd sinh ra c\u00e1c s\u1ed1 \\(k\\) trong ph\u1ea1m vi t\u1eeb \\(0\\) \u0111\u1ebfn \\(x\\). V\u1edbi m\u1ed7i s\u1ed1 sinh ra, ta ki\u1ec3m tra n\u00f3 c\u00f3 tho\u1ea3 m\u00e3n t\u00ednh ch\u1ea5t \u0111\u1ec1 b\u00e0i y\u00eau c\u1ea7u hay kh\u00f4ng, n\u1ebfu c\u00f3 th\u00ec t\u0103ng k\u1ebft qu\u1ea3 th\u00eam \\(1\\). </p> <p>Tuy nhi\u00ean n\u1ebfu l\u00e0m nh\u01b0 n\u00e0y th\u00ec kh\u00f4ng kh\u00e1c g\u00ec c\u00e1ch duy\u1ec7t nh\u01b0 tr\u00ean? T\u01b0\u01a1ng t\u1ef1 quy ho\u1ea1ch \u0111\u1ed9ng, n\u1ebfu g\u1eb7p m\u1ed9t tr\u1ea1ng th\u00e1i \\(dp(i...)\\) \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh r\u1ed3i, ta kh\u00f4ng t\u00ednh l\u1ea1i n\u1eefa m\u00e0 s\u1ebd truy xu\u1ea5t \u0111\u1ebfn k\u1ebft qu\u1ea3 \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh tr\u01b0\u1edbc \u0111\u00f3. \u0110\u00e2y c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 k\u0129 thu\u1eadt \u0111\u1ec7 quy c\u00f3 nh\u1edb.</p> <p>Nh\u01b0 v\u1eady ta c\u00f3 m\u1ed9t m\u1eabu chung cho c\u00e1c b\u00e0i to\u00e1n d\u1ea1ng n\u00e0y nh\u01b0 sau:</p> Pseudo Code <pre><code>// h\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng x\u00e2y d\u1ef1ng \u0111\u1ebfn ch\u1eef s\u1ed1 th\u1ee9 i, bi\u1ebfn smaller = true/false d\u00f9ng \u0111\u1ec3 ki\u1ec3m tra xem: s\u1ed1 \u0111ang x\u00e2y d\u1ef1ng \u0111\u00e3 ch\u1eafc ch\u1eafn nh\u1ecf h\u01a1n c\u1eadn tr\u00ean ch\u01b0a, cond l\u00e0 c\u00e1c \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh xem m\u1ed9t s\u1ed1 c\u00f3 tho\u1ea3 m\u00e3n hay kh\u00f4ng.\ndp(i, smaller, cond):\n    if i &lt; 0:\n        return 1 n\u1ebfu \u0111i\u1ec1u ki\u1ec7n tho\u1ea3 m\u00e3n, 0 n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i\n    if (f[i, smaller, cond] != -1): // \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh\n        return f[i, smaller, cond]\n    ans = 0\n    limit = smaller ? 9 : a[i]\n    for d = 0 -&gt; limit:\n        // new_cond l\u00e0 \u0111i\u1ec1u ki\u1ec7n m\u1edbi sau khi \u0111i\u1ec1n ch\u1eef s\u1ed1 d v\u00e0o v\u1ecb tr\u00ed th\u1ee9 i\n        ans += dp(i - 1, smaller || (d &lt; a[i]), new_cond)\n    return f[i, smaller, cond] = ans\n\nfill(all(f), -1);\ndp(n - 1, 0, ...); \n</code></pre> <p>Tuy nhi\u00ean kh\u00f4ng ch\u1ec9 c\u00f3 vi\u1ec7c \u0111\u1ebfm m\u1ed9t s\u1ed1 \\(X\\), m\u00e0 vi\u1ec7c \u0111\u1ebfm m\u1ed9t b\u1ed9 s\u1ed1 \\(\\{X_1...X_{N}\\}\\) c\u0169ng c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n b\u1eb1ng quy ho\u1ea1ch \u0111\u1ed9ng ch\u1eef s\u1ed1. Chi ti\u1ebft ch\u00fang ta s\u1ebd \u0111i qua ph\u1ea7n v\u00ed d\u1ee5.</p>"},{"location":"CP/dp-digit/#vi-du","title":"V\u00ed d\u1ee5","text":""},{"location":"CP/dp-digit/#spoj-gone","title":"SPOJ - GONE","text":"\u0110\u1ec1 b\u00e0i <p>C\u00f3 bao nhi\u00eau s\u1ed1 t\u1eeb \\(A\\) \u0111\u1ebfn \\(B\\) m\u00e0 t\u1ed5ng c\u00e1c ch\u1eef s\u1ed1 c\u1ee7a n\u00f3 l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1?</p> L\u1eddi gi\u1ea3i <ul> <li>G\u1ecdi \\(F(i,smaller,sum)\\) l\u00e0 s\u1ed1 c\u1ea5u h\u00ecnh khi x\u00e9t \u0111\u1ebfn v\u1ecb tr\u00ed \\(i\\), s\u1ed1 hi\u1ec7n t\u1ea1i \u0111\u00e3 nh\u1ecf h\u01a1n c\u1eadn tr\u00ean ch\u01b0a, v\u00e0 t\u1ed5ng c\u00e1c ch\u1eef s\u1ed1 c\u1ee7a s\u1ed1 \u0111ang x\u00e9t hi\u1ec7n t\u1ea1i l\u00e0 bao nhi\u00eau?</li> <li>N\u1ebfu \\(i &lt; 0\\) ta tr\u1ea3 v\u1ec1 \\(1\\) n\u1ebfu \\(sum\\) l\u00e0 s\u1ed1 nguy\u00ean t\u1ed1</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, ta duy\u1ec7t m\u1ecdi \u1ee9ng c\u1eed vi\u00ean c\u1ee7a ch\u1eef s\u1ed1 th\u1ee9 \\(i\\), v\u00e0 c\u1eadp nh\u1eadt bi\u1ebfn \\(smaller,sum\\) t\u01b0\u01a1ng \u1ee9ng</li> <li>V\u1edbi gi\u1edbi h\u1ea1n \\(A,B \\leq 10^8\\), c\u00f9ng \\(100\\) test, ta c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(T \\times |B| \\times |B| \\times 9 \\times 10) = O(T \\times 8^2 \\times 9 \\times 10)\\) (s\u1ed1 tr\u1ea1ng th\u00e1i nh\u00e2n v\u1edbi chi ph\u00ed chuy\u1ec3n tr\u1ea1ng th\u00e1i)</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int MAX_DIGITS = 10;\nconst int MAX_SUM = 9 * MAX_DIGITS;\n\nint num[MAX_DIGITS];\nint F[MAX_DIGITS][2][MAX_SUM];\nbool p[MAX_SUM];\n\nint dp(int i, bool f, int cur_sum) {\n    if (i &lt; 0)\n        return !p[cur_sum];\n\n    if (F[i][f][cur_sum] != -1)\n        return F[i][f][cur_sum];\n\n    int res = 0;\n    int max_digit = (f ? num[i] : 9);\n\n    for (int c = 0; c &lt;= max_digit; c++) {\n        bool new_f = (f == true &amp;&amp; c == max_digit);\n        res += dp(i - 1, new_f, cur_sum + c);\n    }\n\n    return F[i][f][cur_sum] = res;\n}\n\nint solve(int x) {\n    memset(F, -1, sizeof(F));\n\n    int n = 0;\n    do {\n        num[n++] = x % 10;\n        x /= 10;\n    } while (x &gt; 0);\n\n    return dp(n - 1, true, 0);\n}\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    p[0] = p[1] = true;\n    for (int i = 2; i * i &lt; MAX_SUM; i++)\n        if (!p[i])\n        for (int j = i * i; j &lt; MAX_SUM; j += i)\n            p[j] = true;\n\n    int tc;\n    cin &gt;&gt; tc;\n    while (tc--) {\n        int a, b;\n        cin &gt;&gt; a &gt;&gt; b;\n        cout &lt;&lt; solve(b) - solve(a - 1) &lt;&lt; \"\\n\";\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#girlnum-girl-numbers","title":"GIRLNUM - Girl Numbers","text":"\u0110\u1ec1 b\u00e0i <p>\u0110\u1ebfm s\u1ed1 s\u1ed1 \\(X\\) tho\u1ea3 m\u00e3n \\(X_1&lt;X_2&gt;X_3&lt;X_4...\\) ho\u1eb7c \\(X_1&gt;X_2&lt;X_3&gt;X_4...\\)</p> L\u1eddi gi\u1ea3i <ul> <li>Khi \u0111i\u1ec1n ch\u1eef s\u1ed1 th\u1ee9 \\(i\\), ta c\u1ea7n bi\u1ebft th\u00eam th\u00f4ng tin l\u00e0 v\u1ecb tr\u00ed ngay tr\u01b0\u1edbc n\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111i\u1ec1n ch\u1eef s\u1ed1 n\u00e0o, c\u0169ng nh\u01b0 \"d\u1ea5u\" hi\u1ec7n t\u1ea1i l\u00e0 c\u00e1i g\u00ec (ngh\u0129a l\u00e0 v\u1ecb tr\u00ed n\u00e0y ta \u0111ang c\u1ea7n \u0111i\u1ec1n ch\u1eef s\u1ed1 nh\u1ecf h\u01a1n, hay l\u1edbn h\u01a1n ch\u1eef s\u1ed1 tr\u01b0\u1edbc \u0111\u00f3)</li> <li>V\u1edbi b\u00e0i tr\u00ean, ta c\u00f3 th\u1ec3 \u0111i\u1ec1n c\u00e1c ch\u1eef s\u1ed1 0 v\u00e0o \u0111\u1ea7u tho\u1ea3i m\u00e1i, m\u00e0 kh\u00f4ng l\u00e0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn k\u1ebft qu\u1ea3 t\u00ednh \u0111\u01b0\u1ee3c. Tuy nhi\u00ean, \u1edf b\u00e0i n\u00e0y ta c\u1ea7n qu\u1ea3n l\u00ed vi\u1ec7c \u0111\u00f3. B\u1edfi v\u00ec khi ta ch\u01b0a b\u1eaft \u0111\u1ea7u m\u1ed9t s\u1ed1 (ngh\u0129a l\u00e0 prefix v\u1eabn l\u00e0 \\(00...0\\)), th\u00ec ta ch\u01b0a c\u1ea7n quan t\u00e2m \u0111\u1ebfn ch\u1eef s\u1ed1 \u0111\u1eb1ng tr\u01b0\u1edbc hay d\u1ea5u nh\u01b0 th\u1ebf n\u00e0o, m\u00e0 c\u00f3 th\u1ec3 \u0111i\u1ec1n b\u1ea5t k\u00ec</li> <li>V\u1eady h\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng c\u1ee7a ch\u00fang ta s\u1ebd l\u00e0 \\(F(i,smaller,zero,last,sign)\\), v\u1edbi \u00fd ngh\u0129a:<ul> <li>Ta \u0111ang \u0111i\u1ec1n \u0111\u1ebfn v\u1ecb tr\u00ed th\u1ee9 \\(i\\)</li> <li>\\(smaller=0/1\\): S\u1ed1 hi\u1ec7n t\u1ea1i \u0111\u00e3 nh\u1ecf h\u01a1n c\u1eadn tr\u00ean ch\u01b0a?</li> <li>\\(zero=0/1\\): Ta \u0111\u00e3 \"ch\u1ea1m\" \u0111\u1ebfn s\u1ed1 hi\u1ec7n t\u1ea1i \u0111ang x\u00e9t ch\u01b0a, hay l\u00e0 v\u1eabn \u0111ang n\u1eb1m \u1edf prefix \\(000..000xxx\\)?</li> <li>\\(last=0...9\\): Ch\u1eef s\u1ed1 \u0111\u01b0\u1ee3c \u0111i\u1ec1n ngay tr\u01b0\u1edbc n\u00f3, t\u1ea1i th\u1eddi \u0111i\u1ec3m \u0111\u1ea1t \u0111\u01b0\u1ee3c tr\u1ea1ng th\u00e1i \\(zero=0\\)</li> <li>\\(sign=0/1\\): Hi\u1ec7n t\u1ea1i ta \u0111ang c\u1ea7n \u0111i\u1ec1n ch\u1eef s\u1ed1 nh\u1ecf h\u01a1n \\((1)\\), hay l\u1edbn h\u01a1n \\((0)\\) ch\u1eef s\u1ed1 \u0111\u1ee9ng tr\u01b0\u1edbc n\u00f3</li> </ul> </li> <li>V\u1edbi m\u1ed7i tr\u1ea1ng th\u00e1i \\((i,smaller,zero,last,sign)\\) v\u00e0 hi\u1ec7n t\u1ea1i \u0111ang \u0111i\u1ec1n ch\u1eef s\u1ed1 \\(j\\). Ta chuy\u1ec3n sang tr\u1ea1ng th\u00e1i \\((i-1,next\\_smaller,next\\_zero, next\\_last,next\\_sign)\\) nh\u01b0 sau<ul> <li>N\u1ebfu ch\u1eef s\u1ed1 \\(j\\) kh\u00f4ng \u0111i\u1ec1n \u0111\u01b0\u1ee3c v\u00e0o v\u1ecb tr\u00ed \\(i\\) th\u00ec kh\u00f4ng x\u00e9t \\((smaller=true\\) nh\u01b0ng \\(j&gt;\\) ch\u1eef s\u1ed1 th\u1ee9 \\(i\\) c\u1ee7a c\u1eadn tr\u00ean, \\(sign=1\\) nh\u01b0ng \\(j&gt;last\\) ho\u1eb7c \\(sign=0\\) nh\u01b0ng \\(j&lt;last)\\)</li> <li>N\u1ebfu \\(j=0\\), \\(next\\_zero=true\\) n\u1ebfu \\(zero=true,i \\geq 1\\). Ng\u01b0\u1ee3c l\u1ea1i \\(next\\_zero=false\\) \\((j&gt;0\\) ho\u1eb7c c\u00e1c \u0111i\u1ec1u ki\u1ec7n tr\u00ean kh\u00f4ng tho\u1ea3 m\u00e3n\\()\\)</li> <li>N\u1ebfu \\(next\\_zero=true\\) th\u00ec \\(next\\_last=last,next\\_sign=sign\\). Ng\u01b0\u1ee3c l\u1ea1i \\(next\\_last=j,next\\_sign=2-sign\\)</li> <li>\\(next\\_smaller=smaller\\) \\(OR\\) \\(j&lt;\\) ch\u1eef s\u1ed1 th\u1ee9 \\(i\\) c\u1ee7a c\u1eadn tr\u00ean</li> </ul> </li> </ul> <p>\u0110\u00e1p \u00e1n s\u1ebd l\u00e0 \\(dp(n - 1, false, -1, true, true) + dp(n - 1, false, 10, true, false)\\) v\u1edbi \\(n\\) l\u00e0 \u0111\u1ed9 d\u00e0i s\u1ed1 \u0111ang x\u00e9t (ta \u0111\u00e1nh s\u1ed1 t\u1eeb \\(n-1\\) v\u1ec1 \\(0\\)). Tuy nhi\u00ean n\u1ebfu nh\u01b0 l\u00e0m nh\u01b0 v\u1eady s\u1ebd b\u1ecb \u0111\u1ebfm th\u1eeba c\u00e1c s\u1ed1 c\u00f3 \\(1\\) ch\u1eef s\u1ed1 b\u1edfi v\u00ec c\u00e1c s\u1ed1 n\u00e0y tho\u1ea3 m\u00e3n c\u1ea3 2 tr\u01b0\u1eddng h\u1ee3p xu\u1ea5t ph\u00e1t t\u1eeb \\(sign=0/1\\). V\u1eady ta c\u1ea7n tr\u1eeb \u0111\u00e1p \u00e1n cho (s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 c\u00f3 \\(1\\) ch\u1eef s\u1ed1 v\u00e0 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng c\u1eadn tr\u00ean).</p> <p>Tuy nhi\u00ean v\u1edbi gi\u1edbi h\u1ea1n \\(A \\leq 10^{10^5}\\) ta kh\u00f4ng th\u1ec3 t\u00ednh \\(A-1\\) nh\u01b0 b\u00ecnh th\u01b0\u1eddng. \u0110\u1ebfn \u0111\u00e2y ta c\u00f3 hai c\u00e1ch: duy\u1ec7t t\u1eebng ch\u1eef s\u1ed1 c\u1ee7a \\(A\\) \u0111\u1ec3 t\u00ednh \\(A-1\\), ho\u1eb7c t\u00ednh \\(G(B)-G(A)\\) r\u1ed3i \\(+1\\) n\u1ebfu nh\u01b0 \\(A\\) tho\u1ea3 m\u00e3n \u0111\u1ec1 b\u00e0i.</p> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(|B| \\times 9 \\times 2^3 \\times 9) =O(10^5 \\times 9 \\times 2^3 \\times 9)\\). Tuy nhi\u00ean v\u00ec c\u00f3 m\u1ed9t s\u1ed1 r\u00e0ng bu\u1ed9c n\u00ean s\u1ed1 tr\u1ea1ng th\u00e1i s\u1ebd nh\u1ecf h\u01a1n.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 1e5 + 5;\nconst int D = 15;\nconst int MOD = 1e9 + 7;\ntypedef long long ll;\n\nint num[N];\nll f[N][2][D][2][2];\n\nll dp(int i, bool limit, int last, bool zero, bool inc) {\n  if (i &lt; 0)\n    return 1;\n\n  if (last != -1 &amp;&amp; last != 10 &amp;&amp; f[i][limit][last][zero][inc] != -1)\n    return f[i][limit][last][zero][inc];\n\n  ll res = 0;\n  int mx = limit ? num[i] : 9;\n\n  //&lt;\n  if (inc == true) {\n    for (int c = last + 1; c &lt;= mx; c++) {\n      bool new_limit = limit &amp;&amp; c == mx;\n      bool new_zero = i &gt;= 1 &amp;&amp; c == 0 &amp;&amp; zero;\n\n      int new_last = (new_zero == true ? -1 : c);\n      bool new_inc = (new_zero == true ? inc : !inc);\n\n      res = (res + dp(i - 1, new_limit, new_last, new_zero, new_inc)) % MOD;\n    }\n  }\n  //&gt;\n  else {\n    for (int c = 0; c &lt;= min(last - 1, mx); c++) {\n      bool new_limit = limit &amp;&amp; c == mx;\n      bool new_zero = i &gt;= 1 &amp;&amp; c == 0 &amp;&amp; zero;\n\n      int new_last = (new_zero == true ? 10 : c);\n      bool new_inc = (new_zero == true ? inc : !inc);\n\n      res = (res + dp(i - 1, new_limit, new_last, new_zero, new_inc)) % MOD;\n    }\n  }\n\n  return f[i][limit][last][zero][inc] = res;\n}\n\nll solve(string s) {\n  int n = s.size();\n\n  if (n == 1)\n    return s[0] - '0' + 1;\n\n  for (int i = 0; i &lt; n; i++)\n    num[i] = s[n - i - 1] - '0';\n\n  memset(f, -1, sizeof(f));\n  return (dp(n - 1, true, -1, true, true) + dp(n - 1, true, 10, true, false) - 10 + MOD) % MOD;\n}\n\nbool check(string s) {\n  if (s.size() == 1)\n    return true;\n\n  bool f1 = true, f2 = true;\n\n  bool cur = true;  // a[i] &lt; a[i + 1];\n  for (int i = 1; i &lt; s.size(); i++) {\n    if (s[i - 1] == s[i])\n      return false;\n    bool st = s[i - 1] &lt; s[i];\n    if (st != cur) {\n      f1 = false;\n      break;\n    }\n    cur = !cur;\n  }\n\n  cur = true;  // a[i] &gt; a[i + 1];\n  for (int i = 1; i &lt; s.size(); i++) {\n    bool st = s[i - 1] &gt; s[i];\n    if (st != cur) {\n      f2 = false;\n      break;\n    }\n    cur = !cur;\n  }\n\n  return f1 || f2;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n\n  string L, R;\n  cin &gt;&gt; L &gt;&gt; R &gt;&gt; L &gt;&gt; R;\n\n  cout &lt;&lt; (solve(R) - solve(L) + check(L) + MOD) % MOD;\n\n  return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#baltic-oi-13-p2-palindrome-free-numbers","title":"Baltic OI '13 P2 - Palindrome-Free Numbers","text":"\u0110\u1ec1 b\u00e0i <p>\u0110\u1ebfm s\u1ed1 s\u1ed1 \\(X\\) kh\u00f4ng ch\u1ee9a m\u1ed9t x\u00e2u con \u0111\u1ed9 d\u00e0i \\(&gt;1\\) n\u00e0o l\u00e0 palindrome.</p> L\u1eddi gi\u1ea3i <ul> <li>Nh\u1eadn x\u00e9t n\u1ebfu b\u1ea5t k\u00ec m\u1ed9t x\u00e2u palin \u0111\u1ed9 d\u00e0i \\(&gt;1\\) \u0111\u1ec1u c\u00f3 t\u00e2m l\u00e0 palin \u0111\u1ed9 d\u00e0i \\(2\\) ho\u1eb7c \\(3\\). V\u1eady ta ch\u1ec9 c\u1ea7n \u0111\u1ea3m b\u1ea3o \\(X\\) kh\u00f4ng ch\u1ee9a \\(palin\\) \u0111\u1ed9 d\u00e0i \\(2\\) ho\u1eb7c \\(3\\) l\u00e0 s\u1ebd tho\u1ea3 m\u00e3n \u0111\u1ec1 b\u00e0i<ul> <li>\u0110i\u1ec1u ki\u1ec7n kh\u00f4ng t\u1ed3n t\u1ea1i palin \u0111\u1ed9 d\u00e0i \\(2\\): \\(X_i \\neq X_{i-1}\\) v\u1edbi m\u1ecdi \\(i&gt;1\\)</li> <li>\u0110i\u1ec1u ki\u1ec7n kh\u00f4ng t\u1ed3n t\u1ea1i palin \u0111\u1ed9 d\u00e0i \\(3\\): \\(X_i \\neq X_{i-2}\\) v\u1edbi m\u1ecdi \\(i&gt;2\\)</li> </ul> </li> <li>V\u1eady t\u01b0\u01a1ng t\u1ef1 b\u00e0i tr\u00ean, ta c\u1ea7n l\u01b0u m\u1ed9t bi\u1ebfn \\(zero\\) \u0111\u1ec3 ki\u1ec3m so\u00e1t xem ta \u0111ang n\u1eb1m \u1edf prefix \\(000..000\\) hay \u0111\u00e3 ch\u1ea1m \u0111\u1ebfn s\u1ed1 c\u1ea7n x\u00e9t, c\u0169ng nh\u01b0 hai ch\u1eef s\u1ed1 \u0111\u01b0\u1ee3c \u0111i\u1ec1n ngay tr\u01b0\u1edbc \\(i\\) (n\u1ebfu nh\u01b0 c\u00f3 \u00edt h\u01a1n 2 ch\u1eef s\u1ed1 th\u00ec ta c\u1ee9 xem ch\u1eef s\u1ed1 n\u00e0o b\u1ecb tr\u00e0n ra ngo\u00e0i l\u00e0 \\(-1\\)). L\u01b0u \u00fd khi \\(zero=true\\) th\u00ec ta kh\u00f4ng x\u00e9t \u0111i\u1ec1u ki\u1ec7n g\u00ec m\u00e0 \u0111i\u1ec1n b\u1ea5t k\u00ec.</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 20;\n\nint a[N];\nint n;\nint64_t f[N][2][2][11][11];\n\nint64_t dp(int i, bool smaller, bool is_zero, int last2, int last1) {\n  if (i &lt; 0) {\n    return 1;\n  }\n\n  int64_t &amp;ans = f[i][smaller][is_zero][last2 + 1][last1 + 1];\n  if (ans != -1) {\n    return ans;\n  }\n\n  ans = 0;\n  int lim = smaller ? 9 : a[i];\n  for (int d = 0; d &lt;= lim; d++) {\n    bool new_smaller = smaller || d &lt; a[i];\n    bool new_zero = i &gt;= 1 &amp;&amp; is_zero &amp;&amp; d == 0;\n    int new_last_2 = last1;\n    int new_last_1 = d;\n\n    if (!new_zero) {\n      if (d == last1 || d == last2)\n        continue;\n    } else {\n      new_last_2 = new_last_1 = -1;\n    }\n\n    ans += dp(i - 1, new_smaller, new_zero, new_last_2, new_last_1);\n  }\n\n  return ans;\n}\n\nint64_t solve(int64_t x) {\n  n = 0;\n  do {\n    a[n++] = x % 10;\n    x /= 10;\n  } while (x &gt; 0);\n  memset(f, -1, sizeof(f));\n  return dp(n - 1, 0, 1, -1, -1);\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n\n  int64_t l, r;\n  cin &gt;&gt; l &gt;&gt; r;\n  cout &lt;&lt; solve(r) - solve(l - 1);\n  return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#adbrack-vnoi","title":"ADBRACK - VNOI","text":"L\u1eddi gi\u1ea3i <p>G\u1ecdi \\(dp(i, smaller, deg)\\) l\u00e0 s\u1ed1 d\u00e3y ngo\u1eb7c khi:</p> <ul> <li>\u0110\u00e3 x\u00e9t \u0111\u1ebfn v\u1ecb tr\u00ed \\(i\\)</li> <li>\\(smaller\\) th\u1ec3 hi\u1ec7n d\u00e3y ngo\u1eb7c hi\u1ec7n t\u1ea1i \u0111ang x\u00e2y d\u1ef1ng \u0111\u00e3 ch\u1eafc ch\u1eafn nh\u1ecf h\u01a1n d\u00e3y ngo\u1eb7c g\u1ed1c hay ch\u01b0a</li> <li>\\(deg\\) th\u1ec3 hi\u1ec7n s\u1ed1 ngo\u1eb7c m\u1edf ch\u01b0a gh\u00e9p \u0111\u01b0\u1ee3c v\u1edbi ngo\u1eb7c \u0111\u00f3ng n\u00e0o trong d\u00e3y ngo\u1eb7c hi\u1ec7n t\u1ea1i. D\u00e3y ngo\u1eb7c \u0111\u00fang c\u00f3 b\u1eadc kh\u00f4ng qu\u00e1 \\(k\\) khi \\(min(deg) \\geq 0\\) v\u00e0 \\(max(deg) \\leq k\\)</li> </ul> <p>V\u1edbi m\u1ed7i v\u1ecb tr\u00ed \\(i\\):</p> <ul> <li>N\u1ebfu ta \u0111i\u1ec1n m\u1ed9t ngo\u1eb7c m\u1edf \\(c\\) b\u1ea5t k\u00ec: chuy\u1ec3n sang tr\u1ea1ng th\u00e1i \\(dp(i + 1, smaller \\\\|\\\\| c &lt; s[i], deg + 1)\\)</li> <li>N\u1ebfu ta \u0111i\u1ec1n ngo\u1eb7c \u0111\u00f3ng:<ul> <li>N\u1ebfu \\(smaller=true\\): ta ch\u1ec9 c\u00f3 duy nh\u1ea5t m\u1ed9t c\u00e1ch \u0111i\u1ec1n, \u0111\u00f3 ch\u00ednh l\u00e0 \u0111i\u1ec1n m\u1ed9t d\u1ea5u ngo\u1eb7c \u0111\u00f3ng \"kh\u1edbp\" v\u1edbi d\u1ea5u ngo\u1eb7c m\u1edf g\u1ea7n nh\u1ea5t \u0111\u00e3 \u0111i\u1ec1n tr\u01b0\u1edbc \u0111\u00f3 (gi\u1ed1ng thu\u1eadt to\u00e1n Stack). Ta chuy\u1ec3n sang tr\u1ea1ng th\u00e1i \\(dp(i + 1, smaller, deg - 1)\\)</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, g\u1ecdi \\(c\\) l\u00e0 d\u1ea5u ngo\u1eb7c \u0111\u00f3ng \"kh\u1edbp\" v\u1edbi d\u1ea5u ngo\u1eb7c m\u1edf g\u1ea7n nh\u1ea5t ch\u01b0a \u0111\u01b0\u1ee3c gh\u00e9p v\u1edbi ai tr\u01b0\u1edbc \\(i\\) (\u0111\u1ec3 t\u00ecm ta d\u00f9ng stack). N\u1ebfu \\(c \\leq s_i\\), ta chuy\u1ec3n sang tr\u1ea1ng th\u00e1i \\(dp(i + 1, smaller \\\\|\\\\| c &lt; s[i], deg - 1)\\)</li> </ul> </li> <li>L\u01b0u \u00fd ph\u1ea3i ki\u1ec3m so\u00e1t tr\u1ea1ng th\u00e1i nh\u1ecf h\u01a1n khi \u0111i\u1ec1n, t\u01b0\u01a1ng t\u1ef1 c\u00e1c b\u00e0i tr\u00ean</li> </ul> <p>K\u1ebft qu\u1ea3 l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a l\u1eddi g\u1ecdi h\u00e0m \\(dp(0,0,0)\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(n^2 \\times bignum)\\)</p> C\u00e0i \u0111\u1eb7t <pre><code>BigInt f[105][105];\nbool done[105][105];\nint n, k;\nchar match[105];\nstring s;\n\nBigInt dp(int i, bool smaller, int deg) {\n  if (deg &lt; 0 || deg &gt; k) {\n    return 0;\n  }\n  if (i &gt;= n) {\n    return deg == 0;\n  }\n  if (smaller &amp;&amp; done[i][deg]) {\n    return f[i][deg];\n  }\n  BigInt ans = 0;\n  for (char c : OPEN) {\n    if (!smaller &amp;&amp; c &gt; s[i]) {\n      continue;\n    }\n    ans += dp(i + 1, smaller || c &lt; s[i], deg + 1);\n  }\n  if (smaller) {\n    ans += dp(i + 1, smaller, deg - 1);\n  } else {\n    if (match[i] &lt;= s[i]) {\n      ans += dp(i + 1, smaller || match[i] &lt; s[i], deg - 1);\n    }\n  }\n  if (smaller) {\n    done[i][deg] = 1;\n    f[i][deg] = ans;\n  }\n  return ans;\n}\n\nchar rev(char c) {\n  if (c == '(') return ')';\n  if (c == '[') return ']';\n  return '}'; // '{'\n}\n\nint32_t main(){\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin &gt;&gt; n &gt;&gt; k &gt;&gt; s;\n  stack&lt;int&gt; st;\n  for (int i = 0; i &lt; n; i++) {\n    if (!st.empty()) {\n      match[i] = rev(s[st.top()]);\n    }\n    if (OPEN.find(s[i]) != string::npos) {\n      st.push(i);\n    } else {\n      st.pop();\n    }\n  }\n  cout &lt;&lt; dp(0, 0, 0);\n  return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#bedao-oi-contest-1-bat-phuong-trinh-tuyen-tinh","title":"Bedao OI Contest 1 - B\u1ea5t ph\u01b0\u01a1ng tr\u00ecnh tuy\u1ebfn t\u00ednh","text":"L\u1eddi gi\u1ea3i <p>\u0110\u1ec3 kh\u1eed \u0111i\u1ec1u ki\u1ec7n nghi\u1ec7m nguy\u00ean d\u01b0\u01a1ng ta c\u00f3 th\u1ec3 ti\u1ebfn h\u00e0nh tr\u1eeb c\u1ea3 2 v\u1ebf c\u1ee7a b\u1ea5t ph\u01b0\u01a1ng tr\u00ecnh cho \\(a_1+ \\cdots +a_n\\) khi \u0111\u00f3 ta c\u00f3 b\u1ea5t ph\u01b0\u01a1ng tr\u00ecnh</p> <p>\\(a_1 \\times (x_1-1) +  \\cdots  + a_n \\times (x_n-1) \\leq m - a_1 -  \\cdots  -a_n (1)\\)</p> <p>\u0110\u1eb7t \\(t_i=x_i-1\\) khi \u0111\u00f3 b\u00e0i to\u00e1n chuy\u1ec3n v\u1ec1 vi\u1ec7c \u0111\u1ebfm s\u1ed1 b\u1ed9 nghi\u1ec7m \\((t_1 \\cdots t_n)\\) kh\u00f4ng \u00e2m.</p> <p>\u0110\u1ec3 kh\u1eed \u0111i\u1ec1u ki\u1ec7n \\(&lt;\\) th\u00ec ta \u0111\u1eb7t th\u00eam m\u1ed9t bi\u1ebfn \\(t_0\\) v\u1edbi h\u1ec7 s\u1ed1 \\(a_0=1\\) th\u1ec3 hi\u1ec7n hi\u1ec7u gi\u1eefa v\u1ebf ph\u1ea3i v\u00e0 v\u1ebf tr\u00e1i c\u1ee7a \\((1)\\). L\u00fac n\u00e0y b\u00e0i to\u00e1n tr\u1edf th\u00e0nh \u0111\u1ebfm s\u1ed1 nghi\u1ec7m nguy\u00ean kh\u00f4ng \u00e2m c\u1ee7a ph\u01b0\u01a1ng tr\u00ecnh</p> <p>\\(t_0 + a_1 \\times t_1 + \\cdots + a_n \\times t_n = m-a_1- \\cdots -a_n\\)</p> <p>V\u00ec l\u00ed do \\(n \\leq 10\\) v\u00e0 \\(m \\leq 10^9\\) n\u00ean c\u00e1c s\u1ed1 \\(t_0,t_1, \\cdots, t_n\\) c\u0169ng ch\u1ec9 c\u00f3 kho\u1ea3ng \\(30\\) bit. V\u1eady thay v\u00ec x\u00e2y d\u1ef1ng t\u1eebng s\u1ed1 \\(t\\) m\u1ed9t th\u00ec ta s\u1ebd x\u00e2y d\u1ef1ng t\u1eebng bit c\u1ee7a c\u1ea3 \\(n\\) s\u1ed1 m\u1ed9t l\u1ea7n.</p> <p>T\u1eeb \u0111\u00e2y ta coi \\(m=m-a_1- \\cdots - a_n\\)</p> <p>G\u1ecdi \\(f(i,rem)\\) l\u00e0 s\u1ed1 b\u1ed9 nghi\u1ec7m tho\u1ea3 m\u00e3n khi:</p> <ul> <li>x\u00e9t \u0111\u1ebfn bit th\u1ee9 \\(i\\)</li> <li>\\(rem\\) th\u1ec3 hi\u1ec7n ph\u00e9p nh\u1edb c\u1ee7a v\u1ebf tr\u00e1i hi\u1ec7n t\u1ea1i</li> </ul> <p>V\u1edbi m\u1ed7i bit th\u1ee9 \\(i\\):</p> <ul> <li>duy\u1ec7t to\u00e0n b\u1ed9 \\(mask\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(2^n -1\\) v\u1edbi \\(mask_j=0/1\\) th\u1ec3 hi\u1ec7n xem \u1edf ta s\u1ebd \u0111i\u1ec1n v\u00e0o bit th\u1ee9 \\(i\\) s\u1ed1 th\u1ee9 \\(j\\) l\u00e0 \\(0\\) ho\u1eb7c \\(1\\)</li> <li>t\u1ed5ng hi\u1ec7n t\u1ea1i cho bit th\u1ee9 \\(i\\) s\u1ebd l\u00e0 (\\(rem+\\)t\u1ed5ng c\u00e1c \\(a_j\\) v\u1edbi \\(mask_j=1\\)) mod \\(2\\). N\u1ebfu tr\u00f9ng v\u1edbi bit th\u1ee9 \\(i\\) c\u1ee7a \\(m\\) th\u00ec ta t\u00ednh \\(rem'\\) m\u1edbi v\u00e0 chuy\u1ec3n sang bit th\u1ee9 \\(i+1\\)</li> </ul> L\u01b0u \u00fd <p>\u0110\u00f4i khi kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o ta c\u0169ng \u0111\u1ed5i v\u1ec1 h\u1ec7 c\u01a1 s\u1ed1 \\(2\\), h\u00e3y bi\u1ebfn \u0111\u1ed5i linh \u0111\u1ed9ng cho t\u1eebng b\u00e0i to\u00e1n. V\u00e0 khi \u0111\u1ec1 y\u00eau c\u1ea7u m\u1ed1i quan h\u1ec7 gi\u1eefa c\u00e1c s\u1ed1 trong d\u00e3y (t\u0103ng/gi\u1ea3m d\u1ea7n ...), th\u00ec ta c\u1ea7n th\u00eam m\u1ed9t s\u1ed1 chi\u1ec1u v\u00e0o h\u00e0m quy ho\u1ea1ch \u0111\u1ed9ng \u0111\u1ec3 cho ph\u00f9 h\u1ee3p.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MOD = 1e9 + 7;\n\nvoid add(int&amp; a, int b) {\n  if ((a += b) &gt;= MOD) a -= MOD;\n}\n\nint f[31][205];\nint n, m;\nint lim;\nint a[11];\nint sum[1 &lt;&lt; 11];\n\nint dp(int i, int rem) {\n  if (i &gt; lim) return !rem;\n  int&amp; ans = f[i][rem];\n  if (ans != -1) {\n    return ans;\n  }\n  ans = 0;\n  for (int mask = 0; mask &lt; 1 &lt;&lt; n; mask++) {\n    int cur = (rem + sum[mask]) &amp; 1;\n    if (cur != (m &gt;&gt; i &amp; 1)) continue;\n    add(ans, dp(i + 1, (rem + sum[mask]) &gt;&gt; 1));\n  }\n  return ans;\n}\n\nint main() {\n  freopen(\"nequation.inp\", \"r\", stdin);\n  freopen(\"nequation.out\", \"w\", stdout);\n  cin &gt;&gt; n &gt;&gt; m;\n  a[0] = 1;\n  for (int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; a[i];\n    m -= a[i];\n  }\n  n++;\n  if (m &lt; 0) return cout &lt;&lt; 0, 0;\n  for (int mask = 0; mask &lt; 1 &lt;&lt; n; mask++) {\n    int&amp; cur = sum[mask];\n    for (int i = 0; i &lt; n; i++) {\n      if (mask &gt;&gt; i &amp; 1) {\n        cur += a[i];\n      }\n    }\n  }\n  memset(f, -1, sizeof(f));\n  lim = __lg(m + 5);\n  cout &lt;&lt; dp(0, 0);\n}\n</code></pre>"},{"location":"CP/dp-digit/#cac-ki-thuat-toi-uu","title":"C\u00e1c k\u0129 thu\u1eadt t\u1ed1i \u01b0u","text":""},{"location":"CP/dp-digit/#co-can-phai-memset-lai-khong","title":"C\u00f3 c\u1ea7n ph\u1ea3i memset l\u1ea1i kh\u00f4ng?","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u ho\u00e1 c\u01a1 b\u1ea3n nh\u1ea5t, th\u01b0\u1eddng g\u1eb7p v\u1edbi c\u00e1c b\u00e0i multitest.</p> <p>Thay v\u00ec m\u1ed7i test ph\u1ea3i memset l\u1ea1i to\u00e0n b\u1ed9 m\u1ea3ng \\(dp[state]\\), ta l\u01b0u th\u00eam m\u1ed9t m\u1ea3ng \\(pos[state]\\) v\u00e0 m\u1ed9t bi\u1ebfn \\(time\\) ch\u1ec9 th\u1eddi gian t\u00e1c \u0111\u1ed9ng \u0111\u1ebfn tr\u1ea1ng th\u00e1i \\(state\\) c\u0169ng nh\u01b0 th\u1eddi gian hi\u1ec7n t\u1ea1i. V\u1edbi m\u1ed7i test, ta t\u0103ng bi\u1ebfn \\(time\\) l\u00ean m\u1ed9t \u0111\u01a1n v\u1ecb. Sau \u0111\u00f3 trong h\u00e0m dp, ta ki\u1ec3m tra xem: n\u1ebfu \\(pos[state] = time\\), ngh\u0129a l\u00e0 tr\u1ea1ng th\u00e1i n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c t\u00ednh r\u1ed3i, th\u00ec tr\u1ea3 v\u1ec1 \\(dp[state]\\), ng\u01b0\u1ee3c l\u1ea1i, ta g\u00e1n \\(pos[state] = time\\) v\u00e0 t\u00ednh \\(dp[state]\\).</p> Pseudo Code <pre><code>Int dp(state...) {\n    if pos[state] == time:\n        return dp[state]\n    pos[state] = time\n    calculate dp[state]...\n    return dp[state]\n}\n</code></pre> <p>K\u0129 thu\u1eadt n\u00e0y c\u0169ng th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c b\u00e0i to\u00e1n kh\u00e1c, v\u00ed d\u1ee5 nh\u01b0 thu\u1eadt to\u00e1n Kuhn \u0111\u1ec3 t\u00ecm c\u1eb7p gh\u00e9p c\u1ef1c \u0111\u1ea1i.</p> <p>\u00c1p d\u1ee5ng: LIDS</p> L\u1eddi gi\u1ea3i <ul> <li>Do \\(x \\leq y \\leq 10^9\\), n\u00ean gi\u00e1 tr\u1ecb d\u00e3y con t\u0103ng d\u00e0i nh\u1ea5t t\u1ed1i \u0111a ch\u1ec9 l\u00e0 \\(9\\)</li> <li>G\u1ecdi \\(dp(i, limit, zero, last, len)\\) l\u00e0 s\u1ed1 s\u1ed1:<ul> <li>c\u00f3 gi\u00e1 tr\u1ecb nh\u1ecf h\u01a1n c\u1eadn tr\u00ean \\(R\\)</li> <li>s\u1ed1 n\u00e0y \u0111\u00e3 ch\u1eafc ch\u1eafn nh\u1ecf h\u01a1n c\u1eadn tr\u00ean ch\u01b0a</li> <li>s\u1ed1 n\u00e0y \u0111\u00e3 ch\u1eafc ch\u1eafn kh\u00e1c \\(0\\) ch\u01b0a</li> <li>ch\u1eef s\u1ed1 cu\u1ed1i c\u1ee7a m\u1ed9t d\u00e3y con t\u0103ng b\u1ea5t k\u00ec l\u00e0 \\(last\\)</li> <li>\u0111\u1ed9 d\u00e0i d\u00e3y con t\u0103ng \u0111\u00e3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c l\u00e0 \\(len\\)</li> </ul> </li> <li>V\u1edbi m\u1ed7i ch\u1eef s\u1ed1 \\(c\\) ta c\u00f3 \\(2\\) l\u1ef1a ch\u1ecdn: ho\u1eb7c th\u00eam v\u00e0o d\u00e3y con t\u0103ng \u0111ang x\u00e2y d\u1ef1ng hi\u1ec7n t\u1ea1i, ho\u1eb7c kh\u00f4ng. T\u1eeb \u0111\u00f3 x\u00e2y d\u1ef1ng c\u00e1ch chuy\u1ec3n tr\u1ea1ng th\u00e1i th\u00edch h\u1ee3p. </li> <li>\u0110\u1ec3 tr\u00e1nh tr\u00f9ng th\u00ec ta duy\u1ec7t ng\u01b0\u1ee3c \u0111\u1ed9 d\u00e0i d\u00e3y con t\u0103ng t\u1eeb \\(9\\) v\u1ec1 \\(1\\), sau \u0111\u00f3 \u0111\u1ebfm n\u1ebfu c\u00f3 k\u1ebft qu\u1ea3 \\(&gt;0\\) th\u00ec in k\u1ebft qu\u1ea3 lu\u00f4n.</li> <li>V\u1edbi m\u1ed7i test thay v\u00ec memset m\u1ea3ng \\(dp\\) th\u00ec ta c\u00f3 th\u1ec3 t\u1ea1o m\u1ea3ng \\(pos\\) nh\u01b0 h\u01b0\u1edbng d\u1eabn \u0111\u1ec3 pass. D\u0129 nhi\u00ean b\u00e0i n\u00e0y c\u00f2n c\u00f3 c\u00e1ch t\u1ed1i \u01b0u nhanh h\u01a1n, s\u1ebd \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y t\u1ea1i ph\u1ea7n sau.</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 15;\nconst int MAX_D = 15;\n\nlong long f[N][2][2][MAX_D][N];\nint vis[N][2][2][MAX_D][N], curState = 1;\nint num[N], curLen;\n\nlong long dp(int i, bool limit, bool zero, int last, int len){\n  if(i &lt; 0)\n    return len &gt;= curLen;\n\n  if(vis[i][limit][zero][last + 1][len] == curState)\n    return f[i][limit][zero][last + 1][len];\n\n  vis[i][limit][zero][last + 1][len] = curState;\n\n  int mx = limit ? num[i] : 9;\n  long long res = 0;\n\n  for(int c = 0; c &lt;= mx; c++){\n    bool newLimit = limit &amp;&amp; c == mx;\n    bool newZero = i &gt;= 1 &amp;&amp; c == 0 &amp;&amp; zero;\n\n    if(newZero == true){\n      res += dp(i - 1, newLimit, newZero, last, len);\n      continue;\n    }\n\n    res += dp(i - 1, newLimit, newZero, last, len);\n    if(c &gt; last &amp;&amp; newZero == false)\n      res += dp(i - 1, newLimit, newZero, c, len + 1);\n  }\n\n  return f[i][limit][zero][last + 1][len] = res;\n}\n\nvoid solve(){\n  int _x, _y;\n  cin &gt;&gt; _x &gt;&gt; _y;\n\n  for(curLen = 9; curLen &gt;= 1; curLen--){\n    ++curState;\n    long long curSub = 0;\n    int x = _x - 1, y = _y;\n\n    int n = 0;\n    do{\n      num[n++] = y % 10;\n      y /= 10;\n    } while(y &gt; 0);\n\n    curSub += dp(n - 1, true, true, -1, 0);\n    n = 0;\n\n    ++curState;\n\n    do{\n      num[n++] = x % 10;\n      x /= 10;\n    } while(x &gt; 0);\n\n    curSub -= dp(n - 1, true, true, -1, 0);\n\n    if(curSub &gt; 0){\n      cout &lt;&lt; curLen &lt;&lt; \" \" &lt;&lt; curSub;\n      return;\n    }\n  }\n\n  cout &lt;&lt; \"0 1\";\n}\n\nint main(){\n  ios_base::sync_with_stdio(0);\n  cin.tie(0); cout.tie(0);\n\n  int t;\n  cin &gt;&gt; t;\n\n  for(int i = 1; i &lt;= t; i++){\n    cout &lt;&lt; \"Case \" &lt;&lt; i &lt;&lt; \": \";\n    solve();\n    cout &lt;&lt; '\\n';\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#can-quan-ly-trang-thai-bien-khong","title":"C\u1ea7n qu\u1ea3n l\u00fd tr\u1ea1ng th\u00e1i bi\u00ean kh\u00f4ng?","text":"<p>Trong m\u1ed9t s\u1ed1 b\u00e0i to\u00e1n quy ho\u1ea1ch \u0111\u1ed9ng ch\u1eef s\u1ed1, ta s\u1ebd c\u1ea7n ph\u1ea3i ki\u1ec3m so\u00e1t xem: hi\u1ec7n t\u1ea1i s\u1ed1 \u0111ang x\u00e2y d\u1ef1ng \u0111\u00e3 ch\u1eafc ch\u1eafn nh\u1ecf h\u01a1n m\u1ed9t c\u1eadn tr\u00ean \\(R\\) n\u00e0o hay ch\u01b0a (v\u00e0 c\u00f3 th\u1ec3 l\u00e0 l\u1edbn h\u01a1n m\u1ed9t c\u1eadn d\u01b0\u1edbi \\(L\\) n\u00e0o \u0111\u00f3 n\u1eefa). Trong c\u00e1c b\u00e0i to\u00e1n nh\u01b0 v\u1eady, th\u00f4ng th\u01b0\u1eddng c\u00e1ch x\u1eed l\u00fd l\u00e0 l\u01b0u th\u00eam m\u1ed9t ho\u1eb7c hai chi\u1ec1u:</p> Pseudo Code <pre><code>// Gi\u1ea3 s\u1eed \u0111ang x\u00e9t b\u00e0i to\u00e1n \u0111\u1ebfm s\u1ed1 s\u1ed1 tho\u1ea3 m\u00e3n m\u1ed9t t\u00ednh ch\u1ea5t n\u00e0o \u0111\u00f3 v\u00e0 c\u00f3 gi\u00e1 tr\u1ecb n\u1eb1m trong \u0111o\u1ea1n [L, R]. Bi\u1ebfn lo v\u00e0 hi \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 ki\u1ec3m so\u00e1t xem: s\u1ed1 hi\u1ec7n t\u1ea1i \u0111ang x\u00e2y d\u1ef1ng \u0111\u00e3 ch\u1eafc ch\u1eafn &gt;=L v\u00e0 &lt;= R ch\u01b0a.\nInt dp(int pos, int lo, int hi, ...) {\n    if dp[pos, lo, hi, ...] != -1:\n        return dp[pos, lo, hi...]\n    calculate...\n}\n</code></pre> <p>L\u00e0m nh\u01b0 v\u1eady c\u00f3 c\u00e1c nh\u01b0\u1ee3c \u0111i\u1ec3m:</p> <ul> <li>Kh\u00f4ng t\u1eadn d\u1ee5ng \u0111\u01b0\u1ee3c c\u00e1c b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c t\u00ednh tr\u01b0\u1edbc \u1edf c\u00e1c c\u1eadn \\(L\\) \\(R\\) kh\u00e1c nhau, d\u1eabn \u0111\u1ebfn vi\u1ec7c ph\u1ea3i reset c\u0169ng nh\u01b0 t\u00ednh l\u1ea1i to\u00e0n b\u1ed9 m\u1ea3ng \\(dp\\), r\u1ea5t ph\u00ed.</li> <li>L\u00e0m t\u0103ng s\u1ed1 l\u01b0\u1ee3ng tr\u1ea1ng th\u00e1i ph\u1ea3i cache, g\u00e2y ch\u1eadm ch\u01b0\u01a1ng tr\u00ecnh. V\u00ec v\u1eady, c\u00f3 m\u1ed9t gi\u1ea3i ph\u00e1p l\u00e0 s\u1ebd kh\u00f4ng l\u01b0u c\u00e1c tr\u1ea1ng th\u00e1i dp v\u1edbi \\(lo = false\\) ho\u1eb7c \\(hi = false\\). V\u00e0 ta ch\u1ec9 c\u1ea7n kh\u1edfi t\u1ea1o m\u1ea3ng \\(dp\\) m\u1ed9t l\u1ea7n trong su\u1ed1t ch\u01b0\u01a1ng tr\u00ecnh (k\u1ec3 c\u1ea3 b\u00e0i c\u00f3 nhi\u1ec1u test case).</li> </ul> <p>Nh\u01b0ng v\u1edbi nhi\u1ec1u test case, \\(L\\) v\u1edbi \\(R\\) kh\u00e1c nhau th\u00ec sao?</p> Tr\u1ea3 l\u1eddi <p>L\u01b0u \u00fd, ta \u0111ang quy ho\u1ea1ch \u0111\u1ed9ng x\u00e2y d\u1ef1ng c\u00e1c c\u1ea5u h\u00ecnh v\u1edbi m\u1ed9t prefix n\u00e0o \u0111\u00f3, n\u00ean n\u1ebfu prefix \u0111\u00f3 \u0111\u1ea3m b\u1ea3o ch\u1eafc ch\u1eafn s\u1ed1 x\u00e2y d\u1ef1ng \u0111\u00e3 tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n c\u00e1c c\u1eadn r\u1ed3i, th\u00ec ph\u1ea7n \u0111\u1eb1ng sau c\u00f3 th\u1ec3 \u0111i\u1ec1n m\u1ed9t c\u00e1ch t\u1ef1 do. V\u00e0 v\u00ec v\u1eady c\u00e1c ph\u1ea7n t\u1ef1 do \u0111\u00f3 ch\u1ec9 c\u1ea7n x\u00e9t m\u1ed9t l\u1ea7n duy nh\u1ea5t trong to\u00e0n b\u1ed9 ch\u01b0\u01a1ng tr\u00ecnh. B\u00ean c\u1ea1nh \u0111\u00f3, s\u1ed1 tr\u1ea1ng th\u00e1i c\u00f3 \\(lo=false\\) ho\u1eb7c \\(hi=false\\) th\u00ec ch\u1ec9 l\u00e0 \u0111\u1ed9 d\u00e0i s\u1ed1 \\(L\\) ho\u1eb7c \\(R\\), v\u00ec \u0111\u1ec3 s\u1ed1 \\(x\\) tr\u00f9ng v\u1edbi m\u1ed9t ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(i\\) c\u1ee7a \\(R\\) th\u00ec t\u1ea5t c\u1ea3 c\u00e1c ch\u1eef s\u1ed1 c\u1ee7a ti\u1ec1n t\u1ed1 \u0111\u1ed9 d\u00e0i \\(i\\) c\u1ee7a \\(x\\) ph\u1ea3i tr\u00f9ng v\u1edbi \\(L\\) ho\u1eb7c \\(R\\). Nh\u01b0 v\u1eady s\u1ed1 prefix ta c\u1ea7n ph\u1ea3i x\u00e9t ch\u1ec9 l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a s\u1ed1 \\(L\\) ho\u1eb7c \\(R\\), v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho ph\u1ea7n n\u00e0y t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u00f3i vi\u1ec7c \u0111\u1ecdc s\u1ed1 \\(L\\) ho\u1eb7c \\(R\\). \u0110\u00e2y c\u0169ng l\u00e0 \u00fd t\u01b0\u1edfng c\u1ee7a vi\u1ec7c code dp digit \u0111\u1ebfm s\u1ed1 c\u1ea5u h\u00ecnh b\u1eb1ng v\u00f2ng for.</p> <p>\u0110\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o code b\u00e0i LIDS \u1edf v\u00ed d\u1ee5 tr\u00ean sau khi \u0111\u00e3 t\u1ed1i \u01b0u:</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 15;\nconst int MAX_D = 15;\n\nint64_t f[N][MAX_D][N][N];\nint num[N];\n\nint64_t dp(int i, bool limit, bool zero, int last, int len, int cur_len) {\n  if (i &lt; 0)\n    return len &gt;= cur_len;\n\n  if (!limit &amp;&amp; !zero &amp;&amp; f[i][last + 1][len][cur_len] != -1)\n    return f[i][last + 1][len][cur_len];\n\n  int mx = limit ? num[i] : 9;\n  int64_t res = 0;\n\n  for (int c = 0; c &lt;= mx; c++) {\n    bool new_limit = limit &amp;&amp; c == mx;\n    bool new_zero = i &gt;= 1 &amp;&amp; c == 0 &amp;&amp; zero;\n\n    if (new_zero == true) {\n      res += dp(i - 1, new_limit, new_zero, last, len, cur_len);\n      continue;\n    }\n\n    res += dp(i - 1, new_limit, new_zero, last, len, cur_len);\n    if (c &gt; last &amp;&amp; new_zero == false)\n      res += dp(i - 1, new_limit, new_zero, c, len + 1, cur_len);\n  }\n\n  return !limit &amp;&amp; !zero ? f[i][last + 1][len][cur_len] = res : res;\n}\n\nvoid solve() {\n  int _x, _y;\n  cin &gt;&gt; _x &gt;&gt; _y;\n\n  for (int cur_len = 9; cur_len &gt;= 1; cur_len--) {\n    int64_t cur_sub = 0;\n    int x = _x - 1, y = _y;\n\n    int n = 0;\n    do {\n      num[n++] = y % 10;\n      y /= 10;\n    } while (y &gt; 0);\n\n    cur_sub += dp(n - 1, true, true, -1, 0, cur_len);\n    n = 0;\n\n    do {\n      num[n++] = x % 10;\n      x /= 10;\n    } while (x &gt; 0);\n\n    cur_sub -= dp(n - 1, true, true, -1, 0, cur_len);\n\n    if (cur_sub &gt; 0) {\n      cout &lt;&lt; cur_len &lt;&lt; \" \" &lt;&lt; cur_sub;\n      return;\n    }\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n\n  memset(f, -1, sizeof(f));\n\n  int t;\n  cin &gt;&gt; t;\n\n  for (int i = 1; i &lt;= t; i++) {\n    solve();\n    cout &lt;&lt; '\\n';\n  }\n\n  return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#loi-dung-cac-tinh-chat-so-hoc","title":"L\u1ee3i d\u1ee5ng c\u00e1c t\u00ednh ch\u1ea5t s\u1ed1 h\u1ecdc","text":"<p>Ta s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t s\u1ed1 h\u1ecdc (v\u00ed d\u1ee5 nh\u01b0 li\u00ean quan \u0111\u1ebfn ph\u00e9p \u0111\u1ed3ng d\u01b0) \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 s\u1ed1 tho\u1ea3 m\u00e3n m\u1ed9t \u0111i\u1ec1u ki\u1ec7n nh\u1ea5t \u0111\u1ecbnh. \u0110\u1ec3 chi ti\u1ebft h\u01a1n, ta c\u00f9ng x\u00e9t c\u00e1c v\u00ed d\u1ee5 sau \u0111\u00e2y.</p>"},{"location":"CP/dp-digit/#chef-and-special-numbers","title":"Chef and special numbers","text":"L\u1eddi gi\u1ea3i Nh\u1eadn x\u00e9t <ul> <li>Ta s\u1ebd kh\u00f4ng c\u1ea7n ki\u1ec3m tra xem ch\u1eef s\u1ed1 \\(0\\) c\u00f3 xu\u1ea5t hi\u1ec7n hay kh\u00f4ng v\u00ec kh\u00f4ng c\u00f3 s\u1ed1 n\u00e0o chia \u0111\u01b0\u1ee3c cho \\(0\\)</li> <li>Thay v\u00ec l\u01b0u mod c\u1ee7a s\u1ed1 hi\u1ec7n t\u1ea1i v\u1edbi \\(2 \\rightarrow 9\\), ta ch\u1ec9 c\u1ea7n l\u01b0u mod c\u1ee7a s\u1ed1 hi\u1ec7n t\u1ea1i v\u1edbi \\(lcm(2,...,9)=2520\\)</li> </ul> Thu\u1eadt to\u00e1n <p>V\u1eady tr\u1ea1ng th\u00e1i dp c\u1ee7a ch\u00fang ta s\u1ebd l\u00e0 \\(dp(i,s,z,mask,mod)\\) khi:</p> <ul> <li>x\u00e9t \u0111\u1ebfn ch\u1eef s\u1ed1 th\u1ee9 \\(i\\)</li> <li>\u0111\u00e3 nh\u1ecf h\u01a1n c\u1eadn tr\u00ean ch\u01b0a</li> <li>\u0111\u00e3 c\u00f3 ch\u1eef s\u1ed1 \u0111\u1ea7u kh\u00e1c \\(0\\) ch\u01b0a</li> <li>c\u00e1c ch\u1eef s\u1ed1 \u0111\u00e3 xu\u1ea5t hi\u1ec7n l\u00e0 \\(mask\\)</li> <li>s\u1ed1 hi\u1ec7n t\u1ea1i mod \\(2520\\) c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 \\(mod\\)</li> </ul> <p>Do b\u00e0i c\u00f3 nhi\u1ec1u test case n\u00ean ta c\u00f3 th\u1ec3 cache th\u00eam m\u1ed9t tr\u1ea1ng th\u00e1i l\u00e0 \\(k\\) v\u00e0 s\u1eed d\u1ee5ng ph\u1ea7n t\u1ed1i \u01b0u gi\u1ea3m chi\u1ec1u \u1edf tr\u00ean \u0111\u1ec3 AC.</p>"},{"location":"CP/dp-digit/#vm-09-bai-04-self-divisible-number","title":"VM 09 B\u00e0i 04 - Self-divisible Number","text":"L\u1eddi gi\u1ea3i <p>\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i t\u01b0\u01a1ng t\u1ef1 b\u00e0i tr\u00ean tuy nhi\u00ean c\u1ea7n t\u1ed1i \u01b0u r\u1ea5t nhi\u1ec1u m\u1edbi c\u00f3 th\u1ec3 AC</p> <ul> <li>T\u1eeb \u0111\u1ec1 b\u00e0i d\u1ec5 th\u1ea5y s\u1ed1 c\u1ea7n t\u00ecm kh\u00f4ng \u0111\u01b0\u1ee3c c\u00f3 s\u1ed1 \\(0\\)</li> <li>V\u1edbi \\(n \\leq 500\\) ta c\u00f3 th\u1ec3 l\u00e0m t\u01b0\u01a1ng t\u1ef1 b\u00e0i tr\u00ean:<ul> <li>G\u1ecdi \\(dp(i,mask,mod)\\) l\u00e0 s\u1ed1 s\u1ed1 tho\u1ea3 m\u00e3n khi x\u00e9t \u0111\u1ebfn v\u1ecb tr\u00ed \\(i\\), \\(mask\\) th\u1ec3 hi\u1ec7n c\u00e1c ch\u1eef s\u1ed1 \u0111\u00e3 xu\u1ea5t hi\u1ec7n, v\u00e0 \\(mod\\) l\u00e0 s\u1ed1 d\u01b0 c\u1ee7a s\u1ed1 hi\u1ec7n t\u1ea1i cho \\(lcm(2, \\cdots, 9)=2520\\)</li> <li>Tuy nhi\u00ean nh\u01b0 v\u1eady v\u1eabn l\u00e0 ch\u01b0a \u0111\u1ee7. Ta nh\u1eadn th\u1ea5y, b\u1eb1ng vi\u1ec7c x\u00e1c \u0111\u1ecbnh \\(3\\) ch\u1eef s\u1ed1 cu\u1ed1i c\u00f9ng c\u1ee7a k\u1ebft qu\u1ea3 ta c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c xem s\u1ed1 \u0111\u00f3 c\u00f3 chia h\u1ebft cho \\(2,4,8,5\\) hay kh\u00f4ng. V\u1eady ta ch\u1ec9 \\(dp\\) \u0111\u1ebfn \\(n-4\\) c\u0169ng nh\u01b0 l\u01b0u mask ch\u1ec9 \u0111\u1ebfn \\(2^8\\) v\u00e0 \\(mod\\) gi\u1ea3m c\u00f2n l\u01b0u s\u1ed1 d\u01b0 khi chia cho \\(lcm(3,7,9)=63\\). C\u00f2n vi\u1ec7c x\u00e1c \u0111\u1ecbnh s\u1ed1 d\u01b0 cho \\(6\\) c\u00f3 th\u1ec3 \u0111\u01b0a v\u1ec1 vi\u1ec7c x\u00e1c \u0111\u1ecbnh chia h\u1ebft cho \\(2,3\\)</li> <li>Khi t\u00ednh k\u1ebft qu\u1ea3 ta duy\u1ec7t m\u1ecdi \\(mask,mod\\) c\u00f3 th\u1ec3, trong \u0111\u00f3 duy\u1ec7t m\u1ecdi b\u1ed9 \\(3\\) ch\u1eef s\u1ed1 cu\u1ed1i c\u00f9ng v\u00e0 t\u00ednh l\u1ea1i \\(mask,mod\\) m\u1edbi; sau \u0111\u00f3 ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n b\u00e0i to\u00e1n</li> <li>V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p ch\u1ec9 l\u00e0 \\(n \\times 2^8 \\times 63 + 2^8 \\times 63 \\times 1000\\), \u0111\u1ee7 qua subtask n\u00e0y</li> </ul> </li> <li>Tuy nhi\u00ean v\u1edbi \\(n \\leq 10^6\\) ta kh\u00f4ng th\u1ec3 l\u00e0m c\u00e1ch tr\u00ean. Ta c\u1ea7n ch\u1ec9nh s\u1eeda c\u00e1ch l\u00e0m m\u1ed9t ch\u00fat d\u1ef1a tr\u00ean t\u01b0 t\u01b0\u1edfng tr\u00ean<ul> <li>Ta t\u00ednh \\(f(i,mask,mod)\\) l\u00e0 s\u1ed1 c\u00e1ch \u0111i\u1ec1n \\(i\\) ch\u1eef s\u1ed1 \u0111\u1ea7u ti\u00ean, ch\u1ec9 \u0111\u01b0\u1ee3c d\u00f9ng c\u00e1c ch\u1eef s\u1ed1 l\u00e0 t\u1eadp con c\u1ee7a \\(mask\\), v\u00e0 s\u1ed1 d\u01b0 cho \\(63\\) l\u00e0 \\(mod\\)</li> <li>Ta kh\u00f4ng th\u1ec3 t\u00ednh \\(f(i,...)\\) trong \\(O(n \\times ...)\\). Nh\u01b0ng ta c\u00f3 m\u1ed9t trick \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o t\u1ea1i blog c\u1ee7a DeMen100ns.<ul> <li>C\u1ee5 th\u1ec3: v\u1edbi \\(f(i1, mask, mod)\\) v\u00e0 \\(f(i2, mask', mod')\\) th\u00ec ta c\u00f3 th\u1ec3 merge ch\u00fang l\u1ea1i th\u00e0nh \\(f(i1+i2, mask|mask', (mod \\times 10^{i2} + mod') \\%63)\\)</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p cho vi\u1ec7c merge 2 state \\((mask,mod)\\) v\u00e0 \\((mask',mod)\\) l\u00e0 \\((2^8 \\times 63)^2\\), qu\u00e1 l\u00e2u. V\u1eady thay v\u00ec gom c\u1ea3 \\(mask\\) v\u00e0o tr\u1ea1ng th\u00e1i, ta duy\u1ec7t \\(mask\\), t\u00ednh \\(f(n-4,mask,\\cdots)\\) theo c\u00e1ch tr\u00ean</li> </ul> </li> <li>\u0110\u1eb7t \\(F(mask,mod)=f(n-4,mask,mod)\\). </li> <li>\u0110\u1ec3 t\u00ednh s\u1ed1 c\u00e1ch d\u00f9ng \u0111\u00fang c\u00e1c ch\u1eef s\u1ed1 trong \\(mask\\), kh\u00f4ng c\u00f3 s\u1ed1 n\u00e0o ch\u1ec9 d\u00f9ng c\u00e1c ch\u1eef s\u1ed1 trong t\u1eadp con c\u1ee7a \\(mask\\) ta d\u00f9ng DP SOS.</li> <li>Cu\u1ed1i c\u00f9ng ta duy\u1ec7t \\(3\\) ch\u1eef s\u1ed1 cu\u1ed1i c\u00f9ng nh\u01b0 subtask 1.</li> </ul> </li> </ul> <p>Tuy nhi\u00ean b\u00e0i n\u00e0y c\u00f2n r\u1ea5t nhi\u1ec1u c\u00e1ch l\u00e0m kh\u00e1c nh\u01b0 vi\u1ec7c s\u1eed d\u1ee5ng c\u00e1c thu\u1eadt to\u00e1n nh\u00e2n \u0111a th\u1ee9c ho\u1eb7c c\u00f3 th\u1ec3 duy\u1ec7t \\(lcm\\) v\u00e0 s\u1eed d\u1ee5ng bao h\u00e0m lo\u1ea1i tr\u1eeb... c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc \u1edf c\u00e1c submissions.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\ntemplate &lt;int MOD_&gt;\nstruct modint {\n  static constexpr int MOD = MOD_;\n  static_assert(MOD_ &gt; 0, \"MOD must be positive\");\n\n private:\n  using ll = long long;\n  static int minv(int a, int m) {\n    a %= m;\n    assert(a);\n    return a == 1 ? 1 : int(m - ll(minv(m, a)) * ll(m) / a);\n  }\n\n public:\n  int v;\n  modint() : v(0) {}\n  modint(ll v_) : v(int(v_ % MOD)) {\n    if (v &lt; 0) v += MOD;\n  }\n  explicit operator int() const { return v; }\n  friend ostream&amp; operator&lt;&lt;(ostream&amp; out, const modint&amp; n) { return out &lt;&lt; int(n); }\n  friend istream&amp; operator&gt;&gt;(istream&amp; in, modint&amp; n) {\n    ll v_;\n    in &gt;&gt; v_;\n    n = modint(v_);\n    return in;\n  }\n  friend bool operator==(const modint&amp; a, const modint&amp; b) { return a.v == b.v; }\n  friend bool operator!=(const modint&amp; a, const modint&amp; b) { return a.v != b.v; }\n  modint inv() const {\n    modint res;\n    res.v = minv(v, MOD);\n    return res;\n  }\n  friend modint inv(const modint&amp; m) { return m.inv(); }\n  modint neg() const {\n    modint res;\n    res.v = v ? MOD - v : 0;\n    return res;\n  }\n  friend modint neg(const modint&amp; m) { return m.neg(); }\n  modint operator-() const { return neg(); }\n  modint operator+() const { return modint(*this); }\n  modint&amp; operator++() {\n    v++;\n    if (v == MOD) v = 0;\n    return *this;\n  }\n  modint&amp; operator--() {\n    if (v == 0) v = MOD;\n    v--;\n    return *this;\n  }\n  modint&amp; operator+=(const modint&amp; o) {\n    v += o.v;\n    if (v &gt;= MOD) v -= MOD;\n    return *this;\n  }\n  modint&amp; operator-=(const modint&amp; o) {\n    v -= o.v;\n    if (v &lt; 0) v += MOD;\n    return *this;\n  }\n  modint&amp; operator*=(const modint&amp; o) {\n    v = int(ll(v) * ll(o.v) % MOD);\n    return *this;\n  }\n  modint&amp; operator/=(const modint&amp; o) { return *this *= o.inv(); }\n  friend modint operator++(modint&amp; a, int) {\n    modint r = a;\n    ++a;\n    return r;\n  }\n  friend modint operator--(modint&amp; a, int) {\n    modint r = a;\n    --a;\n    return r;\n  }\n  friend modint operator+(const modint&amp; a, const modint&amp; b) { return modint(a) += b; }\n  friend modint operator-(const modint&amp; a, const modint&amp; b) { return modint(a) -= b; }\n  friend modint operator*(const modint&amp; a, const modint&amp; b) { return modint(a) *= b; }\n  friend modint operator/(const modint&amp; a, const modint&amp; b) { return modint(a) /= b; }\n};\n\nvoid debug_out() { cerr &lt;&lt; '\\n'; }\ntemplate &lt;typename Head, typename... Tail&gt;\nvoid debug_out(Head H, Tail... T) {\n  cerr &lt;&lt; \" \" &lt;&lt; H;\n  debug_out(T...);\n}\n#define debug(...) cerr &lt;&lt; \"[\" &lt;&lt; #__VA_ARGS__ &lt;&lt; \"]:\", debug_out(__VA_ARGS__)\n\nconst int N = 1e6 + 5;\nconst int MOD = 10007;\nusing mint = modint&lt;MOD&gt;;\n\nint n;\n\nnamespace solve_small {\nvoid solve() {\n  int ans = 0;\n  for (int i = 1; i &lt;= 1e5; i++) {\n    if (int(log10(i)) + 1 != n) {\n      continue;\n    }\n    bool ok = 1;\n    for (auto d : to_string(i)) {\n      d -= '0';\n      if (d == 0 || i % d) {\n        ok = 0;\n        break;\n      }\n    }\n    ans += ok;\n  }\n  cout &lt;&lt; ans;\n}\n}  // namespace solve_small\n\nint pw[N];\nmint ans[63];\nmint cur[63];\nmint nex[63];\nmint ans_for_mask[1 &lt;&lt; 10][63];\n\nvoid mul(mint a[63], mint b[63], int sz) {\n  for (int i = 0; i &lt; 63; i++) nex[i] = 0;\n  for (int i = 0; i &lt; 63; i++) {\n    if (a[i] == 0) continue;\n    for (int j = 0; j &lt; 63; j++) {\n      if (b[j] == 0) {\n        continue;\n      }\n      nex[(i * pw[sz] + j) % 63] += a[i] * b[j];\n    }\n  }\n}\n\nint __lcm(int a, int b) {\n  return a / __gcd(a, b) * b;\n}\n\nvoid cal_dp(int mask) {\n  for (int i = 0; i &lt; 63; i++) {\n    cur[i] = ans[i] = nex[i] = 0;\n  }\n  for (int digit = 1; digit &lt;= 9; digit++) {\n    if (mask &gt;&gt; (digit - 1) &amp; 1) {\n      ans[digit] = cur[digit] = 1;\n    } else {\n      ans[digit] = cur[digit] = 0;\n    }\n  }\n  int power = n - 4;\n  int lg = n - 4 &lt;= 0 ? -1 : __lg(n - 4);\n  for (int bit = 0; bit &lt;= lg; bit++) {\n    if (power &gt;&gt; bit &amp; 1) {\n      mul(ans, cur, 1 &lt;&lt; bit);\n      for (int i = 0; i &lt; 63; i++) ans[i] = nex[i];\n    }\n    mul(cur, cur, 1 &lt;&lt; bit);\n    for (int i = 0; i &lt; 63; i++) cur[i] = nex[i];\n  }\n  for (int i = 0; i &lt; 63; i++) {\n    ans_for_mask[mask][i] += ans[i];\n  }\n}\n\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n#define task \"a\"\n  if (fopen(task \".inp\", \"r\")) {\n    freopen(task \".inp\", \"r\", stdin);\n    freopen(task \".out\", \"w\", stdout);\n    freopen(task \".log\", \"w\", stderr);\n  }\n  cin &gt;&gt; n;\n  if (n &lt;= 3) {\n    solve_small::solve();\n    return 0;\n  }\n  pw[0] = 1;\n  for (int i = 1; i &lt;= n; i++) pw[i] = pw[i - 1] * 10 % 63;\n  for (int mask = 0; mask &lt; 1 &lt;&lt; 9; mask++) {\n    cal_dp(mask);\n  }\n  for (int mod = 0; mod &lt; 63; mod++) {\n    for (int i = 0; i &lt; 9; i++) {\n      for (int mask = 0; mask &lt; 1 &lt;&lt; 9; mask++) {\n        if (mask &gt;&gt; i &amp; 1)\n          ans_for_mask[mask][mod] -= ans_for_mask[mask ^ (1 &lt;&lt; i)][mod];\n      }\n    }\n  }\n  mint ret = 0;\n  for (int mask = 0; mask &lt; 1 &lt;&lt; 9; mask++) {\n    for (int mod = 0; mod &lt; 63; mod++) {\n      for (int d1 = 1; d1 &lt;= 9; d1++) {\n        for (int d2 = 1; d2 &lt;= 9; d2++) {\n          for (int d3 = 1; d3 &lt;= 9; d3++) {\n            int cur_num = d1 * 100 + d2 * 10 + d3;\n            bool ok = 1;\n            int nmask = mask | (1 &lt;&lt; (d1 - 1)) | (1 &lt;&lt; (d2 - 1)) | (1 &lt;&lt; (d3 - 1));\n            for (int modolo : {2, 4, 8, 5}) {\n              if (((nmask &gt;&gt; (modolo - 1)) &amp; 1) &amp;&amp; (cur_num % modolo)) {\n                ok = false;\n                break;\n              }\n            }\n            for (int modolo : {3, 7, 9}) {\n              int big_num = (mod * pw[3] + cur_num) % 63;\n              // 6\n              if (modolo == 3) {\n                if (nmask &gt;&gt; 5 &amp; 1) {\n                  if (big_num % 3 != 0 || cur_num % 2 != 0) {\n                    ok = false;\n                    break;\n                  }\n                }\n              }\n              if (((nmask &gt;&gt; (modolo - 1)) &amp; 1) &amp;&amp; (big_num % modolo)) {\n                ok = false;\n                break;\n              }\n            }\n            if (ok) {\n              ret += ans_for_mask[mask][mod];\n            }\n          }\n        }\n      }\n    }\n  }\n  cout &lt;&lt; ret;\n  return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#mot-cach-kiem-soat-bien-khac","title":"M\u1ed9t c\u00e1ch ki\u1ec3m so\u00e1t bi\u00ean kh\u00e1c","text":"<p>Gi\u1ea3 s\u1eed \u0111ang t\u00ednh c\u00e1c s\u1ed1 c\u00f3 gi\u00e1 tr\u1ecb \\(\\leq R\\), v\u00e0 \u0111ang x\u00e2y d\u1ef1ng s\u1ed1 \\(x\\).</p> <p>G\u1ecdi \\(lo\\) l\u00e0 v\u1ecb tr\u00ed \\(i\\) \u0111\u1ea7u ti\u00ean c\u00f3 \\(x_i&lt;R_i\\), \\(hi\\) l\u00e0 v\u1ecb tr\u00ed \\(i\\) \u0111\u1ea7u ti\u00ean c\u00f3 \\(x_i&gt;R_i\\) (\\(lo\\) ho\u1eb7c \\(hi\\) b\u1eb1ng \\(\\infty\\) n\u1ebfu kh\u00f4ng t\u1ed3n t\u1ea1i). Khi \u0111\u00f3 c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn \\(x&lt;R\\) n\u1ebfu \\(lo&lt;hi\\).</p> <p>T\u00ednh ch\u1ea5t n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c l\u1ee3i d\u1ee5ng v\u1edbi c\u00e1c b\u00e0i kh\u00f4ng th\u1ec3 x\u00e2y d\u1ef1ng c\u00e1c ch\u1eef s\u1ed1 theo th\u1ee9 t\u1ef1 t\u1eeb tr\u00e1i sang ph\u1ea3i.</p> <p>\u00c1p d\u1ee5ng:</p>"},{"location":"CP/dp-digit/#loj-1205-palindromic-number","title":"LOJ 1205 - Palindromic Number","text":"L\u1eddi gi\u1ea3i \u0110\u1ebfm b\u1eb1ng to\u00e1n h\u1ecdc <ul> <li>B\u1eb1ng vi\u1ec7c l\u1ee3i d\u1ee5ng t\u00ednh ch\u1ea5t \\(a_i=a_{n-i-1}\\) v\u1edbi \\(a[0:n-1]\\) l\u00e0 s\u1ed1 palindrome hi\u1ec7n t\u1ea1i \u0111ang x\u00e9t, ta c\u00f3 th\u1ec3 duy\u1ec7t \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 s\u1ed1 palindrome c\u00f3 \\(1 \\rightarrow n-1\\) ch\u1eef s\u1ed1.</li> <li>\u0110\u1ec3 \u0111\u1ebfm s\u1ed1 s\u1ed1 palindrome c\u00f3 \u0111\u00fang \\(n\\) ch\u1eef s\u1ed1, ta ch\u1ec9 vi\u1ec7c c\u1ed1 \u0111\u1ecbnh c\u00e1c prefix, v\u00e0 t\u00ednh s\u1ed1 c\u00e1ch \u0111\u1ec3 \u0111i\u1ec1n ph\u1ea7n c\u00f2n l\u1ea1i</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 20;\n\nint64_t f[N];\nint64_t power[N];\nint num[N];\nint a[N];\nint n;\n\nbool is_palin(int64_t x) {\n  string s = to_string(x);\n  string ss = s;\n  reverse(ss.begin(), ss.end());\n  return s == ss;\n}\n\nbool is_palin(int *arr, int n) {\n  for (int i = 0; i &lt; n; i++) {\n    if (arr[i] != arr[n - i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nint count_palin(int64_t x) {\n  if (x &lt;= 0) {\n    return 0;\n  }\n  if (x &lt;= 9) {\n    return x;\n  }\n  n = 0;\n  int64_t xx = x;\n  do {\n    num[n++] = xx % 10;\n    xx /= 10;\n  } while (xx &gt; 0);\n\n  reverse(num, num + n);\n\n  int64_t ans = 0;\n  // get rid of trailing zeros\n  for (int len = 1; len &lt; n; len++) {\n    int half = (len + 1) / 2;\n    ans += power[half] / 10 * 9;\n  }\n\n  // now length is exactly n\n  // prefix of answer &lt; prefix of current number\n  int64_t half = 0;\n  for (int i = 0; i &lt; (n + 1) / 2; i++) {\n    half = half * 10 + num[i];\n  }\n  ans += max&lt;int64_t&gt;(0, half - power[(n + 1) / 2 - 1]);\n\n  // equal prefix\n\n  for (int i = 0; i &lt; n / 2; i++) {\n    num[n - i - 1] = num[i];\n  }\n\n  if (is_palin(num, n)) {\n    int64_t value = 0;\n    for (int i = 0; i &lt; n; i++) {\n      value = value * 10 + num[i];\n    }\n    ans += value &lt;= x;\n  }\n\n  return ans;\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n\n  memset(f, -1, sizeof(f));\n\n  power[0] = 1;\n  for (int i = 1; i &lt;= 18; i++) {\n    power[i] = power[i - 1] * 10;\n  }\n\n  int q;\n  cin &gt;&gt; q;\n\n  for (int i = 1; i &lt;= q; i++) {\n    int64_t l, r;\n    cin &gt;&gt; l &gt;&gt; r;\n    if (l &gt; r) swap(l, r);\n    cout &lt;&lt; \"Case \" &lt;&lt; i &lt;&lt; \": \" &lt;&lt; count_palin(r) - count_palin(l - 1) + (l &lt;= 0 &amp;&amp; 0 &lt;= r) &lt;&lt; \"\\n\";\n  }\n\n  return 0;\n}\n</code></pre> \u0110\u1ebfm b\u1eb1ng quy ho\u1ea1ch \u0111\u1ed9ng <ul> <li>G\u1ecdi \\(n\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1eadn tr\u00ean</li> <li>G\u1ecdi \\(dp(i,lo,hi,ze)\\) l\u00e0 s\u1ed1 s\u1ed1 palindrome khi \u0111i\u1ec1n \u0111\u1ebfn ch\u1eef s\u1ed1 th\u1ee9 \\(i\\), bi\u1ebfn \\(lo,hi\\) \u00fd ngh\u0129a nh\u01b0 tr\u00ean, v\u00e0 \\(ze\\) l\u00e0 s\u1ed1 ch\u1eef s\u1ed1 \\(0\\) \u0111\u1ee9ng \u0111\u1ea7u s\u1ed1 hi\u1ec7n t\u1ea1i \u0111ang x\u00e2y d\u1ef1ng</li> <li>Do ta c\u00f3 t\u00ednh ch\u1ea5t \\(a_i=a_{n-i-1}\\) khi \\(a[0:n-1]\\) l\u00e0 s\u1ed1 \u0111\u1ed1i x\u1ee9ng, n\u00ean khi \u0111i\u1ec1n \\(a_i\\) ta s\u1ebd x\u00e1c \u0111\u1ecbnh lu\u00f4n \u0111\u01b0\u1ee3c \\(a_{j=n-i-1}\\). V\u1eady ta ch\u1ec9 c\u1ea7n \u0111i\u1ec1n m\u1ed9t n\u1eeda s\u1ed1 s\u1ebd suy \u0111\u01b0\u1ee3c c\u1ea3 c\u1ea5u h\u00ecnh</li> <li>Tuy nhi\u00ean v\u1ea5n \u0111\u1ec1 l\u00e0 ta kh\u00f4ng t\u00ednh c\u00e1c ch\u1eef s\u1ed1 \\(0\\) kh\u00f4ng h\u1ee3p l\u1ec7 \u1edf \u0111\u1ea7u s\u1ed1 c\u1ea7n \u0111i\u1ec1n, v\u1eady c\u00f4ng th\u1ee9c x\u00e1c \u0111\u1ecbnh \\(j\\) s\u1ebd kh\u00e1c m\u1ed9t ch\u00fat d\u1ef1a v\u00e0o bi\u1ebfn \\(ze\\)</li> <li>Chi ti\u1ebft c\u00f3 th\u1ec3 tham kh\u1ea3o code (ngu\u1ed3n Codeforces):</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>// i - position, l - leftmostlower, h - leftmosthigher, ze - numbers of leading zeros\nll dp(int i, int l, int h, int ze) {\n    // imagine it as n - i - 1, and plus the offset of leading zeros\n    // i is already offset by leading zeros\n    int j = n - i - 1 + ze;\n\n    if(i &gt; j) return l &lt;= h;\n    if(vis[i][l][h][ze] == cur) return mem[i][l][h][ze];\n    vis[i][l][h][ze] = cur;\n\n    ll res = 0;\n    for(int d = 0; d &lt;= 9; d++) {\n        int nl = l;\n        int nh = h;\n\n        if(d &lt; v[i] &amp;&amp; i &lt; nl) nl = i;\n        if(d &lt; v[j] &amp;&amp; j &lt; nl) nl = j;\n        if(d &gt; v[i] &amp;&amp; i &lt; nh) nh = i;\n        if(d &gt; v[j] &amp;&amp; j &lt; nh) nh = j;\n\n        res += dp(i + 1, nl, nh, ze + (i == ze &amp;&amp; d == 0));\n    }\n\n    return mem[i][l][h][ze] = res;\n}\n</code></pre>"},{"location":"CP/dp-digit/#chu-so-ep-pdigit","title":"Ch\u1eef s\u1ed1 \u0111\u1eb9p - PDIGIT","text":"L\u1eddi gi\u1ea3i <ul> <li>Thay v\u00ec x\u00e2y d\u1ef1ng l\u1ea7n l\u01b0\u1ee3t t\u1eebng v\u1ecb tr\u00ed c\u1ee7a s\u1ed1 \u0111\u00e3 cho, ta s\u1ebd x\u00e2y d\u1ef1ng l\u1ea7n l\u01b0\u1ee3t c\u00e1c \"t\u1eadp\" v\u1ecb tr\u00ed c\u1ee7a t\u1eebng ch\u1eef s\u1ed1 t\u1eeb \\(0\\) \u0111\u1ebfn \\(9\\)</li> <li>G\u1ecdi \\(dp(mask,d,lo,hi)\\) l\u00e0 s\u1ed1 s\u1ed1 tho\u1ea3 m\u00e3n:<ul> <li>\u0111\u00e3 \u0111i\u1ec1n c\u00e1c v\u1ecb tr\u00ed trong \\(mask\\)</li> <li>hi\u1ec7n t\u1ea1i \u0111ang \u0111i\u1ec1n \u0111\u1ebfn ch\u1eef s\u1ed1 th\u1ee9 \\(d\\)</li> <li>\\(lo,hi\\) c\u00f3 \u00fd ngh\u0129a nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf tr\u00ean</li> </ul> </li> <li>V\u1edbi m\u1ed7i tr\u1ea1ng th\u00e1i, ta duy\u1ec7t c\u00e1c t\u1eadp con c\u1ee7a \\((2^{11} - 1) \\oplus mask\\) (do gi\u1edbi h\u1ea1n c\u1eadn tr\u00ean \\(\\leq 10^{10}\\)) v\u00e0 ki\u1ec3m tra c\u00e1c \u0111i\u1ec1u ki\u1ec7n, r\u1ed3i chuy\u1ec3n sang tr\u1ea1ng th\u00e1i \\((mask',d+1,lo',hi')\\). </li> <li>L\u01b0u \u00fd tr\u01b0\u1eddng h\u1ee3p \u0111i\u1ec1n s\u1ed1 \\(0\\) th\u00ec s\u1ed1 ch\u1eef s\u1ed1 \\(0\\) nh\u1eadn \u0111\u01b0\u1ee3c n\u1ebfu t\u1eadp c\u00e1c v\u1ecb tr\u00ed \u0111\u01b0\u1ee3c \u0111i\u1ec1n thu\u1ed9c \\(mask\\) l\u00e0 s\u1ed1 bit \\(1\\) n\u1eb1m sau bit \\(0\\) c\u00f3 v\u1ecb tr\u00ed nh\u1ecf nh\u1ea5t.</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nbool ex[15];\nint64_t f[1 &lt;&lt; 11][12][12][10];\nbool can_use[1 &lt;&lt; 11][2];\nint cnt[1 &lt;&lt; 11][2];\nint a[15];\n\n// filled pos, left most lower, left most higher, current digit\nint64_t dp(int filled, int l, int h, int d) {\n  if (filled == (1 &lt;&lt; 11) - 1) {\n    return l &lt;= h;\n  }\n  if (d &gt;= 10) {\n    return 0;\n  }\n  int64_t &amp;ans = f[filled][l][h][d];\n  if (ans != -1) {\n    return ans;\n  }\n  ans = dp(filled, l, h, d + 1);\n  int rem = ((1 &lt;&lt; 11) - 1) ^ filled;\n  for (int fill_d = rem; fill_d &gt; 0; fill_d = (fill_d - 1) &amp; rem) {\n    if (!can_use[fill_d][bool(d)]) {\n      continue;\n    }\n    if (!ex[cnt[fill_d][bool(d)]]) {\n      continue;\n    }\n    int nl = l;\n    int nh = h;\n    for (int i = 0; i &lt; 11; i++) {\n      if (fill_d &gt;&gt; i &amp; 1) {\n        if (d &lt; a[i]) nl = min(nl, i);\n        if (d &gt; a[i]) nh = min(nh, i);\n      }\n    }\n    ans += dp(filled | fill_d, nl, nh, d + 1);\n  }\n  return ans;\n}\n\nint64_t solve(int64_t x) {\n  memset(a, 0, sizeof(a));\n  memset(f, -1, sizeof(f));\n  int n = 0;\n  do {\n    a[n++] = x % 10;\n    x /= 10;\n  } while (x &gt; 0);\n  reverse(a, a + 11);\n  return dp(0, 11, 11, 0);\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n#define task \"a\"\n  if (fopen(task \".inp\", \"r\")) {\n    freopen(task \".inp\", \"r\", stdin);\n    freopen(task \".out\", \"w\", stdout);\n  }\n  int n, k;\n  int64_t l, r;\n  cin &gt;&gt; n &gt;&gt; k &gt;&gt; l &gt;&gt; r;\n  for (int i = 1; i &lt;= n; i++) {\n    int x;\n    cin &gt;&gt; x;\n    ex[x] = 1;\n  }\n  ex[0] = 1;\n  for (int mask = 0; mask &lt; 1 &lt;&lt; 11; mask++) {\n    int m[2];\n    {\n      m[1] = mask;\n      int first_off = __builtin_ctz(mask ^ ((1 &lt;&lt; 11) - 1));\n      m[0] = mask &amp; ~((1 &lt;&lt; first_off) - 1);\n    }\n    for (int i = 0; i &lt; 2; i++) {\n      cnt[mask][i] = __builtin_popcount(m[i]);\n      int last = -1;\n      bool &amp;ok = can_use[mask][i];\n      ok = 1;\n      for (int j = 0; j &lt; 11; j++) {\n        if (m[i] &gt;&gt; j &amp; 1) {\n          if (last == -1) {\n          } else {\n            if (j - last &lt; k) {\n              ok = 0;\n              break;\n            }\n          }\n          last = j;\n        }\n      }\n    }\n  }\n  cout &lt;&lt; solve(r) - solve(l - 1);\n  return 0;\n}\n</code></pre>"},{"location":"CP/dp-digit/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>Digit DP - Codeforces</li> <li>Digit DP \"tricks\" - Codeforces</li> </ul>"},{"location":"CP/manacher/","title":"Thu\u1eadt to\u00e1n Manacher","text":"<p>D\u1ecbch t\u1eeb b\u00e0i vi\u1ebft g\u1ed1c c\u1ee7a CP-Algo.</p>"},{"location":"CP/manacher/#nhan-xet","title":"Nh\u1eadn x\u00e9t","text":"<p>Nh\u1eadn th\u1ea5y n\u1ebfu x\u00e2u \u0111\u1ed9 d\u00e0i \\(L\\) \u0111\u1ed1i x\u1ee9ng c\u00f3 t\u00e2m t\u1ea1i \\(i\\), th\u00ec x\u00e2u \u0111\u1ed9 d\u00e0i \\(L-2,L-4,\\cdots\\) c\u00f3 t\u00e2m \u0111\u1eb7t t\u1ea1i \\(i\\) c\u0169ng s\u1ebd \u0111\u1ed1i x\u1ee9ng.</p>"},{"location":"CP/manacher/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li>C\u00e1c k\u00ed t\u1ef1 \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb \\(1\\).</li> <li>\\(d_{1i}\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t \u0111\u1eb7t t\u1ea1i \\(i\\) (kh\u00f4ng t\u00ednh \\(i\\)). V\u00ed d\u1ee5 x\u00e2u \\(s = abababc\\) c\u00f3 \\(d_{1}[4]=3\\):</li> </ul> \\[a\\ \\overbrace{b\\ a\\ \\underbrace{b}_{s_4}\\ a\\ b}^{d_{1}[4]=3} c\\] <ul> <li>\\(d_{2i}\\) l\u00e0 \u0111\u1ed9 d\u00e0i c\u1ee7a x\u00e2u \u0111\u1ed1i x\u1ee9ng d\u00e0i nh\u1ea5t c\u00f3 t\u00e2m ch\u1eb5n t\u1ea1i \\(i\\), ngh\u0129a l\u00e0 x\u00e2u c\u00f3 t\u00e2m l\u00e0 2 k\u00ed t\u1ef1 \\(s_i\\) v\u00e0 \\(s_{i+1}\\). V\u00ed d\u1ee5 x\u00e2u \\(s = cbaabd\\) c\u00f3 \\(d_{2}[4]=2\\):</li> </ul> \\[c\\ \\overbrace{b\\ a\\ \\underbrace{a}_{s_4}\\ b}^{d_{2}[4]=2} d\\] <ul> <li>V\u1edbi m\u1ed7i v\u1ecb tr\u00ed \\(i\\), g\u1ecdi \\(l, r\\) l\u00e0 v\u1ecb tr\u00ed c\u1ee7a x\u00e2u palindrome g\u1ea7n v\u1edbi v\u1ecb tr\u00ed \\(i\\) nh\u1ea5t (b\u00ean ph\u1ea3i nh\u1ea5t) t\u00ednh \u0111\u1ebfn th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i. Ban \u0111\u1ea7u \\(l = 0, r = -1\\).</li> </ul>"},{"location":"CP/manacher/#giai-thuat","title":"Gi\u1ea3i thu\u1eadt","text":""},{"location":"CP/manacher/#tinh-mang-d_1","title":"T\u00ednh m\u1ea3ng \\(d_1\\)","text":"<p>V\u1edbi m\u1ed7i v\u1ecb tr\u00ed \\(i\\), ta x\u00e9t c\u00e1c tr\u01b0\u1eddng h\u1ee3p sau:</p> <ul> <li> <p>N\u1ebfu \\(i&gt;r\\), ch\u1ea1y thu\u1eadt to\u00e1n tr\u00e2u:</p> <pre><code>while (i - d1[i] &gt;= 1 and i + d1[i] &lt;= n and s[i - d1[i]] = s[i + d1[i]]) \n    d1[i] += 1\n</code></pre> </li> <li> <p>Ng\u01b0\u1ee3c l\u1ea1i, x\u00e9t tr\u01b0\u1eddng h\u1ee3p \\(i \\leq r\\), ngh\u0129a l\u00e0 \\(i\\) thu\u1ed9c v\u00e0o \u0111o\u1ea1n palin g\u1ea7n nh\u1ea5t \u0111ang x\u00e9t. Nh\u1eadn th\u1ea5y \u1edf \u0111o\u1ea1n \\([l,r]\\), v\u1ecb tr\u00ed \u0111\u1ed1i x\u1ee9ng v\u1edbi v\u1ecb tr\u00ed \\(i\\) qua t\u00e2m \\(\\frac{l+r}{2}\\) l\u00e0 v\u1ecb tr\u00ed \\(l+(r-i)\\). \u0110\u1eb7t \\(j=l+(r-i)\\). \u1ede \u0111\u00e2y ta ti\u1ebfp t\u1ee5c c\u00f3 \\(2\\) tr\u01b0\u1eddng h\u1ee3p con:</p> <ul> <li>\u0110o\u1ea1n \\([j-d_{1j}+1,j+d_{1j}-1]\\) n\u1eb1m trong \u0111o\u1ea1n \\([l,r]\\). V\u00ec \\(s_j\\) \u0111\u1ed1i x\u1ee9ng v\u1edbi \\(s_i\\) m\u00e0 \u0111o\u1ea1n to \\([l,r]\\) \u0111\u1ed1i x\u1ee9ng qua t\u00e2m \\(\\Rightarrow\\) \u0111o\u1ea1n \\([j-d_{1j}+1,j+d_{1j}-1]\\) v\u00e0 \\([i-d_{1j}+1,i+d_{1j}-1]\\)  \u0111\u1ed1i x\u1ee9ng. Nh\u01b0 v\u1eady ta g\u00e1n \\(d_{1i} = d_{1j}\\).</li> </ul> \\[ \\ldots\\  \\overbrace{     s_{l+1}\\ \\ldots\\      \\underbrace{         s_{j-d_{odd}[j]+1}\\ \\ldots\\ s_j\\ \\ldots\\ s_{j+d_{odd}[j]-1}\\      }_\\text{palindrome}\\      \\ldots\\      \\underbrace{         s_{i-d_{odd}[j]+1}\\ \\ldots\\ s_i\\ \\ldots\\ s_{i+d_{odd}[j]-1}\\      }_\\text{palindrome}\\      \\ldots\\ s_{r-1}\\  }^\\text{palindrome}\\  \\ldots \\] <ul> <li>\u0110o\u1ea1n \\([j-d_{1j}+1,j+d_{1j}-1]\\) ch\u1ec9 giao 1 ph\u1ea7n v\u1edbi \u0111o\u1ea1n \\([l,r]\\). L\u00fac n\u00e0y ta kh\u00f4ng th\u1ec3 k\u1ebft lu\u1eadn \u0111\u01b0\u1ee3c \\(d_{1i} = d_{1j}\\), b\u1edfi v\u00ec m\u00ecnh kh\u00f4ng qu\u1ea3n l\u00fd c\u00e1i ph\u1ea7n n\u1eb1m ngo\u00e0i \u0111o\u1ea1n \\([l,r]\\), n\u00ean ch\u01b0a \u0111\u1ee7 c\u01a1 s\u1edf \u0111\u1ec3 kh\u1eb3ng \u0111\u1ecbnh \\(d_{1i} = d_{1j}\\). Khi \u0111\u00f3 ta g\u00e1n \\(d_{1i}=r-i\\), v\u00e0 ti\u1ebfp t\u1ee5c ch\u1ea1y thu\u1eadt tr\u00e2u \u0111\u1ec3 m\u1edf r\u1ed9ng t\u00e2m ra.</li> </ul> \\[ \\ldots\\  \\overbrace{     \\underbrace{         s_{l+1}\\ \\ldots\\ s_j\\ \\ldots\\ s_{j+(j-l)-1}\\      }_\\text{palindrome}\\      \\ldots\\      \\underbrace{         s_{i-(r-i)+1}\\ \\ldots\\ s_i\\ \\ldots\\ s_{r-1}     }_\\text{palindrome}\\  }^\\text{palindrome}\\  \\underbrace{     \\ldots \\ldots \\ldots \\ldots \\ldots }_\\text{try moving here} \\] </li> <li> <p>L\u01b0u \u00fd, sau khi x\u00e9t t\u1ea5t c\u1ea3 TH tr\u00ean xong, ta c\u1ea7n c\u1eadp nh\u1eadt l\u1ea1i v\u1ecb tr\u00ed c\u1ee7a bi\u00ean \\(l\\) v\u00e0 \\(r\\)</p> <pre><code>if (i + d1[i] &gt; r) l = i - d1[i], r = i + d1[i];\n</code></pre> </li> </ul>"},{"location":"CP/manacher/#tinh-mang-d_2","title":"T\u00ednh m\u1ea3ng \\(d_2\\)","text":"<p>Th\u00eam c\u00e1c k\u00ed t\u1ef1 <code>DUMMY</code> v\u00e0o \u0111\u1ea7u, cu\u1ed1i, v\u00e0 gi\u1eefa c\u00e1c k\u00ed t\u1ef1 x\u00e2u, ngh\u0129a l\u00e0 c\u00e1c k\u00ed t\u1ef1 m\u00e0 kh\u00f4ng bao gi\u1edd xu\u1ea5t hi\u1ec7n trong x\u00e2u. V\u00ed d\u1ee5 x\u00e2u <code>orz</code> tr\u1edf th\u00e0nh <code>.o.r.z.</code> v\u1edbi <code>DUMMY = .</code>.</p> <p>Ch\u1ea1y thu\u1eadt to\u00e1n Manacher v\u1edbi t\u00e2m l\u1ebb tr\u00ean x\u00e2u m\u1edbi, t\u1ea1m g\u1ecdi m\u1ea3ng n\u00e0y l\u00e0 m\u1ea3ng \\(d[]\\). L\u00fac n\u00e0y nh\u1eadn th\u1ea5y c\u00e1c x\u00e2u \u0111\u1ed1i x\u1ee9ng t\u00e2m ch\u1eb5n tr\u00ean x\u00e2u g\u1ed1c \u0111\u00e3 tr\u1edf th\u00e0nh x\u00e2u \u0111\u1ed1i x\u1ee9ng t\u00e2m l\u1ebb v\u1edbi t\u00e2m \u0111\u1eb7t t\u1ea1i c\u00e1c k\u00ed t\u1ef1 DUMMY tr\u00ean x\u00e2u m\u1edbi. Nh\u01b0 v\u1eady ta c\u00f3 \\(d_{2i}=\\dfrac{d_{2 \\times i + 1}}{2}\\) (v\u00ec th\u00eam c\u00e1c k\u00ed t\u1ef1 DUMMY l\u00e0m s\u1ed1 k\u00ed t\u1ef1 g\u1ea5p \u0111\u00f4i l\u00ean)</p>"},{"location":"CP/manacher/#o-phuc-tap","title":"\u0110\u1ed9 ph\u1ee9c t\u1ea1p","text":"<p>Nh\u1eadn x\u00e9t m\u1ed7i l\u1ea7n l\u1eb7p \\(r\\) s\u1ebd \u0111\u01b0\u1ee3c t\u0103ng l\u00ean \u00edt nh\u1ea5t \\(1\\) \u0111\u01a1n v\u1ecb, v\u00e0 \\(r\\) kh\u00f4ng th\u1ec3 n\u00e0o b\u1ecb gi\u1ea3m \u0111i, n\u00ean \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a thu\u1eadt to\u00e1n s\u1ebd l\u00e0 \\(O(n)\\).</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o chi ti\u1ebft ch\u1ee9ng minh t\u1ea1i link \u1edf \u0111\u1ea7u b\u00e0i.</p>"},{"location":"CP/manacher/#cai-at-mau","title":"C\u00e0i \u0111\u1eb7t m\u1eabu","text":"C\u00e0i \u0111\u1eb7t c\u1ee7a t\u00e1c gi\u1ea3 <pre><code>// AC submission for https://cses.fi/problemset/task/1111/\n\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 1e6 + 5;\nconst char DUMMY = '.';\n\n// 1-indexed\nint odd_center[N];\nint even_center[N];\nint d[N * 2];\n\nvoid odd_manacher(string s, int *p) {\n    int n = s.size();\n    s = DUMMY + s + DUMMY;\n    int l = 0, r = -1;\n\n    int dem = 0;\n\n    for (int i = 1; i &lt;= n; i++) {\n        if (i &gt; r)\n            p[i] = 0;\n        else\n            p[i] = min(r - i, p[l + (r - i)]);\n        while (i - p[i] &gt;= 1 &amp;&amp; i + p[i] &lt;= n &amp;&amp; s[i - p[i]] == s[i + p[i]])\n            p[i]++;\n        p[i]--;\n\n        if (i + p[i] &gt; r)\n            l = i - p[i],\n            r = i + p[i];\n    }\n}\n\nvoid even_manacher(string s, int *p) {\n    int n = s.size();\n    string t = \"\";\n    for (char ch: s) {\n        t += '.';\n        t += ch;\n    }\n    t += '.';\n    odd_manacher(t, d);\n    for (int i = 1; i &lt;= n; i++) {\n        p[i] = d[2 * i - 1] / 2;\n    }\n}\n\nint main(){\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    string s;\n    cin &gt;&gt; s;\n    int n = s.size();\n\n    odd_manacher(s, odd_center);\n    even_manacher(s, even_center); \n\n    int best_l = -1, best_r = -1;\n    s = ' ' + s;\n\n    for (int i = 1; i &lt;= n; i++) {\n        int l = i - odd_center[i], r = i + odd_center[i];\n        if (r - l + 1 &gt; best_r - best_l + 1)\n            best_l = l, best_r = r;\n        l = i - even_center[i], r = i + even_center[i] - 1;\n        if (l &gt;= 1 &amp;&amp; r &lt;= n &amp;&amp; l &lt;= r &amp;&amp; r - l + 1 &gt; best_r - best_l + 1)\n            best_l = l, best_r = r;\n    }\n\n    cout &lt;&lt; s.substr(best_l, best_r - best_l + 1);\n    return 0;\n}\n</code></pre> C\u00e0i \u0111\u1eb7t c\u1ee7a kc97ble <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nbool maximize(int &amp;a, int b) {\n    if (a &lt; b)\n        a = b;\n    else\n        return false;\n    return true;\n}\n\nvoid prepare(char a[], char b[]) {\n    int cnt = 0;\n    b[++cnt] = '#';\n    for (int i = 1; a[i]; i++) {\n        b[++cnt] = a[i];\n        b[++cnt] = '#';\n    }\n    b[++cnt] = 0;\n    b[0] = '^';\n}\n\nint manacher(char b[]) {\n    int C = 1, R = 1, n = strlen(b + 1);\n    int *P = new int[n + 2], r = 0;\n    for (int i = 2; i &lt; n; i++) {\n        int i_mirror = 2 * C - i;\n        P[i] = (R &gt; i) ? min(R - i, P[i_mirror]) : 0;\n        while (b[i - 1 - P[i]] == b[i + 1 + P[i]]) P[i]++;\n        maximize(r, P[i]);\n        if (i + P[i] &gt; R) {\n            C = i;\n            R = i + P[i];\n        }\n    }\n    delete[] P;\n    return r;\n}\n\n#define N 50004\nchar a[N], b[2 * N];\n\nint main() {\n    ios::sync_with_stdio(false);\n    int n;\n    cin &gt;&gt; n &gt;&gt; (a + 1);\n    prepare(a, b);\n    cout &lt;&lt; manacher(b) &lt;&lt; endl;\n}\n</code></pre>"},{"location":"CP/manacher/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>CSES - Longest Palindrome</li> <li>AtCoder - Palindrome Construction </li> <li>Library Checker - Enumerate Palindromes</li> <li>Longest Palindrome</li> <li>UVA 11475 - Extend to Palindrome</li> <li>GYM - (Q) QueryreuQ</li> <li>CF - Prefix-Suffix Palindrome</li> <li>SPOJ - Number of Palindromes</li> <li>Kattis - Palindromes</li> </ul>"},{"location":"CP/offline-incremental-scc/","title":"Offline Incremental SCC","text":"<p>Dynamic Connectivity ch\u1eafc h\u1eb3n l\u00e0 m\u1ed9t l\u1edbp b\u00e0i to\u00e1n kh\u00e1 quen thu\u1ed9c v\u1edbi d\u00e2n CP, v\u00e0 \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng r\u1ed9ng r\u00e3i trong nhi\u1ec1u b\u00e0i to\u00e1n kh\u00e1c nhau. Tuy nhi\u00ean, c\u00e1c l\u1edbp b\u00e0i to\u00e1n n\u00e0y ch\u1ec9 khai th\u00e1c tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng, c\u00f2n v\u1ec1 v\u1ea5n \u0111\u1ec1 li\u00ean th\u00f4ng \u0111\u1ed9ng tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng th\u00ec ch\u01b0a \u0111\u01b0\u1ee3c quan t\u00e2m nhi\u1ec1u. B\u00e0i vi\u1ebft n\u00e0y s\u1ebd gi\u1edbi thi\u1ec7u v\u1ec1 m\u1ed9t thu\u1eadt to\u00e1n \u0111\u1ec3 qu\u1ea3n l\u00fd c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh tr\u00ean \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng, v\u00e0 m\u1ed9t v\u00e0i \u00e1p d\u1ee5ng c\u01a1 b\u1ea3n c\u1ee7a n\u00f3.</p>"},{"location":"CP/offline-incremental-scc/#bai-toan","title":"B\u00e0i to\u00e1n","text":"<p>Cho \u0111\u1ed3 th\u1ecb \\(G\\) g\u1ed3m \\(n\\) \u0111\u1ec9nh v\u00e0 \\(m\\) c\u1ea1nh v\u00f4 h\u01b0\u1edbng \u0111\u01b0\u1ee3c th\u00eam v\u00e0o \\(G\\) l\u1ea7n l\u01b0\u1ee3t theo th\u1ee9 t\u1ef1 \u0111\u1ecdc v\u00e0o. Sau m\u1ed7i l\u1ea7n th\u00eam c\u1ea1nh, ta c\u1ea7n tr\u1ea3 l\u1eddi m\u1ed9t s\u1ed1 th\u00f4ng tin v\u1ec1 c\u00e1c th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh trong \\(G\\). V\u00ed d\u1ee5:</p> <ul> <li>t\u00ecm th\u1eddi \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean m\u00e0 \\(u\\) v\u00e0 \\(v\\) c\u00f9ng SCC.</li> <li>t\u00ecm k\u00edch th\u01b0\u1edbc SCC ch\u1ee9a \\(u\\) sau khi \\(i\\) c\u1ea1nh \u0111\u01b0\u1ee3c th\u00eam v\u00e0o.</li> </ul> <p>L\u01b0u \u00fd: \u00fd t\u01b0\u1edfng ch\u1ec9 c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c khi ta bi\u1ebft tr\u01b0\u1edbc t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n.</p>"},{"location":"CP/offline-incremental-scc/#nhan-xet","title":"Nh\u1eadn x\u00e9t","text":"<p>G\u1ecdi \\(S(u,i)\\) l\u00e0 t\u1eadp c\u00e1c \u0111\u1ec9nh c\u00f9ng SCC v\u1edbi \\(u\\) khi \u0111\u00e3 th\u00eam \\(i\\) c\u1ea1nh \u0111\u1ea7u ti\u00ean v\u00e0o \\(G\\).</p> <p>Thu\u1eadt to\u00e1n \u0111\u01b0\u1ee3c \u0111\u01b0a ra d\u1ef1a v\u00e0o nh\u1eadn x\u00e9t kh\u00e1 d\u1ec5 th\u1ea5y:</p> <p>V\u1edbi m\u1ecdi c\u1eb7p \\((u,v)\\) ta c\u00f3 \\(S(u,j) \\neq S(v,j) \\Rightarrow S(u,k) \\neq S(v,k) \\ \\forall k \\leq j\\), ngh\u0129a l\u00e0 n\u1ebfu t\u1ea1i th\u1eddi \u0111i\u1ec3m \\(j\\) m\u00e0 \\(u\\) v\u00e0 \\(v\\) ch\u01b0a c\u00f9ng thu\u1ed9c m\u1ed9t SCC, th\u00ec t\u1ea1i c\u00e1c th\u1eddi \u0111i\u1ec3m \\(k \\le j\\), ch\u00fang c\u0169ng kh\u00f4ng th\u1ec3 thu\u1ed9c c\u00f9ng m\u1ed9t SCC.</p> <p>Nh\u01b0 v\u1eady, v\u1edbi m\u1ed7i c\u1ea1nh \\(E_i = (u,v)\\), ta g\u1ecdi \\(t_i = \\arg \\min_j \\left(S(u,j)=S(v,j) \\right)\\) (v\u00e0 b\u1eb1ng v\u00f4 c\u00f9ng n\u1ebfu nh\u01b0 kh\u00f4ng bao gi\u1edd \\(S(u)=S(v)\\)). D\u1ec5 th\u1ea5y r\u1eb1ng s\u1ef1 xu\u1ea5t hi\u1ec7n c\u1ee7a \\(E_i\\) trong \\(G\\) kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn b\u1ea5t k\u00ec m\u1ed9t SCC n\u00e0o cho \u0111\u1ebfn khi \\(t_i\\) c\u1ea1nh \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c th\u00eam v\u00e0o.</p> <p>B\u00ean c\u1ea1nh \u0111\u00f3, khi ta t\u00ednh \u0111\u01b0\u1ee3c \\(t[.]\\) cho t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh, th\u00ec vi\u1ec7c x\u1eed l\u00ed c\u00e1c truy v\u1ea5n t\u1ea1i th\u1eddi \u0111i\u1ec3m th\u1ee9 \\(i\\) c\u0169ng d\u1ec5 d\u00e0ng h\u01a1n r\u1ea5t nhi\u1ec1u, do ta ch\u1ec9 c\u1ea7n xem c\u00e1c cung trong c\u00f9ng m\u1ed9t SCC l\u00e0 m\u1ed9t c\u1ea1nh v\u00f4 h\u01b0\u1edbng, t\u1eeb \u0111\u00f3 c\u00f3 th\u1ec3 x\u1eed l\u00ed b\u1eb1ng c\u00e1c k\u0129 thu\u1eadt tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng (v\u00ed d\u1ee5 nh\u01b0 DSU).</p> <p>Do \u0111\u00f3, v\u1ea5n \u0111\u1ec1 c\u1ee7a ta l\u00e0 \u0111i t\u00ednh t\u1ea5t c\u1ea3 c\u00e1c \\(t_i\\). Tuy nhi\u00ean, n\u1ebfu ta t\u00ednh b\u00ecnh th\u01b0\u1eddng th\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n^2)\\), d\u0129 nhi\u00ean kh\u00f4ng qua \u0111\u01b0\u1ee3c n\u1ebfu gi\u1edbi h\u1ea1n l\u1edbn. Tuy nhi\u00ean, ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng m\u1ed9t thu\u1eadt to\u00e1n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 ch\u1eb7t nh\u1ecb ph\u00e2n song song \u0111\u1ec3 t\u00ednh to\u00e0n b\u1ed9 m\u1ea3ng \\(t[]\\) trong \\(O(n \\log n)\\), v\u00e0 s\u1ebd \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y ngay sau \u0111\u00e2y.</p>"},{"location":"CP/offline-incremental-scc/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":""},{"location":"CP/offline-incremental-scc/#thuat-toan-chung","title":"Thu\u1eadt to\u00e1n chung","text":"<p>Ta s\u1ebd th\u1ef1c hi\u1ec7n chia \u0111\u1ec3 tr\u1ecb tr\u00ean \u0111o\u1ea1n th\u1eddi gian c\u00e1c c\u1ea1nh \u0111\u01b0\u1ee3c th\u00eam v\u00e0o b\u1eb1ng c\u00e1ch c\u00e0i \u0111\u1eb7t m\u1ed9t h\u00e0m \u0111\u1ec7 quy \\(\\text{rec}(l,r,\\text{edge list})\\) v\u1edbi \\([l,r]\\) l\u00e0 kho\u1ea3ng th\u1eddi gian hi\u1ec7n t\u1ea1i ch\u00fang ta \u0111ang x\u00e9t v\u00e0 \\(\\text{edge list}\\) l\u00e0 danh s\u00e1ch c\u1ea1nh c\u00f3 th\u1ec3 l\u00e0m \u1ea3nh h\u01b0\u1edfng c\u1ea5u tr\u00fac SCC t\u1ea1i c\u00e1c th\u1eddi \u0111i\u1ec3m \\(x\\) m\u00e0 \\(l \\leq x \\leq r\\), ngh\u0129a l\u00e0 \\(l \\leq t_i \\leq r\\).</p> <ul> <li>\u0110\u1eb7t \\(\\text{mid} = \\lfloor \\frac{l+r}{2} \\rfloor\\)</li> <li>Ta t\u00ecm t\u1ea5t c\u1ea3 c\u00e1c SCC \u0111\u01b0\u1ee3c h\u00ecnh th\u00e0nh t\u1eeb c\u00e1c c\u1ea1nh trong \\(\\text{edge list}\\) v\u00e0 c\u00f3 th\u1eddi gian xu\u1ea5t hi\u1ec7n \\(\\leq \\text{mid}\\) v\u00e0o \u0111\u1ed3 th\u1ecb \u0111\u01b0\u1ee3c h\u00ecnh th\u00e0nh b\u1edfi c\u00e1c c\u1ea1nh n\u00e0y</li> <li>V\u1edbi m\u1ed7i c\u1ea1nh \\((u,v)\\) c\u00f3 th\u1eddi gian xu\u1ea5t hi\u1ec7n \\(\\leq \\text{mid}\\), n\u1ebfu \\(u\\) v\u00e0 \\(v\\) chung m\u1ed9t SCC th\u00ec ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn \\(t_i \\leq \\text{mid}\\), ng\u01b0\u1ee3c l\u1ea1i \\(t_i &gt;\\text{mid}\\). Chia c\u00e1c c\u1ea1nh n\u00e0y th\u00e0nh hai nh\u00f3m t\u01b0\u01a1ng \u1ee9ng l\u00e0 \\(G_1\\) v\u00e0 \\(G_2\\).</li> <li>L\u01b0u l\u1ea1i c\u00e1c th\u00f4ng tin c\u1ea7n s\u1eed d\u1ee5ng</li> <li>G\u1ecdi \\(\\text{rec}(l,mid-1,G_1)\\)</li> <li>T\u1eeb nh\u1eadn x\u00e9t, ta bi\u1ebft ch\u1eafc ch\u1eafn c\u00e1c c\u1ea1nh n\u1ed1i 2 \u0111\u1ec9nh chung SCC (ngh\u0129a l\u00e0 c\u00e1c c\u1ea1nh trong \\(G_1\\)) sau th\u1eddi \u0111i\u1ec3m n\u00e0y s\u1ebd v\u1eabn n\u1ed1i 2 \u0111\u1ec9nh chung SCC, do \u0111\u00f3 ta c\u00f3 th\u1ec3 n\u00e9n to\u00e0n b\u1ed9 c\u00e1c SCC \u0111\u01b0\u1ee3c h\u00ecnh th\u00e0nh qua vi\u1ec7c th\u00eam c\u00e1c c\u1ea1nh trong \\(G_1\\)</li> <li>G\u1ecdi \\(\\text{rec}(\\text{mid}+1,r,G_2)\\). L\u01b0u \u00fd: vi\u1ec7c g\u1ecdi h\u00e0m n\u00e0y ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean \u0111\u1ed3 th\u1ecb m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o ra sau khi \u0111\u00e3 n\u00e9n c\u00e1c SCC \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1edfi vi\u1ec7c th\u00eam c\u00e1c c\u1ea1nh trong \\(G_1\\)</li> </ul> <p>L\u01b0u \u00fd r\u1eb1ng khi ta th\u1ef1c hi\u1ec7n h\u00e0m \\(\\text{rec}(l,r,\\text{edge list})\\), c\u00e1c thao t\u00e1c t\u00ecm SCC hay ki\u1ec3m tra hai \u0111\u1ec9nh thu\u1ed9c c\u00f9ng m\u1ed9t SCC ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean \u0111\u1ed3 th\u1ecb n\u00e9n khi \u0111\u00e3 n\u1ed1i c\u00e1c c\u1ea1nh c\u00f3 \\(t_i&lt;l\\), khi \u0111\u00f3 ta m\u1edbi c\u00f3 \u0111\u1ee7 d\u1eef ki\u1ec7n \u0111\u1ec3 ti\u1ebfp t\u1ee5c n\u1ed1i c\u00e1c c\u1ea1nh trong \\(\\text{edge list}\\) c\u00f3 th\u1eddi gian xu\u1ea5t hi\u1ec7n \\(\\leq \\text{mid}\\). Vi\u1ec7c n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n m\u1ed9t c\u00e1ch d\u1ec5 d\u00e0ng b\u1eb1ng c\u00e1ch duy tr\u00ec m\u1ed9t \u0111\u1ed3 th\u1ecb to\u00e0n c\u1ee5c \\(G\\) v\u00e0 ti\u1ebfn h\u00e0nh \u0111\u1ec7 quy theo \u0111\u00fang th\u1ee9 t\u1ef1 n\u00eau tr\u00ean.</p> <p>\u1ede m\u1ed7i t\u1ea7ng \u0111\u1ec7 quy, ta \u0111\u1ea3m b\u1ea3o m\u1ed7i c\u1ea1nh ch\u1ec9 \u0111\u01b0\u1ee3c x\u00e9t \u0111\u1ebfn duy nh\u1ea5t m\u1ed9t l\u1ea7n. Khi DFS, ta ch\u1ec9 x\u00e9t c\u00e1c \u0111\u1ec9nh xu\u1ea5t hi\u1ec7n trong \u00edt nh\u1ea5t m\u1ed9t c\u1ea1nh. Do \u0111\u00f3, t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a vi\u1ec7c chia \u0111\u1ec3 tr\u1ecb v\u1eabn l\u00e0 \\(O(n \\log n)\\).</p> <p>M\u00e3 gi\u1ea3 c\u1ee7a thu\u1eadt to\u00e1n:</p> Pseudo Code <pre><code>G = \u0111\u1ed3 th\u1ecb r\u1ed7ng\ndef f(l, r, edge list):\nif l &gt; r:\n    return\nmid = (l + r) &gt;&gt; 1\nreset c\u1ea5u tr\u00fac SCC\n// \u0111\u1ea3m b\u1ea3o c\u00e1c c\u1ea1nh c\u00f3 ch\u1ec9 s\u1ed1 &lt; l \u0111\u00e3 \u0111\u01b0\u1ee3c n\u1ed1i\n// v\u1eady ta ch\u1ec9 c\u1ea7n quan t\u00e2m c\u00e1c c\u1ea1nh trong t\u1eadp edge list v\u00e0 c\u00f3 ch\u1ec9 s\u1ed1 &lt;= mid\nfor [u, v] in edge list:\n    if i &lt;= mid:\n    u = SCC ch\u1ee9a u trong G\n    v = SCC ch\u1ee9a v trong G\n    th\u00eam c\u1ea1nh u-&gt;v v\u00e0o c\u1ea5u tr\u00fac SCC\nt\u00ecm c\u00e1c SCC\nG1, G2 = danh s\u00e1ch c\u1ea1nh r\u1ed7ng\nfor [u, v] in edge list:\n    u = SCC ch\u1ee9a u trong G\n    v = SCC ch\u1ee9a v trong G\n    if i &lt;= mid:\n    if scc[u] == scc[v]:\n        th\u00eam u-&gt;v v\u00e0o G1 // u-&gt;v c\u00f3 th\u1ec3 \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn c\u1ea5u tr\u00fac t\u1ea1i th\u1eddi \u0111i\u1ec3m tr\u01b0\u1edbc \u0111\u00e2y\n    else:\n        th\u00eam u-&gt;v v\u00e0o G2 // u-&gt;v ch\u01b0a \u1ea3nh h\u01b0\u1edfng g\u00ec\n    else:\n    th\u00eam u-&gt;v v\u00e0o G2 // u-&gt;v ch\u01b0a xu\u1ea5t hi\u1ec7n n\u00ean r\u00f5 r\u00e0ng kh\u00f4ng thay \u0111\u1ed5i g\u00ec cho c\u1ea5u tr\u00fac\nf(l, mid-1, G1)\n// l\u00fac n\u00e0y, trong G \u0111\u00e3 c\u00f3 \u0111\u1ea7y \u0111\u1ee7 th\u00f4ng tin t\u1ea1o b\u1edfi c\u00e1c c\u1ea1nh [1, mid - 1]\n// nh\u01b0 v\u1eady, ta ch\u1ec9 c\u1ea7n n\u1ed1i th\u00eam c\u00e1c c\u1ea1nh trong G1 n\u1eefa, l\u00e0 \u0111\u00e3 duy tr\u00ec \u0111\u1ee7 th\u00f4ng tin l\u00e0 c\u00e1c SCC t\u1ea1o b\u1edfi c\u00e1c c\u1ea1nh [1, mid]\nfor c\u00e1c SCC t\u1ea1o th\u00e0nh b\u1edfi G1:\n    n\u00e9n c\u00e1c \u0111\u1ec9nh trong SCC n\u00e0y th\u00e0nh m\u1ed9t \u0111\u1ec9nh trong G\ns\u1eed d\u1ee5ng G \u0111\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi li\u00ean quan \u0111\u1ebfn mid\nf(mid+1, r, G2)\n\nf(1, m, edge list)\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: m\u1ed7i l\u1ea7n ta chia \\(G\\) th\u00e0nh hai list \\(G_1\\) v\u00e0 \\(G_2\\) kh\u00f4ng tr\u00f9ng nhau, v\u1eady v\u1edbi m\u1ed7i t\u1ea7ng \u0111\u1ec7 quy ta ch\u1ec9 x\u00e9t m\u1ed7i c\u1ea1nh duy nh\u1ea5t \\(1\\) l\u1ea7n. V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u00ecn chung l\u00e0 \\(O(m \\log m)\\). \u0110\u1ed9 ph\u1ee9c t\u1ea1p cho vi\u1ec7c tr\u1ea3 l\u1eddi truy v\u1ea5n l\u00e0 kh\u00e1c nhau v\u1edbi t\u1eebng b\u00e0i to\u00e1n, v\u1eady n\u00ean n\u00f3 s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u00e1nh gi\u00e1 \u1edf \u0111\u00e2y.</p>"},{"location":"CP/offline-incremental-scc/#ap-dung","title":"\u00c1p d\u1ee5ng","text":"<p>Do k\u0129 thu\u1eadt n\u00e0y c\u00f2n kh\u00e1 m\u1edbi v\u00e0 ch\u01b0a \u0111\u01b0\u1ee3c \u00e1p d\u1ee5ng nhi\u1ec1u, n\u00ean c\u0169ng ch\u01b0a c\u00f3 nhi\u1ec1u b\u00e0i to\u00e1n v\u1ec1 v\u1ea5n \u0111\u1ec1 n\u00e0y. Hi\u1ec7n t\u1ea1i c\u00e1c b\u00e0i to\u00e1n li\u00ean quan \u0111\u1ec1u thu\u1ed9c m\u1ed9t trong hai d\u1ea1ng ch\u00ednh sau:</p>"},{"location":"CP/offline-incremental-scc/#truy-van-tren-canh","title":"Truy v\u1ea5n tr\u00ean c\u1ea1nh","text":"\u0110\u1ec1 b\u00e0i <p>C\u00e1c truy v\u1ea5n c\u00f3 d\u1ea1ng: t\u00ecm th\u00f4ng tin v\u1ec1 c\u00e1c SCC sau khi th\u00eam \\(i\\) c\u1ea1nh.</p> L\u1eddi gi\u1ea3i <p>Ta c\u00f3 th\u1ec3 duy tr\u00ec m\u1ed9t s\u1ed1 c\u1ea5u tr\u00fac d\u1eef li\u1ec7u nh\u01b0 DSU \u0111\u1ec3 tr\u1ea3 l\u1eddi c\u00e1c truy v\u1ea5n, do khi merge c\u00e1c SCC l\u1ea1i th\u00e0nh m\u1ed9t si\u00eau \u0111\u1ec9nh, th\u00ec ta c\u00f3 th\u1ec3 coi nh\u01b0 c\u00e1c cung trong SCC \u0111\u00f3 l\u00e0 m\u1ed9t c\u1ea1nh v\u00f4 h\u01b0\u1edbng m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn b\u00e0i to\u00e1n. Ngh\u0129a l\u00e0, x\u00e9t th\u1eddi \u0111i\u1ec3m \\(i\\) v\u00e0 c\u00e1c cung \\((u, v)\\) c\u00f3 \\(t[.] = i\\), ta s\u1ebd xem cung \\(u \\rightarrow v\\) l\u00e0 m\u1ed9t c\u1ea1nh v\u00f4 h\u01b0\u1edbng \\((u, v)\\), v\u00e0 c\u1ea1nh n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c th\u00eam v\u00e0o \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng m\u1edbi t\u1ea1i th\u1eddi \u0111i\u1ec3m \\(i\\). Nh\u01b0 v\u1eady, t\u1ea1i m\u1ed7i th\u1eddi \u0111i\u1ec3m, ta ch\u1ec9 c\u1ea7n duy tr\u00ec m\u1ed9t CTDL nh\u1ea5t \u0111\u1ecbnh (th\u01b0\u1eddng l\u00e0 DSU) \u0111\u1ec3 qu\u1ea3n l\u00fd c\u00e1c TPLT tr\u00ean \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng.</p>"},{"location":"CP/offline-incremental-scc/#truy-van-tren-inh","title":"Truy v\u1ea5n tr\u00ean \u0111\u1ec9nh","text":"\u0110\u1ec1 b\u00e0i <p>C\u00e1c truy v\u1ea5n c\u00f3 d\u1ea1ng: t\u00ecm \\(i\\) nh\u1ecf nh\u1ea5t sao cho \\(u\\) v\u00e0 \\(v\\) chung SCC sau khi \u0111\u00e3 th\u00eam \\(i\\) c\u1ea1nh \u0111\u1ea7u ti\u00ean v\u00e0o \\(G\\).</p> L\u1eddi gi\u1ea3i <p>D\u1ef1ng \u0111\u1ed3 th\u1ecb v\u00f4 h\u01b0\u1edbng \\(G'\\) m\u1edbi v\u1edbi:</p> <ul> <li>T\u1eadp \u0111\u1ec9nh l\u00e0 t\u1eadp \u0111\u1ec9nh c\u1ee7a \u0111\u1ed3 th\u1ecb g\u1ed1c.</li> <li>T\u1eadp c\u1ea1nh l\u00e0 c\u00e1c c\u1ea1nh \\((u, v, t)\\) v\u1edbi \\(u \\rightarrow v\\) l\u00e0 m\u1ed9t cung tr\u00ean \u0111\u1ed3 th\u1ecb g\u1ed1c, v\u00e0 \\(t\\) l\u00e0 th\u1eddi \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean m\u00e0 \\(u\\) v\u00e0 \\(v\\) chung m\u1ed9t SCC.</li> </ul> <p>Nh\u01b0 v\u1eady, \u0111\u00e1p \u00e1n cho m\u1ed7i truy v\u1ea5n \\((s, t)\\) l\u00e0 c\u1ea1nh l\u1edbn nh\u1ea5t tr\u00ean c\u00e2y khung nh\u1ecf nh\u1ea5t c\u1ee7a \\(G'\\) (d\u1ec5 th\u1ea5y d\u1ef1a v\u00e0o t\u00ednh ch\u1ea5t c\u1ee7a c\u00e2y khung nh\u1ecf nh\u1ea5t).</p>"},{"location":"CP/offline-incremental-scc/#vi-du","title":"V\u00ed d\u1ee5","text":""},{"location":"CP/offline-incremental-scc/#qoj-2214-link-cut-digraph","title":"QOJ 2214 - Link Cut Digraph","text":"\u0110\u1ec1 b\u00e0i <p>Cho m\u1ed9t \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(n\\) \u0111\u1ec9nh, ban \u0111\u1ea7u kh\u00f4ng c\u00f3 c\u1ea1nh n\u00e0o. B\u1ea1n \u0111\u01b0\u1ee3c cho \\(m\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n y\u00eau c\u1ea7u b\u1ea1n th\u00eam c\u1ea1nh c\u00f3 h\u01b0\u1edbng \\(u \\rightarrow v\\), sau \u0111\u00f3 in ra s\u1ed1 c\u1eb7p \\((u,v)\\) chung m\u1ed9t th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh.</p> L\u1eddi gi\u1ea3i <p>\u0110\u00e2y l\u00e0 b\u00e0i to\u00e1n \u0111\u01b0\u1ee3c n\u00eau ra \u1edf ph\u1ea7n \u00c1p d\u1ee5ng. Tr\u01b0\u1edbc h\u1ebft, ta s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n n\u00eau tr\u00ean \u0111\u1ec3 t\u00ednh m\u1ea3ng \\(t[.]\\) cho t\u1ea5t c\u1ea3 c\u00e1c cung. Sau \u0111\u00f3, duy\u1ec7t c\u00e1c th\u1eddi \u0111i\u1ec3m \\(i\\) t\u1eeb \\(1 \\rightarrow m\\), t\u1ea1i m\u1ed7i th\u1eddi \u0111i\u1ec3m, ta n\u1ed1i c\u00e1c c\u1ea1nh \\((u,v)\\) c\u00f3 \\(t[.] = i\\) trong DSU. \u0110\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n m\u1ed9t c\u00e1ch nhanh ch\u00f3ng, trong DSU, ta l\u01b0u th\u00eam m\u1ed9t bi\u1ebfn th\u1ec3 hi\u1ec7n s\u1ed1 c\u1eb7p \\((u,v)\\) trong c\u00f9ng m\u1ed9t TPLT; v\u00e0 c\u1eadp nh\u1eadt bi\u1ebfn n\u00e0y m\u1ed7i l\u1ea7n n\u1ed1i c\u1ea1nh. Do m\u1ed7i l\u1ea7n n\u1ed1i c\u1ea1nh, ch\u1ec9 c\u00f3 t\u1ed1i \u0111a 2 TPLT b\u1ecb thay \u0111\u1ed5i k\u00edch th\u01b0\u1edbc, n\u00ean ta d\u1ec5 d\u00e0ng c\u1eadp nh\u1eadt \u0111\u00e1p \u00e1n trong \\(O(1)\\). V\u1eady t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O((n+m) \\log m)\\).</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\n/* DSU l\u01b0u th\u00f4ng tin v\u1ec1 c\u00e1c TPLT. */\nstruct DSU {\n    vector&lt;int&gt; par;\n    /* S\u1ed1 c\u1eb7p (u, v) v\u1edbi u != v v\u00e0 u, v chung m\u1ed9t TPLT \u0111\u1ebfn th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i. */\n    int64_t cur_ans;\n\n    DSU(int n = 0) {\n        par.assign(n + 5, -1);\n        cur_ans = 0;\n    }\n\n    int root(int u) {\n        if (par[u] &lt; 0)\n            return u;\n        return par[u] = root(par[u]);\n    }\n\n    int size(int u) {\n        return -par[root(u)];\n    }\n\n    bool join(int u, int v) {\n        u = root(u);\n        v = root(v);\n        if (u == v)\n            return false;\n        /* Th\u00eam v\u00e0o \u0111\u00e1p \u00e1n c\u00e1c c\u1eb7p (s, t) m\u00e0 s thu\u1ed9c TPLT g\u1ed1c u, v\u00e0 t thu\u1ed9c TPLT g\u1ed1c v, do tr\u01b0\u1edbc \u0111\u00f3, ch\u00fang ch\u01b0a \u0111i \u0111\u01b0\u1ee3c \u0111\u1ebfn nhau, v\u00e0 sau th\u1eddi \u0111i\u1ec3m n\u00e0y, ch\u00fang s\u1ebd \u0111i \u0111\u01b0\u1ee3c \u0111\u1ebfn nhau. */\n        cur_ans += 1ll * -par[u] * -par[v];\n        if (par[u] &gt; par[v])\n            swap(u, v);\n        par[u] += par[v];\n        par[v] = u;\n        return true;\n    }\n};\n\nconst int N = 2.5e5 + 5;\n\nint n, m;\npair&lt;int, int&gt; ed[N];\n\nDSU dsu(N);\nint64_t ans[N];\nvector&lt;int&gt; nodes;\nvector&lt;int&gt; g[N];\nint low[N], num[N], time_dfs, del[N];\nint id_scc[N];\nvector&lt;int&gt; stk;\nvector&lt;vector&lt;int&gt;&gt; scc;\nvector&lt;int&gt; T[N];\n\n/* Thu\u1eadt to\u00e1n Tarjan t\u00ecm c\u00e1c TPLTM trong \u0111\u1ed3 th\u1ecb hi\u1ec7n t\u1ea1i. */\nvoid dfs(int u) {\n    low[u] = num[u] = ++time_dfs;\n    stk.push_back(u);\n    for (int v : g[u]) {\n        if (del[v]) {\n            continue;\n        }\n        if (!num[v]) {\n            dfs(v);\n            low[u] = min(low[u], low[v]);\n        } else {\n            low[u] = min(low[u], num[v]);\n        }\n    }\n    if (low[u] == num[u]) {\n        scc.push_back({});\n        int v;\n        do {\n            v = stk.back();\n            scc.back().push_back(v);\n            id_scc[v] = scc.size();\n            del[v] = 1;\n            stk.pop_back();\n        } while (v != u);\n    }\n}\n\n/* Th\u00eam cung u -&gt; v v\u00e0o \u0111\u1ed3 th\u1ecb t\u1ea1m th\u1eddi, \u0111\u1ec3 sau n\u00e0y ti\u1ebfn h\u00e0nh t\u00ecm SCC */\nvoid add_edge(int u, int v) {\n    /* Ch\u1ec9 x\u00e9t c\u00e1c \u0111\u1ec9nh thu\u1ed9c \u00edt nh\u1ea5t m\u1ed9t c\u1ea1nh trong truy v\u1ea5n hi\u1ec7n t\u1ea1i. Do ta c\u1ea7n DFS nlog l\u1ea7n, nh\u01b0ng t\u1ed5ng k\u00edch th\u01b0\u1edbc c\u00e1c t\u1eadp \u0111\u1ec9nh ta x\u00e9t m\u1ed7i l\u1ea7n DFS c\u0169ng kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 nlog, n\u00ean vi\u1ec7c duy\u1ec7t t\u1eeb 1 -&gt; n \u0111\u1ec3 DFS s\u1ebd c\u00f3 th\u1ec3 b\u1ecb TLE, nh\u01b0ng vi\u1ec7c l\u01b0u l\u1ea1i nh\u01b0 th\u1ebf n\u00e0y l\u1ea1i kh\u00f4ng b\u1ecb TLE. */\n    nodes.push_back(u);\n    nodes.push_back(v);\n    g[u].push_back(v);\n}\n\n/* Reset d\u1eef li\u1ec7u cho c\u00e1c l\u1ea7n DFS sau. */\nvoid reset() {\n    for (int u : nodes) {\n        low[u] = num[u] = del[u] = 0;\n        id_scc[u] = 0;\n        g[u].clear();\n    }\n    nodes.clear();\n    stk.clear();\n    scc.clear();\n    time_dfs = 0;\n}\n\n/* Code \u0111\u1ec3 t\u00ednh m\u1ea3ng t[.] */\nvoid solve(int l, int r, vector&lt;int&gt; edges) {\n    if (l &gt; r) {\n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    /* Xu\u1ea5t ph\u00e1t t\u1eeb c\u01a1 s\u1edf l\u00e0 c\u00e1c \u0111\u1ec9nh th\u1ec3 hi\u1ec7n c\u00e1c SCC \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi c\u00e1c c\u1ea1nh c\u00f3 ch\u1ec9 s\u1ed1 &lt; l, ta x\u00e9t c\u00e1c c\u1ea1nh c\u00f3 ch\u1ec9 s\u1ed1 trong \u0111o\u1ea1n [l, mid] v\u00e0 xem ch\u00fang c\u00f3 t\u1ea1o ra c\u00e1c SCC m\u1edbi kh\u00f4ng */\n    reset();\n    for (int i : edges) {\n        if (i &lt;= mid) {\n            auto [x, y] = ed[i];\n            x = dsu.root(x);\n            y = dsu.root(y);\n            add_edge(x, y);\n        }\n    }\n    for (int u : nodes) {\n        if (!num[u]) {\n            dfs(u);\n        }\n    }\n    /* \u0110\u00e2y l\u00e0 ph\u1ea7n t\u01b0\u01a1ng t\u1ef1 ch\u1eb7t nh\u1ecb ph\u00e2n song song. N\u1ebfu u v\u00e0 v c\u00f9ng m\u1ed9t SCC, ch\u1eafc ch\u1eafn t[.] &lt;= mid, nh\u01b0 v\u1eady ta c\u1ea7n ph\u1ea3i gi\u1ea3m c\u1eadn d\u01b0\u1edbi xu\u1ed1ng cho ch\u00fang. Ng\u01b0\u1ee3c l\u1ea1i, ta c\u1ea7n ph\u1ea3i t\u0103ng c\u1eadn tr\u00ean l\u00ean. */\n    vector&lt;int&gt; g1, g2;\n    for (int i : edges) {\n        if (i &lt;= mid) {\n            auto [u, v] = ed[i];\n            u = dsu.root(u), v = dsu.root(v);\n            if (id_scc[u] == id_scc[v]) {\n                g1.push_back(i);\n            } else {\n                g2.push_back(i);\n            }\n        } else {\n            g2.push_back(i);\n        }\n    }\n    /* X\u00e9t c\u00e1c c\u1ea1nh trong t\u1eadp tr\u00e1i */\n    solve(l, mid - 1, g1);\n    /* \u0110\u1ebfn \u0111\u00e2y, ta \u0111\u01b0\u1ee3c ph\u00e9p merge c\u00e1c \u0111\u1ec9nh thu\u1ed9c c\u00f9ng m\u1ed9t SCC th\u00e0nh m\u1ed9t \u0111\u1ec9nh to v\u00e0o v\u1edbi nhau, do ta \u0111\u00e3 x\u00e9t h\u1ebft to\u00e0n b\u1ed9 c\u00e1c gi\u00e1 tr\u1ecb &lt;= mid */\n    for (int i : g1) {\n        dsu.join(ed[i].first, ed[i].second);\n    }\n    ans[mid] = dsu.cur_ans;\n    /* Sau khi merge, ta ti\u1ebfp t\u1ee5c x\u00e9t c\u00e1c c\u1ea1nh \u1edf t\u1eadp b\u00ean ph\u1ea3i */\n    solve(mid + 1, r, g2);\n    edges.clear();\n    g1.clear();\n    g2.clear();\n}\n\nint32_t main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        auto&amp; [u, v] = ed[i];\n        cin &gt;&gt; u &gt;&gt; v;\n    }\n    vector&lt;int&gt; id(m);\n    iota(id.begin(), id.end(), 1);\n    solve(1, m, id);\n    for (int i = 1; i &lt;= m; i++) {\n        cout &lt;&lt; ans[i] &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"CP/offline-incremental-scc/#ontak-2009-godzilla","title":"ONTAK 2009 - Godzilla","text":"\u0110\u1ec1 b\u00e0i <p>Cho \u0111\u1ed3 th\u1ecb c\u00f3 h\u01b0\u1edbng \\(n\\) \u0111\u1ec9nh \\(m\\) c\u1ea1nh. B\u1ea1n c\u1ea7n x\u1eed l\u00fd \\(q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n y\u00eau c\u1ea7u xo\u00e1 m\u1ed9t c\u1ea1nh trong \u0111\u1ed3 th\u1ecb hi\u1ec7n t\u1ea1i. Sau \u0111\u00f3, b\u1ea1n c\u1ea7n in ra s\u1ed1 l\u01b0\u1ee3ng th\u00e0nh ph\u1ea7n li\u00ean th\u00f4ng m\u1ea1nh c\u00f3 b\u1eadc v\u00e0o b\u1eb1ng \\(0\\).</p> L\u1eddi gi\u1ea3i <p>Thay v\u00ec x\u1eed l\u00ed c\u00e1c truy v\u1ea5n xo\u00e1 c\u1ea1nh, ta \u0111\u1ea3o ng\u01b0\u1ee3c l\u1ea1i c\u00e1c truy v\u1ea5n, v\u00e0 xem nh\u01b0 ta c\u00f3 c\u00e1c truy v\u1ea5n th\u00eam c\u1ea1nh. \u0110\u1ec3 cho ti\u1ec7n, v\u1edbi nh\u1eefng c\u1ea1nh m\u00e0 kh\u00f4ng b\u1ecb truy v\u1ea5n xo\u00e1 n\u00e0o t\u00e1c \u0111\u1ed9ng, ta c\u0169ng coi nh\u01b0 l\u00e0 b\u1ecb xo\u00e1 sau th\u1eddi \u0111i\u1ec3m th\u1ee9 \\(q\\), v\u00e0 ta s\u1ebd th\u00eam t\u1eeb t\u1eeb c\u00e1c c\u1ea1nh \u0111\u00f3 l\u1ea1i t\u1eeb \u0111\u1ea7u.</p> <p>Nh\u01b0 v\u1eady, b\u00e0i to\u00e1n quy v\u1ec1 vi\u1ec7c th\u00eam c\u1ea1nh v\u00e0 \u0111\u1ebfm s\u1ed1 SCC c\u00f3 b\u1eadc v\u00e0o b\u1eb1ng \\(0\\). Tr\u01b0\u1edbc h\u1ebft, ta t\u00ednh m\u1ea3ng \\(t[]\\) theo \u0111\u1ecbnh ngh\u0129a \u1edf tr\u00ean. Sau \u0111\u00f3, ta x\u00e9t c\u00e1c c\u1ea1nh t\u1eeb \\(1 \\rightarrow m\\) theo th\u1ee9 t\u1ef1 th\u00eam v\u00e0o:</p> <ul> <li>Gi\u1ea3 s\u1eed cung \u0111ang x\u00e9t l\u00e0 \\((u,v)\\). \u0110\u1ea7u ti\u00ean, ta l\u01b0u l\u1ea1i \u0111\u00e1p \u00e1n cho \u0111\u1ebfn th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i, sau \u0111\u00f3 ta x\u1eed l\u00ed truy v\u1ea5n th\u00eam cung n\u00e0y.</li> <li>Tr\u01b0\u1edbc h\u1ebft, ta c\u1ea7n th\u00eam cung \\(u\\rightarrow v\\) v\u00e0o c\u1ea5u tr\u00fac d\u1eef li\u1ec7u.<ul> <li>V\u1edbi m\u1ed7i TPLT trong DSU (\u1edf \u0111\u00e2y \u0111\u01b0\u1ee3c xem nh\u01b0 TPLTM), ta l\u01b0u th\u00eam \\(\\text{deg}\\) l\u00e0 s\u1ed1 SCC \u0111i v\u00e0o trong n\u00f3.</li> <li>Khi th\u00eam cung, ta t\u0103ng \\(\\text{deg}[\\text{root}(v)]\\) l\u00ean \\(1\\), v\u1edbi \\(\\text{root}(v)\\) l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a TPLT ch\u1ee9a \\(v\\).</li> </ul> </li> <li>Tuy nhi\u00ean, t\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i (ta t\u1ea1m g\u1ecdi l\u00e0 th\u1eddi \u0111i\u1ec3m \\(i\\)), c\u1ea7n ph\u1ea3i xo\u00e1 \u0111i nh\u1eefng cung \\((u', v')\\) c\u00f3 \\(t[.] = i\\), do sau th\u1eddi \u0111i\u1ec3m n\u00e0y, ch\u00fang s\u1ebd l\u00e0 m\u1ed9t c\u1ea1nh trong m\u1ed9t SCC n\u00e0o \u0111\u00f3, v\u00e0 s\u1ebd kh\u00f4ng \u0111\u00f3ng g\u00f3p g\u00ec v\u00e0o \u0111\u00e1p \u00e1n.<ul> <li>X\u00e9t c\u00e1c cung \\((u',v')\\) c\u00f3 \\(t[.]=i\\).</li> <li>Tr\u01b0\u1edbc h\u1ebft, ta c\u1ea7n tr\u1eeb \u0111i \u0111\u00f3ng g\u00f3p c\u1ee7a c\u00e1c cung n\u00e0y v\u00e0o \u0111\u00e1p \u00e1n, r\u1ea5t \u0111\u01a1n gi\u1ea3n ta ch\u1ec9 c\u1ea7n tr\u1eeb \\(\\text{deg}[\\text{root}(v')]\\) \u0111i \\(1\\).</li> <li>Sau th\u1eddi \u0111i\u1ec3m n\u00e0y, cung \\((u',v')\\) s\u1ebd l\u00e0 m\u1ed9t c\u1ea1nh trong m\u1ed9t SCC n\u00e0o \u0111\u00f3, do \u0111\u00f3 ta coi nh\u01b0 c\u1ea1nh n\u00e0y l\u00e0 m\u1ed9t c\u1ea1nh v\u00f4 h\u01b0\u1edbng. Ta ti\u1ebfn h\u00e0nh n\u1ed1i c\u1ea1nh \\((u',v')\\) trong DSU. Khi n\u1ed1i c\u1ea1nh trong DSU, l\u01b0u \u00fd c\u1eadp nh\u1eadt \\(\\text{deg}\\) m\u1ed9t c\u00e1ch th\u00edch h\u1ee3p.</li> </ul> </li> <li>L\u01b0u \u00fd, c\u00f9ng v\u1edbi vi\u1ec7c duy tr\u00ec m\u1ea3ng \\(\\text{deg}\\), ta c\u0169ng c\u1ea7n duy tr\u00ec m\u1ed9t bi\u1ebfn \u0111\u00e1p s\u1ed1, l\u00e0 s\u1ed1 TPLT c\u00f3 \\(\\text{deg}[.] = 0\\) trong DSU. V\u1edbi m\u1ed7i l\u1ea7n thay \u0111\u1ed5i, ta c\u1ea7n t\u0103ng gi\u1ea3m bi\u1ebfn n\u00e0y m\u1ed9t c\u00e1ch th\u00edch h\u1ee3p.</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O((n+m) \\log m)\\)</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 1e5 + 5;\n\n/* C\u1ea5u tr\u00fac d\u1eef li\u1ec7u DSU, duy tr\u00ec th\u00f4ng tin v\u1ec1 c\u00e1c SCC */\nstruct DSU {\n    vector&lt;int&gt; par;\n    /* S\u1ed1 SCC c\u00f3 b\u00e1n b\u1eadc v\u00e0o b\u1eb1ng 0 */\n    int cnt_zero_deg_in;\n    /* B\u00e1n b\u1eadc v\u00e0o c\u1ee7a m\u1ed9t SCC */\n    vector&lt;int&gt; deg;\n\n    DSU(int n = 0) {\n        par.assign(n + 5, -1);\n        deg.assign(n + 5, 0);\n        /* Ban \u0111\u1ea7u, m\u1ed7i \u0111\u1ec9nh con l\u00e0 m\u1ed9t SCC */\n        cnt_zero_deg_in = n;\n    }\n\n    int root(int u) {\n        if (par[u] &lt; 0)\n            return u;\n        return par[u] = root(par[u]);\n    }\n\n    int size(int u) {\n        return -par[root(u)];\n    }\n\n    void add_deg(int v, int delta) {\n        cnt_zero_deg_in -= !deg[v];\n        deg[v] += delta;\n        cnt_zero_deg_in += !deg[v];\n    }\n\n    /* Th\u00eam cung u -&gt; v v\u00e0o \u0111\u1ed3 th\u1ecb */\n    void add_diedge(int u, int v) {\n        add_deg(root(v), 1);\n    }\n\n    /* Xo\u00e1 \u0111\u00f3ng g\u00f3p c\u1ee7a cung u -&gt; v */\n    void rem_diedge(int u, int v) {\n        add_deg(root(v), -1);\n    }\n\n    bool join(int u, int v) {\n        u = root(u);\n        v = root(v);\n        if (u == v)\n            return false;\n        if (par[u] &gt; par[v])\n            swap(u, v);\n        /* Khi g\u1ed9p 2 SCC, nh\u1eefng cung \u0111i v\u00e0o SCC ch\u1ee9a v c\u0169ng l\u00e0 nh\u1eefng cung \u0111i v\u00e0o SCC ch\u1ee9a u. Do \u0111\u00f3, ta \u0111\u01b0\u1ee3c ph\u00e9p g\u00e1n deg[u] += deg[v], v\u00e0 hu\u1ef7 \u0111i \u0111\u00f3ng g\u00f3p c\u1ee7a \u0111\u1ec9nh v. */\n        add_deg(u, deg[v]);\n        cnt_zero_deg_in -= !deg[v];\n        par[u] += par[v];\n        par[v] = u;\n        return true;\n    }\n\n    bool fake_join(int u, int v) {\n        u = root(u);\n        v = root(v);\n        if (u == v)\n            return false;\n        if (par[u] &gt; par[v])\n            swap(u, v);\n        par[u] += par[v];\n        par[v] = u;\n        return true;\n    }\n};\n\nstruct Edge {\n    int u, v, id;\n    Edge(int u = 0, int v = 0, int id = 0) : u(u), v(v), id(id) {}\n};\n\nEdge edges[N];\nEdge queries[N];\nint ans[N];\nbool deleted[N];\nint min_time_same[N];\nvector&lt;int&gt; edges_join_in_time[N];\nint n, m, q;\n\nDSU dsu(N);\nvector&lt;int&gt; nodes;\nvector&lt;int&gt; g[N];\nint low[N], num[N], time_dfs, del[N];\nint id_scc[N];\nvector&lt;int&gt; stk;\nvector&lt;vector&lt;int&gt;&gt; scc;\nvector&lt;int&gt; T[N];\n\n/* Thu\u1eadt to\u00e1n Tarjan \u0111\u1ec3 t\u00ecm c\u00e1c SCC */\nvoid dfs(int u) {\n    low[u] = num[u] = ++time_dfs;\n    stk.push_back(u);\n    for (int v : g[u]) {\n        if (del[v]) {\n            continue;\n        }\n        if (!num[v]) {\n            dfs(v);\n            low[u] = min(low[u], low[v]);\n        } else {\n            low[u] = min(low[u], num[v]);\n        }\n    }\n    if (low[u] == num[u]) {\n        scc.push_back({});\n        int v;\n        do {\n            v = stk.back();\n            scc.back().push_back(v);\n            id_scc[v] = scc.size();\n            del[v] = 1;\n            stk.pop_back();\n        } while (v != u);\n    }\n}\n\nvoid add_edge(int u, int v) {\n    nodes.push_back(u);\n    nodes.push_back(v);\n    g[u].push_back(v);\n}\n\nvoid reset() {\n    for (int u : nodes) {\n        low[u] = num[u] = del[u] = 0;\n        id_scc[u] = 0;\n        g[u].clear();\n    }\n    nodes.clear();\n    stk.clear();\n    scc.clear();\n    time_dfs = 0;\n}\n\n/* C\u00e0i \u0111\u1eb7t \u0111\u1ec3 t\u00ecm m\u1ea3ng t[.] */\nvoid solve(int l, int r, vector&lt;int&gt; indices) {\n    if (l &gt; r) {\n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    reset();\n    for (int i : indices) {\n        if (i &lt;= mid) {\n            auto [s, t, _] = queries[i];\n            s = dsu.root(s);\n            t = dsu.root(t);\n            add_edge(s, t);\n        }\n    }\n    for (int u : nodes) {\n        if (!num[u]) {\n            dfs(u);\n        }\n    }\n    vector&lt;int&gt; g1, g2;\n    for (int i : indices) {\n        if (i &lt;= mid) {\n            auto [u, v, _i] = queries[i];\n            u = dsu.root(u), v = dsu.root(v);\n            if (id_scc[u] == id_scc[v]) {\n                min_time_same[i] = min(min_time_same[i], mid);\n                g1.push_back(i);\n            } else {\n                g2.push_back(i);\n            }\n        } else {\n            g2.push_back(i);\n        }\n    }\n    solve(l, mid - 1, g1);\n    for (int i : g1) {\n        auto [u, v, _i] = queries[i];\n        dsu.fake_join(u, v);\n    }\n    solve(mid + 1, r, g2);\n    indices.clear();\n    g1.clear();\n    g2.clear();\n}\n\nint32_t main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 1; i &lt;= m; i++) {\n        auto&amp; [u, v, _i] = edges[i];\n        cin &gt;&gt; u &gt;&gt; v;\n        min_time_same[i] = 1e9;\n        _i = i;\n    }\n    cin &gt;&gt; q;\n    for (int i = 1; i &lt;= q; i++) {\n        int id;\n        cin &gt;&gt; id;\n        deleted[id] = true;\n        queries[i] = edges[id];\n        queries[i].id = i;\n    }\n    /* Coi nh\u01b0 t\u1ea5t c\u1ea3 c\u00e1c c\u1ea1nh \u0111\u00e3 b\u1ecb xo\u00e1 */\n    int num_query = q;\n    for (int i = 1; i &lt;= m; i++) {\n        if (!deleted[i]) {\n            queries[++q] = edges[i];\n            queries[q].id = q;\n        }\n    }\n    reverse(queries + 1, queries + q + 1);\n    vector&lt;int&gt; idx(q);\n    iota(idx.begin(), idx.end(), 1);\n    solve(1, q, idx);\n    DSU dsu(n);\n    for (int i = 1; i &lt;= q; i++) {\n        if (min_time_same[i] != 1e9) {\n            edges_join_in_time[min_time_same[i]].push_back(i);\n        }\n    }\n    /* X\u00e9t c\u00e1c truy v\u1ea5n theo th\u1ee9 t\u1ef1 ng\u01b0\u1ee3c l\u1ea1i, ngh\u0129a l\u00e0 th\u1ee9 t\u1ef1 th\u00eam c\u1ea1nh v\u00e0o thay v\u00ec xo\u00e1 c\u1ea1nh \u0111i. */\n    for (int i = 1; i &lt;= q; i++) {\n        auto [s, t, idx_query] = queries[i];\n        /* L\u01b0u l\u1ea1i \u0111\u00e1p \u00e1n cho truy v\u1ea5n hi\u1ec7n t\u1ea1i */\n        ans[idx_query] = dsu.cnt_zero_deg_in;\n        /* Th\u00eam cung s -&gt; t */\n        dsu.add_diedge(s, t);\n        /* Xo\u00e1 \u0111\u00f3ng g\u00f3p c\u1ee7a c\u00e1c cung u -&gt; v chung SCC */\n        for (auto idx_edge : edges_join_in_time[i]) {\n            auto [u, v, _i] = queries[idx_edge];\n            dsu.rem_diedge(u, v);\n        }\n        /* Sau \u0111\u00f3, n\u00e9n SCC l\u1ea1i th\u00e0nh m\u1ed9t \u0111\u1ec9nh duy nh\u1ea5t */\n        for (auto idx_edge : edges_join_in_time[i]) {\n            auto [u, v, _i] = queries[idx_edge];\n            dsu.join(u, v);\n        }\n    }\n    for (int i = 1; i &lt;= num_query; i++) {\n        cout &lt;&lt; ans[i] &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"CP/offline-incremental-scc/#codeforces-1989f","title":"Codeforces - 1989F","text":"\u0110\u1ec1 b\u00e0i <p>B\u1ea1n \u0111\u01b0\u1ee3c cho m\u1ed9t ma tr\u1eadn k\u00edch th\u01b0\u1edbc \\(n \\cdot m\\). B\u1ea1n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n hai lo\u1ea1i thao t\u00e1c: t\u00f4 m\u1ed9t h\u00e0ng m\u00e0u \u0111\u1ecf, v\u00e0 t\u00f4 m\u1ed9t c\u1ed9t m\u00e0u xanh. Trong m\u1ed9t gi\u00e2y, b\u1ea1n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \\(k\\) thao t\u00e1c m\u1ed9t l\u00fac, v\u00e0 s\u1ebd m\u1ea5t chi ph\u00ed \\(k^2\\) n\u1ebfu \\(k&gt;1\\). Khi th\u1ef1c hi\u1ec7n m\u1ed9t chu\u1ed7i thao t\u00e1c, v\u1edbi m\u1ed7i \u00f4 b\u1ecb \u1ea3nh h\u01b0\u1edfng b\u1edfi c\u1ea3 thao t\u00e1c t\u00f4 h\u00e0ng v\u00e0 c\u1ed9t, ta c\u00f3 th\u1ec3 ch\u1ecdn m\u1ed9t m\u00e0u b\u1ea5t k\u00ec cho n\u00f3.</p> <p>B\u1ea1n c\u1ea7n x\u1eed l\u00ed \\(q\\) truy v\u1ea5n. Ban \u0111\u1ea7u, c\u00e1c \u00f4 ch\u01b0a \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u, v\u00e0 kh\u00f4ng c\u00f3 r\u00e0ng bu\u1ed9c n\u00e0o \u0111\u1ed1i v\u1edbi m\u00e0u c\u1ee7a c\u00e1c \u00f4. T\u1ea1i th\u1eddi \u0111i\u1ec3m \\(i\\), b\u1ea1n c\u00f3 th\u00eam m\u1ed9t truy v\u1ea5n d\u1ea1ng \\(x_i \\ y_i \\ c_i\\) - y\u00eau c\u1ea7u \u00f4 \\((x_i,y_i)\\) ph\u1ea3i \u0111\u01b0\u1ee3c t\u00f4 m\u00e0u \\(c_i\\). Sau m\u1ed7i truy v\u1ea5n, b\u1ea1n c\u1ea7n in ra chi ph\u00ed \u00edt nh\u1ea5t \u0111\u1ec3 t\u00f4 m\u00e0u b\u1ea3ng m\u00e0 tho\u1ea3 m\u00e3n \\(i\\) y\u00eau c\u1ea7u \u0111\u1ea7u ti\u00ean.</p> L\u1eddi gi\u1ea3i <p>X\u00e9t m\u1ed9t r\u00e0ng bu\u1ed9c \\(x \\ y \\ c\\). N\u1ebfu \\(c = R\\), ta n\u00ean t\u00f4 c\u1ed9t \\(y\\) tr\u01b0\u1edbc khi t\u00f4 h\u00e0ng \\(x\\), n\u1ebfu nh\u01b0 ta th\u1ef1c hi\u1ec7n hai thao t\u00e1c n\u00e0y \u1edf hai chu\u1ed7i kh\u00e1c nhau. T\u01b0\u01a1ng t\u1ef1, n\u1ebfu \\(c = B\\), ta n\u00ean t\u00f4 h\u00e0ng \\(x\\) tr\u01b0\u1edbc khi t\u00f4 c\u1ed9t \\(y\\).</p> <p>Nh\u01b0 v\u1eady, ta ngh\u0129 \u0111\u1ebfn vi\u1ec7c d\u1ef1ng m\u1ed9t \u0111\u1ed3 th\u1ecb g\u1ed3m \\(n+m\\) \u0111\u1ec9nh, v\u1edbi m\u1ed9t \u0111\u1ec9nh \u0111\u1ea1i di\u1ec7n cho m\u1ed9t h\u00e0ng ho\u1eb7c c\u1ed9t c\u1ee7a ma tr\u1eadn. X\u00e9t m\u1ed9t r\u00e0ng bu\u1ed9c \\(x \\ y \\ c\\), ta s\u1ebd:</p> <ul> <li>Th\u00eam cung n\u1ed1i t\u1eeb \\(x \\rightarrow y+n\\) n\u1ebfu \\(c=B\\), th\u1ec3 hi\u1ec7n ta ph\u1ea3i t\u00f4 h\u00e0ng \\(x\\) tr\u01b0\u1edbc khi t\u00f4 c\u1ed9t \\(y\\).</li> <li>Th\u00eam cung n\u1ed1i t\u1eeb \\(y + n \\rightarrow x\\) n\u1ebfu \\(c=R\\), th\u1ec3 hi\u1ec7n ta ph\u1ea3i t\u00f4 c\u1ed9t \\(y\\) tr\u01b0\u1edbc khi t\u00f4 h\u00e0ng \\(x\\).</li> </ul> <p>N\u1ebfu \u0111\u1ed3 th\u1ecb kh\u00f4ng c\u00f3 SCC n\u00e0o k\u00edch th\u01b0\u1edbc l\u1edbn h\u01a1n \\(1\\), th\u00ec \u0111\u00e1p \u00e1n l\u00e0 \\(0\\), do t\u1ed3n t\u1ea1i m\u1ed9t th\u1ee9 t\u1ef1 topo cho vi\u1ec7c t\u00f4 m\u00e0u c\u00e1c h\u00e0ng v\u00e0 c\u1ed9t, n\u00ean ta c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n t\u1eebng thao t\u00e1c \u0111\u01a1n l\u1ebb. Ng\u01b0\u1ee3c l\u1ea1i, ngh\u0129a l\u00e0 ta lu\u00f4n ph\u1ea3i th\u1ef1c hi\u1ec7n m\u1ed9t chu\u1ed7i thao t\u00e1c \u0111\u1ed1i v\u1edbi t\u1eebng SCC, v\u00e0 th\u1ef1c hi\u1ec7n c\u00e1c chu\u1ed7i n\u00e0y theo th\u1ee9 t\u1ef1 topo tr\u00ean \u0111\u1ed3 th\u1ecb sau khi \u0111\u00e3 n\u00e9n c\u00e1c SCC th\u00e0nh m\u1ed9t \u0111\u1ec9nh, v\u1eady \u0111\u00e1p \u00e1n s\u1ebd l\u00e0 \\(\\sum\\) (k\u00edch th\u01b0\u1edbc c\u00e1c SCC)\\(^2\\).</p> <p>\u0110\u1ebfn \u0111\u00e2y, b\u00e0i to\u00e1n tr\u1edf v\u1ec1 gi\u1ed1ng b\u00e0i Link Cut Digraph nh\u01b0 \u0111\u00e3 gi\u1edbi thi\u1ec7u \u1edf tr\u00ean, b\u1ea1n \u0111\u1ecdc ch\u1ec9 c\u1ea7n ch\u1ec9nh s\u1eeda m\u1ed9t ch\u00fat cho ph\u00f9 h\u1ee3p l\u00e0 \u0111\u01b0\u1ee3c.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 4e5 + 5;\n\nstruct DSU {\n    vector&lt;int&gt; par;\n    int64_t sum = 0;\n\n    int64_t val(int x) {\n        return x &gt; 1 ? 1ll * x * x : 0;\n    }\n\n    DSU(int n = 0) {\n        par.assign(n + 5, -1);\n        sum = 0;\n    }\n\n    int root(int u) {\n        if (par[u] &lt; 0)\n            return u;\n        return par[u] = root(par[u]);\n    }\n\n    int size(int u) {\n        return -par[root(u)];\n    }\n\n    bool join(int u, int v) {\n        u = root(u);\n        v = root(v);\n        if (u == v)\n            return false;\n        if (par[u] &gt; par[v])\n            swap(u, v);\n        sum -= val(-par[u]);\n        sum -= val(-par[v]);\n        par[u] += par[v];\n        par[v] = u;\n        sum += val(-par[u]);\n        return true;\n    }\n};\n\nstruct Edge {\n    int u, v, id;\n    Edge(int u = 0, int v = 0, int id = 0) : u(u), v(v), id(id) {}\n};\n\nEdge edges[N];\nint ans[N];\nint min_time_same[N];\nvector&lt;int&gt; edges_join_in_time[N];\nint n, m, q;\n\nDSU dsu(N);\nvector&lt;int&gt; nodes;\nvector&lt;int&gt; g[N];\nint low[N], num[N], time_dfs, del[N];\nint id_scc[N];\nvector&lt;int&gt; stk;\nvector&lt;vector&lt;int&gt;&gt; scc;\nvector&lt;int&gt; T[N];\n\nvoid dfs(int u) {\n    low[u] = num[u] = ++time_dfs;\n    stk.push_back(u);\n    for (int v : g[u]) {\n        if (del[v]) {\n            continue;\n        }\n        if (!num[v]) {\n            dfs(v);\n            low[u] = min(low[u], low[v]);\n        } else {\n            low[u] = min(low[u], num[v]);\n        }\n    }\n    if (low[u] == num[u]) {\n        scc.push_back({});\n        int v;\n        do {\n            v = stk.back();\n            scc.back().push_back(v);\n            id_scc[v] = scc.size();\n            del[v] = 1;\n            stk.pop_back();\n        } while (v != u);\n    }\n}\n\nvoid add_edge(int u, int v) {\n    nodes.push_back(u);\n    nodes.push_back(v);\n    g[u].push_back(v);\n}\n\nvoid reset() {\n    for (int u : nodes) {\n        low[u] = num[u] = del[u] = 0;\n        id_scc[u] = 0;\n        g[u].clear();\n    }\n    nodes.clear();\n    stk.clear();\n    scc.clear();\n    time_dfs = 0;\n}\n\nvoid solve(int l, int r, vector&lt;int&gt; indices) {\n    if (l &gt; r) {\n        return;\n    }\n    int mid = (l + r) &gt;&gt; 1;\n    reset();\n    for (int i : indices) {\n        if (i &lt;= mid) {\n            auto [s, t, _] = edges[i];\n            s = dsu.root(s);\n            t = dsu.root(t);\n            add_edge(s, t);\n        }\n    }\n    for (int u : nodes) {\n        if (!num[u]) {\n            dfs(u);\n        }\n    }\n    vector&lt;int&gt; g1, g2;\n    for (int i : indices) {\n        if (i &lt;= mid) {\n            auto [u, v, _i] = edges[i];\n            u = dsu.root(u), v = dsu.root(v);\n            if (id_scc[u] == id_scc[v]) {\n                min_time_same[i] = min(min_time_same[i], mid);\n                g1.push_back(i);\n            } else {\n                g2.push_back(i);\n            }\n        } else {\n            g2.push_back(i);\n        }\n    }\n    solve(l, mid - 1, g1);\n    for (int i : g1) {\n        auto [u, v, _i] = edges[i];\n        dsu.join(u, v);\n    }\n    solve(mid + 1, r, g2);\n    indices.clear();\n    g1.clear();\n    g2.clear();\n}\n\nint32_t main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;\n    for (int i = 1; i &lt;= q; i++) {\n        char type;\n        int s, t;\n        cin &gt;&gt; s &gt;&gt; t &gt;&gt; type;\n        if (type == 'R') {\n            edges[i] = Edge(t + n, s);\n        } else {\n            edges[i] = Edge(s, t + n);\n        }\n        min_time_same[i] = 1e9;\n    }\n    vector&lt;int&gt; idx(q);\n    iota(idx.begin(), idx.end(), 1);\n    solve(1, q, idx);\n    for (int i = 1; i &lt;= q; i++) {\n        if (min_time_same[i] != 1e9) {\n            edges_join_in_time[min_time_same[i]].push_back(i);\n        }\n    }\n    DSU dsu(n + m);\n    for (int i = 1; i &lt;= q; i++) {\n        for (int j : edges_join_in_time[i]) {\n            auto [s, t, _] = edges[j];\n            dsu.join(s, t);\n        }\n        cout &lt;&lt; dsu.sum &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"CP/offline-incremental-scc/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>infossm </li> <li>Codeforces</li> </ul>"},{"location":"CP/query-tree/","title":"D\u1ef1ng c\u00e2y truy v\u1ea5n","text":"<p>Th\u00f4ng th\u01b0\u1eddng khi gi\u1ea3i quy\u1ebft c\u00e1c b\u00e0i t\u1eadp y\u00eau c\u1ea7u: \u0110\u01b0a tr\u1ea1ng th\u00e1i hi\u1ec7n t\u1ea1i v\u1ec1 tr\u1ea1ng th\u00e1i tr\u01b0\u1edbc khi th\u1ef1c hi\u1ec7n truy v\u1ea5n th\u1ee9 \\(k\\), m\u1ecdi ng\u01b0\u1eddi th\u01b0\u1eddng hay d\u00f9ng c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Persistent \u0111\u1ec3 gi\u1ea3i. Tuy nhi\u00ean, m\u1ed9t s\u1ed1 b\u00e0i cho ph\u00e9p ch\u00fang ta x\u1eed l\u00ed offline, v\u1eady ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y \u0111\u1ec3 code cho \u0111\u01a1n gi\u1ea3n.</p>"},{"location":"CP/query-tree/#thuat-toan","title":"Thu\u1eadt to\u00e1n","text":"<p>\u0110\u1ecdc h\u1ebft c\u00e1c truy v\u1ea5n tr\u01b0\u1edbc khi gi\u1ea3i. V\u1edbi m\u1ed7i truy v\u1ea5n th\u1ee9 \\(i\\), n\u1ebfu n\u00f3 kh\u00f4ng l\u00e0 truy v\u1ea5n \u0111\u01b0a v\u1ec1 tr\u1ea1ng th\u00e1i th\u1ee9 \\(k\\), n\u1ed1i n\u00f3 \u0111\u1ebfn \u0111\u1ec9nh th\u1ee9 \\(i-1\\); ng\u01b0\u1ee3c l\u1ea1i, n\u1ed1i n\u00f3 \u0111\u1ebfn \u0111\u1ec9nh \\(k\\). Khi n\u00e0y \u0111\u1ed3 th\u1ecb ch\u00fang ta nh\u1eadn \u0111\u01b0\u1ee3c s\u1ebd l\u00e0 m\u1ed9t c\u00e2y (do m\u1ed7i \u0111\u1ec9nh ch\u1ec9 n\u1ed1i \u0111\u1ebfn m\u1ed9t \u0111\u1ec9nh duy nh\u1ea5t n\u1eb1m \u1edf \u0111\u1eb1ng tr\u01b0\u1edbc n\u00f3).</p> <p>Sau khi \u0111\u00e3 \u0111\u1ecdc h\u1ebft c\u00e1c truy v\u1ea5n, ta s\u1ebd DFS t\u1eeb \u0111\u1ec9nh s\u1ed1 \\(0\\) \u0111\u1ec3 gi\u1ea3i b\u00e0i to\u00e1n.</p> <pre><code>void dfs(int u) {\n  tr\u1ea3 l\u1eddi/th\u1ef1c hi\u1ec7n truy v\u1ea5n u\n  for (truy v\u1ea5n v k\u1ec1 u) {\n    dfs(v);\n  }\n  n\u1ebfu truy v\u1ea5n u \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn d\u1eef li\u1ec7u, ti\u1ebfn h\u00e0nh 'rollback' thao t\u00e1c v\u1eeba l\u00e0m\n}\n</code></pre> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(q \\times T)\\), trong \u0111\u00f3 \\(T\\) l\u00e0 th\u1eddi gian th\u1ef1c hi\u1ec7n m\u1ed9t truy v\u1ea5n.</p>"},{"location":"CP/query-tree/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Codeforces 707D</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nstruct Query {\n  int t, i, j;\n  Query (int _t = 0, int _i = 0, int _j = 0) {\n    t = _t; i = _i; j = _j;\n  }\n};\n\nconst int Q = 1e5 + 5;\nconst int N = 1e3 + 5;\n\nint n, m, q;\nint a[N][N];\nint tot = 0;\nvector &lt;int&gt; adj[Q];\nint ans[Q];\nQuery queries[Q];\n\nvoid dfs (int u) {\n  ans[u] = tot;\n  for (int v: adj[u]) {\n    if (queries[v].t == 1) {\n      bool changed = false;\n      int i = queries[v].i, j = queries[v].j;\n\n      if (a[i][j] == 0)\n        changed = true,\n        tot++,\n        a[i][j] = 1;\n\n      dfs(v);\n\n      if (changed)\n        a[i][j] = 0,\n        tot--;\n    }\n    else if (queries[v].t == 2) {\n      bool changed = false;\n      int i = queries[v].i, j = queries[v].j;\n\n      if (a[i][j] == 1)\n        changed = true,\n        tot--,\n        a[i][j] = 0;\n\n      dfs(v);\n\n      if (changed)\n        a[i][j] = 1,\n        tot++;\n    }\n    else if (queries[v].t == 3) {\n      int row = queries[v].i;\n      for (int col = 1; col &lt;= m; col++)\n        tot -= a[row][col],\n        a[row][col] ^= 1,\n        tot += a[row][col];\n\n      dfs(v);\n\n      for (int col = 1; col &lt;= m; col++)\n        tot -= a[row][col],\n        a[row][col] ^= 1,\n        tot += a[row][col];\n    }\n    else {\n      dfs(v);\n    }\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0); cout.tie(0);\n\n  cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;\n\n  for (int i = 1; i &lt;= q; i++) {\n    cin &gt;&gt; queries[i].t &gt;&gt; queries[i].i;\n    if (queries[i].t &lt;= 2)\n      cin &gt;&gt; queries[i].j;\n    if (queries[i].t == 4)\n      adj[queries[i].i].push_back(i);\n    else\n      adj[i - 1].push_back(i);\n  }\n\n  dfs(0);\n  for (int i = 1; i &lt;= q; i++)\n    cout &lt;&lt; ans[i] &lt;&lt; \"\\n\";\n\n  return 0;\n}\n</code></pre> <ul> <li>TTRAVEL - SPOJ</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 80005;\n\nvector &lt;int&gt; adj[N];\nvector &lt;int&gt; cur;\npair &lt;char, int&gt; queries[2*N];\nint ans[2*N];\n\nvoid dfs (int u) {\n  for (int v: adj[u]) {\n    if (queries[v].first == 'a') {\n      cur.push_back(queries[v].second);\n      ans[v] = cur.back();\n      dfs(v);\n      cur.pop_back();\n    }\n    else if (queries[v].first == 's') {\n      int last = -1;\n      if (cur.size())\n        last = cur.back(), cur.pop_back();\n      if (cur.size()) ans[v] = cur.back();\n      else ans[v] = -1;\n      dfs(v);\n      if (last != -1)\n        cur.push_back(last);\n    }\n    else {\n      if (cur.size())\n        ans[v] = cur.back();\n      else ans[v] = -1;\n      dfs(v);\n    }\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0); cout.tie(0);\n\n  int n;\n  cin &gt;&gt; n;\n\n  for (int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; queries[i].first;\n    if (queries[i].first == 'a' || queries[i].first == 't')\n      cin &gt;&gt; queries[i].second;\n    if (queries[i].first == 't')\n      adj[queries[i].second - 1].push_back(i);\n    else\n      adj[i - 1].push_back(i);\n  }\n\n  dfs(0);\n\n  for (int i = 1; i &lt;= n; i++) {\n    cout &lt;&lt; ans[i] &lt;&lt; \"\\n\";\n  }\n\n  return 0;\n}\n</code></pre> L\u1eddi gi\u1ea3i <p>Hai b\u00e0i tr\u00ean l\u00e0 m\u1ed9t \u00e1p d\u1ee5ng c\u01a1 b\u1ea3n c\u1ee7a d\u1ea1ng b\u00e0i n\u00e0y, c\u00e1c b\u1ea1n ch\u1ec9 c\u1ea7n ch\u00e9p nguy\u00ean h\u00e0m DFS v\u00e0o, m\u1ed7i truy v\u1ea5n l\u00e0m y nh\u01b0 \u0111\u1ec1 b\u1ea3o l\u00e0 AC.</p> <ul> <li>FIXSTR - PreVOI 2019</li> </ul> L\u1eddi gi\u1ea3i <p>D\u1ef1ng c\u00e2y Segment Tree; m\u1ed7i n\u00fat \u1edf Segment Tree l\u01b0u th\u00f4ng tin: s\u1ed1 ngo\u1eb7c m\u1edf ch\u01b0a \u0111\u01b0\u1ee3c gh\u00e9p v\u1edbi \u0111\u1ee9a n\u00e0o trong \u0111o\u1ea1n \\((i,j)\\), t\u01b0\u01a1ng t\u1ef1 v\u1edbi s\u1ed1 ngo\u1eb7c \u0111\u00f3ng.</p> <pre><code>struct Node {\n    int open, close;\n};\n</code></pre> <p>Nh\u01b0 v\u1eady khi gh\u00e9p 2 n\u00fat con \\(L\\), \\(R\\) v\u00e0o v\u1edbi n\u00fat cha ta s\u1ebd l\u00e0m nh\u01b0 sau:</p> <pre><code>Node operator + (Node L, Node R) {\n    Node ans = {L.open + R.open, L.close + R.close};\n    int will_be_match = min(L.open, R.close);\n    ans.open -= will_be_match;\n    ans.close -= will_be_match;\n    return ans;\n}\n</code></pre> <p>V\u1edbi c\u00e1c th\u00f4ng tin nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng suy ra tr\u1ecdng s\u1ed1 c\u1ee7a \u0111o\u1ea1n \\([L,R]\\). </p> <p>\u0110\u1ebfn \u0111\u00e2y ta \u0111\u00e3 gi\u1ea3i quy\u1ebft \u0111\u01b0\u1ee3c c\u00e1c truy v\u1ea5n \\(1\\) v\u00e0 \\(2\\) trong \\(O(logN)\\). C\u00f2n truy v\u1ea5n \\(3\\), b\u1ea1n ch\u1ec9 c\u1ea7n ch\u00e9p h\u00e0m DFS nh\u01b0 tr\u00ean l\u00e0 AC.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 1e6 + 5;\n\nstruct Node {\n    int not_matched_open, not_matched_close;\n\n    Node(int a = 0, int b = 0) {\n        not_matched_open = a;\n        not_matched_close = b;\n    }\n\n    Node operator+(const Node &amp;rhs) const {\n        Node res;\n\n        int match = min(not_matched_open, rhs.not_matched_close);\n\n        res.not_matched_open = not_matched_open + rhs.not_matched_open - match;\n        res.not_matched_close = not_matched_close + rhs.not_matched_close - match;\n\n        return res;\n    }\n};\n\nstruct Tree {\n    typedef Node T;\n    T f(T a, T b) { return a + b; }  // (any associative fn)\n    vector&lt;T&gt; s;\n    int n;\n    T unit = Node();\n    Tree(int n = 0, T def = Node()) : s(2 * n + 5, def), n(n) {}\n    void update(int pos, char val) {\n        for (s[pos += n] = Node(val == '(', val == ')'); pos /= 2;) {\n            s[pos] = f(s[pos * 2], s[pos * 2 + 1]);\n        }\n    }\n    T query(int b, int e) {  // query [b, e)\n        T ra = unit, rb = unit;\n        for (b += n, e += n; b &lt; e; b /= 2, e /= 2) {\n            if (b % 2)\n                ra = f(ra, s[b++]);\n            if (e % 2)\n                rb = f(s[--e], rb);\n        }\n        return f(ra, rb);\n    }\n    int get_ans(int b, int e) {\n        e++;\n        T ans = query(b, e);\n        return ans.not_matched_close + ans.not_matched_open;\n    }\n};\n\nstruct Query {\n    char type;\n    int i, j;\n\n    Query(char a = 0, int b = 0, int c = 0) {\n        type = a;\n        i = b;\n        j = c;\n    }\n\n    void read() {\n        cin &gt;&gt; type &gt;&gt; i;\n        if (type == 'Q')\n            cin &gt;&gt; j;\n    }\n} queries[N];\n\nchar get_rev(char ch) { return ch == '(' ? ')' : '('; }\n\nvector&lt;int&gt; adj[N];\nTree st;\nstring s;\nint ans[N];\nint n, m;\n\nvoid dfs(int u) {\n    if (queries[u].type == 'Q') {\n        int i = queries[u].i, j = queries[u].j;\n        ans[u] = st.get_ans(i, j);\n    }\n\n    for (int v : adj[u]) {\n        if (queries[v].type == 'C') {\n            int idx = queries[v].i;\n            st.update(idx, get_rev(s[idx]));\n            s[idx] = get_rev(s[idx]);\n        }\n        dfs(v);\n        if (queries[v].type == 'C') {\n            int idx = queries[v].i;\n            st.update(idx, get_rev(s[idx]));\n            s[idx] = get_rev(s[idx]);\n        }\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    cin &gt;&gt; s;\n    n = s.size();\n    s = ' ' + s;\n\n    cin &gt;&gt; m;\n\n    st = Tree(n + 5);\n\n    for (int i = 1; i &lt;= n; i++) st.update(i, s[i]);\n\n    for (int i = 1; i &lt;= m; i++) {\n        queries[i].read();\n        if (queries[i].type != 'U')\n            adj[i - 1].push_back(i);\n        else\n            adj[queries[i].i - 1].push_back(i);\n    }\n\n    dfs(0);\n\n    for (int i = 1; i &lt;= m; i++) {\n        if (queries[i].type == 'Q')\n            cout &lt;&lt; ans[i] &lt;&lt; \"\\n\";\n    }\n\n    return 0;\n}\n</code></pre> <ul> <li>Query-Max 4 - LQDOJ</li> </ul>"},{"location":"CP/sqrt-decomposition/","title":"Chia c\u0103n v\u00e0 c\u00e1c bi\u1ebfn th\u1ec3","text":"<p>B\u00e0i \u0111\u01b0\u1ee3c vi\u1ebft khi t\u00e1c gi\u1ea3 \u0111ang panic v\u1edbi m\u00f4n TTHCM </p> <p>Tr\u00ean VNOI \u0111\u00e3 c\u00f3 r\u1ea5t nhi\u1ec1u b\u00e0i v\u1ec1 chia c\u0103n (t\u1edbi 2 blog v\u00e0 2 contest Edu), tuy nhi\u00ean c\u00e1c k\u0129 thu\u1eadt s\u1eed d\u1ee5ng trong contest Edu c\u1ee7a VNOI l\u1ea1i ch\u01b0a \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y c\u1ee5 th\u1ec3 \u1edf b\u00e0i vi\u1ebft n\u00e0o m\u00e0 ch\u1ec9 c\u00f3 th\u1ec3 thu \u0111\u01b0\u1ee3c qua vi\u1ec7c l\u00e0m c\u00e1c b\u00e0i t\u01b0\u01a1ng t\u1ef1. V\u1eady trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u m\u1ed9t s\u1ed1 \"d\u1ea1ng\" chia c\u0103n th\u01b0\u1eddng g\u1eb7p.</p>"},{"location":"CP/sqrt-decomposition/#chia-block","title":"Chia block","text":""},{"location":"CP/sqrt-decomposition/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Th\u00f4ng th\u01b0\u1eddng c\u00e1c b\u00e0i to\u00e1n ch\u00fang ta th\u01b0\u1eddng g\u1eb7p s\u1ebd l\u00e0 chia c\u1ea5u tr\u00fac c\u1ee7a ta th\u00e0nh \\(\\sqrt{N}\\) kh\u1ed1i, m\u1ed7i kh\u1ed1i ch\u1ee9a \\(\\sqrt{N}\\) ph\u1ea7n t\u1eed. V\u1edbi m\u1ed7i kh\u1ed1i, ta l\u01b0u m\u1ed9t v\u00e0i th\u00f4ng tin c\u00f3 \u00edch \u0111\u1ec3 c\u00f3 th\u1ec3 truy xu\u1ea5t d\u1eef li\u1ec7u trong \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u1ecf. V\u1edbi m\u1ed7i truy v\u1ea5n, ta t\u00ecm c\u00e1c \"kh\u1ed1i\" giao v\u1edbi \u0111o\u1ea1n c\u1ea7n quan t\u00e2m, v\u00e0 sau \u0111\u00f3 truy v\u1ea5n t\u1eeb c\u00e1c th\u00f4ng tin \u0111\u00e3 l\u01b0u tr\u01b0\u1edbc \u0111\u00f3 \u0111\u1ec3 c\u00f3 th\u1ec3 truy xu\u1ea5t d\u1eef li\u1ec7u m\u1ed9t c\u00e1ch nhanh ch\u00f3ng. </p>"},{"location":"CP/sqrt-decomposition/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>PQUERY - Si\u00eau c\u00fap 2023</p> \u0110\u1ec1 b\u00e0i <p>Cho d\u00e3y \\(A\\) g\u1ed3m c\u00e1c ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb \\(\\leq 10^9\\) v\u00e0 d\u00e3y \\(P\\) l\u00e0 ho\u00e1n v\u1ecb c\u1ee7a c\u00e1c s\u1ed1 t\u1eeb \\(1\\) \u0111\u1ebfn \\(N\\). X\u1eed l\u00ed 4 lo\u1ea1i truy v\u1ea5n:</p> <ul> <li>G\u00e1n \\(A_{P_i}=A_{P_i}+v\\) v\u1edbi \\(i \\in [L, R]\\)</li> <li>T\u00ednh t\u1ed5ng \\(A[L:R]\\)</li> <li>\u0110\u1ed5i ch\u1ed7 \\(P_i, P_j\\)</li> <li>Rollback v\u1ec1 tr\u01b0\u1edbc th\u1eddi \u0111i\u1ec3m th\u1ee9 \\(T\\)</li> </ul> L\u1eddi gi\u1ea3i <p>\u0110\u1ec3 cho ti\u1ec7n, t\u1ea5t c\u1ea3 c\u00e1c ch\u1ec9 s\u1ed1 s\u1eed d\u1ee5ng trong b\u00e0i ta s\u1ebd chuy\u1ec3n v\u1ec1 d\u1ea1ng \\(0-indexed\\) thay v\u00ec \\(1\\) nh\u01b0 \u0111\u1ec1 b\u00e0i cho. \u0110\u1ea7u ti\u00ean ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u c\u00e1ch x\u1eed l\u00ed b\u00e0i to\u00e1n khi kh\u00f4ng c\u00f3 truy v\u1ea5n rollback. \u0110\u1ec3 x\u1eed l\u00ed truy v\u1ea5n rollback, ta c\u00f3 th\u1ec3 d\u1ef1ng c\u00e2y theo truy v\u1ea5n v\u00e0 DFS, tham kh\u1ea3o t\u1ea1i \u0111\u00e2y. Ta s\u1ebd \u0111\u1ed3ng th\u1eddi chia m\u1ea3ng \\(A\\) v\u00e0 \\(P\\) th\u00e0nh \\(\\sqrt{N}\\) kh\u1ed1i, v\u00e0 kh\u1ed1i th\u1ee9 \\(i\\) s\u1ebd qu\u1ea3n l\u00ed \u0111o\u1ea1n \\([i \\times \\sqrt{N}, (i + 1) \\times \\sqrt{N})\\). V\u1eady m\u1ed7i truy v\u1ea5n ta s\u1ebd th\u1ef1c hi\u1ec7n nh\u01b0 th\u1ebf n\u00e0o:</p> <ul> <li>Truy v\u1ea5n t\u0103ng: V\u1edbi m\u1ed7i kh\u1ed1i c\u1ee7a \\(P\\), ta l\u01b0u th\u00eam m\u1ed9t th\u00f4ng tin l\u00e0 \\(lazyP_i\\) ngh\u0129a l\u00e0 c\u00e1c ch\u1ec9 s\u1ed1 \\(P_j\\) thu\u1ed9c kh\u1ed1i th\u1ee9 \\(i\\) c\u1ee7a m\u1ea3ng \\(P\\) \u0111\u00e3 b\u1ecb t\u00e1c \u0111\u1ed9ng l\u00ean bao nhi\u00eau l\u1ea7n.<ul> <li>N\u1ebfu \\(L,R\\) thu\u1ed9c c\u00f9ng m\u1ed9t block, ta th\u1ef1c hi\u1ec7n duy\u1ec7t t\u1eeb \\(L \\Rightarrow R\\) v\u00e0 t\u0103ng tr\u00e2u nh\u01b0 \u0111\u1ec1 b\u00e0i b\u1ea3o.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, g\u1ecdi \\(b_L\\) v\u00e0 \\(b_R\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 block ch\u1ee9a \\(L\\) v\u00e0 ch\u1ee9a \\(R\\). V\u1edbi c\u00e1c block \\(i\\) c\u00f3 ch\u1ec9 s\u1ed1 thu\u1ed9c \u0111o\u1ea1n \\([b_L+1,b_R)\\), ta ti\u1ebfn h\u00e0nh g\u00e1n \\(lazyP_i=lazyP_i+v\\). Ng\u01b0\u1ee3c l\u1ea1i, v\u1edbi c\u00e1c ph\u1ea7n t\u1eed \\(P_i\\) m\u00e0 \\(i \\in [L,R] \\cap ([b_L \\times N, (b_L+1) \\times N) \\cup [b_R \\times N, b_{R+1} \\times N))\\), ta ti\u1ebfn h\u00e0nh t\u0103ng tr\u00e2u nh\u01b0 khi x\u1eed l\u00ed tr\u01b0\u1eddng h\u1ee3p tr\u00ean.</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p cho ph\u1ea7n n\u00e0y s\u1ebd l\u00e0 \\(\\sqrt{N}\\):<ul> <li>N\u1ebfu \\(L\\) v\u00e0 \\(R\\) thu\u1ed9c c\u00f9ng m\u1ed9t kh\u1ed1i, th\u00ec \\(R-L+1 \\leq \\sqrt{N}\\)</li> <li>N\u1ebfu \\(L\\) v\u00e0 \\(R\\) thu\u1ed9c hai kh\u1ed1i kh\u00e1c nhau:<ul> <li>Ta c\u1ea7n duy\u1ec7t qua c\u00e1c kh\u1ed1i, v\u1eady n\u1ebfu \\(L=1,R=N\\) th\u00ec ta c\u00f3 t\u1ed1i \u0111a \\(\\frac{N}{\\sqrt{N}}=\\sqrt{N}\\) kh\u1ed1i</li> <li>\u0110\u1ed9 d\u00e0i c\u1ee7a m\u1ed7i kh\u1ed1i \\(b_L,b_R\\) l\u00e0 \\(\\sqrt{N}\\). V\u1eady \u0111o\u1ea1n \\([L,R]\\) c\u00f3 \u0111\u1ed9 d\u00e0i nh\u01b0 th\u1ebf n\u00e0o, th\u00ec ph\u1ea7n giao c\u1ee7a n\u00f3 v\u1edbi \\(b_L,b_R\\) c\u0169ng ch\u1ec9 c\u00f3 \u0111\u1ed9 d\u00e0i t\u1ed1i \u0111a l\u00e0 \\(\\sqrt{N}\\). Nh\u01b0 v\u1eady, ph\u1ea7n t\u0103ng tr\u00e2u n\u00e0y c\u0169ng ch\u1ec9 duy\u1ec7t t\u1ed1i \u0111a l\u00e0 \\(2 \\times \\sqrt{N}\\) ph\u1ea7n t\u1eed.</li> </ul> </li> <li>Nh\u01b0 v\u1eady t\u1ed5ng s\u1ed1 b\u01b0\u1edbc duy\u1ec7t cho m\u1ed7i truy v\u1ea5n t\u1ed1i \u0111a l\u00e0 \\(3 \\times \\sqrt{N}\\)</li> </ul> </li> </ul> </li> <li>Truy v\u1ea5n t\u00ednh t\u1ed5ng: Ta l\u01b0u m\u1ed9t m\u1ea3ng \\(sumBlock_x\\) th\u1ec3 hi\u1ec7n t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c kh\u1ed1i th\u1ee9 \\(x\\), ngh\u0129a l\u00e0 t\u1ed5ng c\u00e1c ph\u1ea7n t\u1eed \\(A_i\\) v\u1edbi \\(i \\in [x \\times \\sqrt{N}, (x+1) \\times \\sqrt{N})\\)<ul> <li>N\u1ebfu \\(L\\) v\u00e0 \\(R\\) thu\u1ed9c chung m\u1ed9t kh\u1ed1i: duy\u1ec7t \\(i\\) t\u1eeb \\(L\\) \u0111\u1ebfn \\(R\\), v\u00e0 c\u1ed9ng \u0111\u00e1p \u00e1n v\u1edbi \\(A_i\\). Tuy nhi\u00ean s\u1ebd c\u00f3 tr\u01b0\u1eddng h\u1ee3p \\(A_i\\) b\u1ecb c\u1eadp nh\u1eadt \u1edf m\u1ed9t truy v\u1ea5n t\u0103ng tr\u01b0\u1edbc \u0111\u00f3, nh\u01b0ng truy v\u1ea5n t\u0103ng n\u00e0y l\u1ea1i ch\u01b0a c\u1eadp nh\u1eadt tr\u1ef1c ti\u1ebfp v\u00e0o \\(A_i\\). V\u1eady ta c\u1ea7n c\u1ed9ng \u0111\u00e1p \u00e1n v\u1edbi \\(lazyP_j\\) v\u1edbi \\(j\\) l\u00e0 ch\u1ec9 s\u1ed1 c\u1ee7a block tr\u00ean m\u1ea3ng \\(P\\) v\u00e0 ch\u1ee9a ch\u1ec9 s\u1ed1 \\(i\\), ngh\u0129a l\u00e0 trong block th\u1ee9 \\(j\\) c\u1ee7a m\u1ea3ng \\(P\\) c\u00f3 t\u1ed3n t\u1ea1i m\u1ed9t gi\u00e1 tr\u1ecb \\(i\\)</li> <li>N\u1ebfu \\(L\\) v\u00e0 \\(R\\) thu\u1ed9c hai kh\u1ed1i kh\u00e1c nhau:<ul> <li>G\u1ecdi \\(b_L\\) v\u00e0 \\(b_R\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 block ch\u1ee9a \\(L\\) v\u00e0 ch\u1ee9a \\(R\\). </li> <li>V\u1edbi c\u00e1c block \\(i\\) c\u00f3 ch\u1ec9 s\u1ed1 thu\u1ed9c \u0111o\u1ea1n \\([b_L+1,b_R)\\), ta ti\u1ebfn h\u00e0nh t\u0103ng \u0111\u00e1p \u00e1n v\u1edbi \\(sumBlock_i\\)</li> <li>V\u1edbi c\u00e1c ch\u1ec9 s\u1ed1 \\(i \\in [L,R] \\cap ([b_L \\times N, (b_L+1) \\times N) \\cup [b_R \\times N, b_{R+1} \\times N))\\), ta ti\u1ebfn h\u00e0nh t\u0103ng tr\u00e2u nh\u01b0 khi x\u1eed l\u00ed tr\u01b0\u1eddng h\u1ee3p tr\u00ean.</li> <li>Tuy nhi\u00ean \u0111\u00e1p \u00e1n v\u1eabn c\u00f3 th\u1ec3 s\u1ebd b\u1ecb sai v\u1edbi c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c c\u00e1c kh\u1ed1i c\u00f3 ch\u1ec9 s\u1ed1 thu\u1ed9c \u0111o\u1ea1n \\([b_L+1,b_R)\\), do c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c c\u00e1c kh\u1ed1i n\u00e0y c\u0169ng c\u00f3 th\u1ec3 \u0111\u00e3 b\u1ecb t\u00e1c \u0111\u1ed9ng b\u1edfi truy v\u1ea5n t\u0103ng tr\u01b0\u1edbc \u0111\u00f3, tuy nhi\u00ean l\u1ea1i ch\u01b0a \u0111\u01b0\u1ee3c ghi nh\u1eadn v\u00e0o \\(sumBlock_i\\)</li> <li>M\u1ed9t c\u00e1ch gi\u1ea3i quy\u1ebft \u0111\u00f3 l\u00e0 ta duy\u1ec7t h\u1ebft c\u00e1c kh\u1ed1i \\(i\\) thu\u1ed9c m\u1ea3ng \\(P\\), v\u00e0 c\u1ed9ng \u0111\u00e1p \u00e1n v\u1edbi \\(lazyP_i \\times\\) s\u1ed1 ph\u1ea7n t\u1eed \\(P_j\\) v\u1edbi \\(j\\) thu\u1ed9c kh\u1ed1i \\(i\\) v\u00e0 \\(P_j\\) thu\u1ed9c kh\u1ed1i \\([b_L+1,b_R)\\). Tuy nhi\u00ean ta kh\u00f4ng th\u1ec3 duy\u1ec7t h\u1ebft c\u00e1c ph\u1ea7n t\u1eed \\(A\\) thu\u1ed9c kh\u1ed1i tr\u00ean \u0111\u01b0\u1ee3c v\u00ec c\u00f3 th\u1ec3 s\u1ebd l\u00ean \u0111\u1ebfn \\(N\\) ph\u1ea7n t\u1eed. <ul> <li>Nh\u1eadn th\u1ea5y c\u00e1c ph\u1ea7n t\u1eed thu\u1ed9c kh\u1ed1i \\([b_L+1,b_R)\\) s\u1ebd t\u1ea1o th\u00e0nh m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp, nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c m\u00fat tr\u00e1i, m\u00fat ph\u1ea3i c\u1ee7a ch\u00fang. V\u1edbi m\u1ed7i kh\u1ed1i tr\u00ean \\(P\\) ta c\u00f3 th\u1ec3 l\u01b0u m\u1ed9t fenwick tree \u0111\u1ed9 d\u00e0i \\(N\\), v\u1edbi \\(P_{ij}=0/1\\) th\u1ec3 hi\u1ec7n xem trong kh\u1ed1i \\(P_i\\) c\u00f3 ph\u1ea7n t\u1eed n\u00e0o b\u1eb1ng \\(j\\) kh\u00f4ng. Nh\u01b0 v\u1eady v\u1edbi m\u1ed7i kh\u1ed1i thu\u1ed9c kh\u1ed1i \\(P\\) ta s\u1ebd x\u1eed l\u00ed trong \\(\\log(N)\\), v\u00e0 c\u00f3 \\(\\sqrt{N}\\) block n\u00ean s\u1ebd m\u1ea5t \\(\\sqrt{N} \\times \\log(N)\\) cho m\u1ed7i truy v\u1ea5n, s\u1ebd \u0103n \u0111\u01b0\u1ee3c c\u00e1c subtask \\(N, Q \\leq 70000\\)</li> <li>\u0110\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p ta c\u00f3 th\u1ec3 t\u00ednh tr\u01b0\u1edbc m\u1ed9t m\u1ea3ng \\(intersect_{ij}\\) l\u00e0 ph\u1ea7n giao c\u1ee7a kh\u1ed1i th\u1ee9 \\(i\\) tr\u00ean m\u1ea3ng \\(P\\) v\u00e0 kh\u1ed1i th\u1ee9 \\(j\\) tr\u00ean m\u1ea3ng \\(A\\). V\u1edbi m\u1ed7i c\u1eb7p \\((i,j)\\), ta duy\u1ec7t c\u00e1c ph\u1ea7n t\u1eed \\(P_x\\) m\u00e0 \\(x \\in [i \\times \\sqrt{N}, (i+1) \\times \\sqrt{N})\\) v\u00e0 c\u1ed9ng \\(1\\) khi \\(j \\times \\sqrt{N} \\leq P_x &lt; (j + 1) \\times \\sqrt{N}\\). C\u00f9ng v\u1edbi s\u1ef1 h\u1ed7 tr\u1ee3 c\u1ee7a Prefix Sum, ta gi\u1ea3m \u0111\u01b0\u1ee3c truy v\u1ea5n xu\u1ed1ng \\(\\sqrt{N}\\)</li> </ul> </li> </ul> </li> <li>T\u01b0\u01a1ng t\u1ef1 tr\u01b0\u1eddng h\u1ee3p tr\u00ean, ta c\u0169ng d\u1ec5 d\u00e0ng ch\u1ee9ng minh \u0111\u01b0\u1ee3c \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho ph\u1ea7n n\u00e0y ch\u1ec9 l\u00e0 \\(O(\\sqrt{N})\\)</li> <li>L\u01b0u \u00fd m\u1ea3ng \\(sumBlock\\) c\u0169ng ph\u1ea3i \u0111\u01b0\u1ee3c c\u1eadp nh\u1eadt khi th\u1ef1c hi\u1ec7n truy v\u1ea5n update \u1edf tr\u00ean, vi\u1ec7c update nh\u01b0 th\u1ebf n\u00e0o xin \u0111\u01b0\u1ee3c d\u00e0nh cho b\u1ea1n \u0111\u1ecdc.</li> </ul> </li> <li>Truy v\u1ea5n \u0111\u1ed5i ch\u1ed7:<ul> <li>N\u1ebfu \\(L\\) v\u00e0 \\(R\\) thu\u1ed9c c\u00f9ng m\u1ed9t kh\u1ed1i th\u00ec vi\u1ec7c c\u1ea7n l\u00e0m ch\u1ec9 l\u00e0 \\(swap(P_L,P_R)\\) do c\u00e1c th\u00f4ng tin ta l\u01b0u ch\u1ec9 li\u00ean quan \u0111\u1ebfn gi\u00e1 tr\u1ecb c\u00e1c ph\u1ea7n t\u1eed xu\u1ea5t hi\u1ec7n trong kh\u1ed1i, ch\u1ee9 kh\u00f4ng quan t\u00e2m \u0111\u1ebfn th\u1ee9 t\u1ef1 c\u1ee7a ch\u00fang.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, g\u1ecdi \\(b_L\\) v\u00e0 \\(b_R\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 kh\u1ed1i ch\u1ee9a \\(L\\) v\u00e0 \\(R\\). <ul> <li>\u0110\u1ea7u ti\u00ean ta c\u1ea7n push c\u00e1c thay \u0111\u1ed5i trong \\(lazyP\\) xu\u1ed1ng c\u00e1c ph\u1ea7n t\u1eed \\(a[.]\\). V\u1edbi m\u1ed7i kh\u1ed1i \\(i \\in \\{b_L,b_R\\}\\), ta duy\u1ec7t c\u00e1c \\(j\\) n\u1eb1m trong kh\u1ed1i n\u00e0y v\u00e0 ti\u1ebfn h\u00e0nh thay \u0111\u1ed5i \\(A_{P_j}\\) v\u00e0 \\(sumBlock_{\\frac{P_j}{\\sqrt{N}}}\\). Sau \u0111\u00f3 g\u00e1n \\(lazyP_i=0\\)</li> <li>Sau \u0111\u00f3 ta c\u1ea7n thay \u0111\u1ed5i m\u1ea3ng \\(intersect\\), v\u00e0 swap \\(P_L,P_R\\). Ph\u1ea7n update n\u00e0y xin d\u00e0nh cho b\u00e0i \u0111\u1ecdc, g\u1ee3i \u00fd l\u00e0 b\u1eb1ng vi\u1ec7c duy\u1ec7t t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed c\u1ea7n quan t\u00e2m \u0111\u1ec3 c\u1eadp nh\u1eadt, \u0111\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(\\sqrt{N})\\)</li> </ul> </li> </ul> </li> </ul> <p>V\u1eady t\u1ed5ng \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0: \\(O((N+Q) \\times \\sqrt{N})\\)</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\n#ifndef LOCAL\n#define cerr \\\n  if (0) cerr\n#endif\n\n// #define int int64_t\n\nvoid debug_out() { cerr &lt;&lt; '\\n'; }\ntemplate &lt;typename Head, typename... Tail&gt;\nvoid debug_out(Head H, Tail... T) {\n  cerr &lt;&lt; \" \" &lt;&lt; H;\n  debug_out(T...);\n}\n#define debug(...) cerr &lt;&lt; \"[\" &lt;&lt; #__VA_ARGS__ &lt;&lt; \"]:\", debug_out(__VA_ARGS__)\n\nconst int N = 150005;\nconst int S = 490;\n\nint n, q;\nint64_t a[N];\nint p[N];\nint intersect[S][S];\nint64_t lazyP[S];\narray&lt;int, 4&gt; qr[N];\nint64_t ans[N];\nint64_t sumBlock[N];\nint belong[N];\nvector&lt;int&gt; g[N];\n\n// push all lazyP[.]\nvoid push_p(int block) {\n  // O(n) ?\n  // sumBlock[.]\n  // a[.]\n  // intersect[block, .]\n  for (int i = block * S; i &lt;= min(n - 1, (block + 1) * S - 1); i++) {\n    a[p[i]] += lazyP[block];\n    sumBlock[p[i] / S] += lazyP[block];\n  }\n  lazyP[block] = 0;\n}\n\nvoid build(int i) {\n  for (int j = 0; j &lt; S; j++) {\n    intersect[i][j] = 0;\n    int l = j * S, r = min(n - 1, (j + 1) * S - 1);\n    for (int ii = i * S; ii &lt;= min(n - 1, (i + 1) * S - 1); ii++) {\n      intersect[i][j] += l &lt;= p[ii] &amp;&amp; p[ii] &lt;= r;\n    }\n  }\n  for (int j = 1; j &lt; S; j++) {\n    intersect[i][j] += intersect[i][j - 1];\n  }\n}\n\nvoid update(int l, int r, int v) {\n  int bL = l / S, bR = r / S;\n  if (bL == bR) {\n    for (int i = l; i &lt;= r; i++) {\n      a[p[i]] += v;\n      sumBlock[p[i] / S] += v;\n    }\n    return;\n  }\n  for (int i = bL + 1; i &lt;= bR - 1; i++) {\n    lazyP[i] += v;\n  }\n  for (int i = l; i &lt; (bL + 1) * S; i++) {\n    a[p[i]] += v;\n    sumBlock[p[i] / S] += v;\n  }\n  for (int i = bR * S; i &lt;= r; i++) {\n    a[p[i]] += v;\n    sumBlock[p[i] / S] += v;\n  }\n}\n\nint64_t cal(int l, int r) {\n  int bL = l / S, bR = r / S;\n  // debug(l, r);\n  int64_t ans = 0;\n  if (bL == bR) {\n    for (int i = l; i &lt;= r; i++) {\n      // debug(a[i], belong[i], lazyP[belong[i]]);\n      ans += a[i] + lazyP[belong[i]];\n    }\n  } else {\n    for (int i = l; i &lt; (bL + 1) * S; i++) {\n      ans += a[i] + lazyP[belong[i]];\n    }\n    for (int i = bL + 1; i &lt;= bR - 1; i++) {\n      ans += sumBlock[i];\n    }\n    if (bL + 1 &lt;= bR - 1) {\n      for (int i = 0; i &lt; S; i++) {\n        ans += lazyP[i] * (intersect[i][bR - 1] - intersect[i][bL]);\n      }\n    }\n    for (int i = bR * S; i &lt;= r; i++) {\n      ans += a[i] + lazyP[belong[i]];\n    }\n  }\n  return ans;\n}\n\nvoid revert(int blk) {\n  for (int j = S - 1; j &gt;= 1; j--) {\n    intersect[blk][j] -= intersect[blk][j - 1];\n  }\n}\n\nvoid accum(int blk) {\n  for (int j = 1; j &lt; S; j++) {\n    intersect[blk][j] += intersect[blk][j - 1];\n  }\n}\n\nvoid add(int block, int pos, int delta) {\n  int block_pos = p[pos] / S;\n  int lo = block_pos * S, hi = min(n - 1, (block_pos + 1) * S - 1);\n  intersect[block][block_pos] += delta * (lo &lt;= p[pos] &amp;&amp; p[pos] &lt;= hi);\n}\n\n// p_l, p_r\nvoid swap_p(int l, int r) {\n  int bL = l / S, bR = r / S;\n  if (bL == bR) {\n    swap(p[l], p[r]);\n    return;\n  }\n  push_p(bL);\n  push_p(bR);\n  revert(bL);\n  revert(bR);\n  add(bL, l, -1);\n  add(bR, r, -1);\n  swap(p[l], p[r]);\n  belong[p[l]] = l / S;\n  belong[p[r]] = r / S;\n  add(bL, l, 1);\n  add(bR, r, 1);\n  // intersect[bL][block contains p[l]] -=\n  accum(bL);\n  accum(bR);\n}\n\nvoid dfs(int u) {\n  auto [t, l, r, v] = qr[u];\n  if (t == 2) ans[u] = cal(l, r);\n  for (int i : g[u]) {\n    auto [t, l, r, v] = qr[i];\n    if (t == 1) {\n      update(l, r, v);\n    } else if (t == 3) {\n      swap_p(l, r);\n    }\n    dfs(i);\n    if (t == 1) {\n      update(l, r, -v);\n    } else if (t == 3) {\n      swap_p(l, r);\n    }\n  }\n}\n\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n#ifdef LOCAL\n#define task \"a\"\n#else\n#define task \"PQUERY\"\n#endif\n  if (fopen(task \".inp\", \"r\")) {\n    freopen(task \".inp\", \"r\", stdin);\n    freopen(task \".out\", \"w\", stdout);\n  }\n  cin &gt;&gt; n &gt;&gt; q;\n  for (int i = 0; i &lt; n; i++) {\n    cin &gt;&gt; a[i];\n    sumBlock[i / S] += a[i];\n  }\n  for (int i = 0; i &lt; n; i++) {\n    cin &gt;&gt; p[i];\n    --p[i];\n    belong[p[i]] = i / S;\n  }\n  for (int i = 0; i &lt; S; i++) {\n    build(i);\n  }\n  for (int i = 1; i &lt;= q; i++) {\n    cin &gt;&gt; qr[i][0];\n    if (qr[i][0] == 1) {\n      cin &gt;&gt; qr[i][1] &gt;&gt; qr[i][2] &gt;&gt; qr[i][3];\n      --qr[i][1];\n      --qr[i][2];\n    } else if (qr[i][0] == 2 || qr[i][0] == 3) {\n      cin &gt;&gt; qr[i][1] &gt;&gt; qr[i][2];\n      --qr[i][1];\n      --qr[i][2];\n    } else {\n      cin &gt;&gt; qr[i][1];\n      g[qr[i][1] - 1].push_back(i);\n    }\n    if (qr[i][0] != 4) {\n      g[i - 1].push_back(i);\n    }\n  }\n  dfs(0);\n  for (int i = 1; i &lt;= q; i++)\n    if (qr[i][0] == 2) cout &lt;&lt; ans[i] &lt;&lt; \"\\n\";\n  return 0;\n}\n</code></pre>"},{"location":"CP/sqrt-decomposition/#bai-tap-ap-dung","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Codeforces 13E</li> <li>XOROCC</li> <li>FNCS - Codechef</li> <li>TLEOJ Cup Final Day 2 - Tr\u00e1o b\u00e0i</li> </ul>"},{"location":"CP/sqrt-decomposition/#chia-theo-truy-van","title":"Chia theo truy v\u1ea5n","text":""},{"location":"CP/sqrt-decomposition/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>T\u01b0 t\u01b0\u1edfng ch\u00ednh c\u1ee7a thu\u1eadt to\u00e1n s\u1ebd l\u00e0: Khi \u0111\u1ecdc \u0111\u01b0\u1ee3c m\u1ed9t truy v\u1ea5n thay \u0111\u1ed5i, thay v\u00ec t\u00e1c \u0111\u1ed9ng tr\u1ef1c ti\u1ebfp l\u00ean c\u00e1c c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1ec3 c\u1eadp nh\u1eadt, ta s\u1ebd \"ghi nh\u1edb\" l\u1ea1i truy v\u1ea5n n\u00e0y v\u00e0o m\u1ed9t m\u1ea3ng <code>buffer</code>. Khi g\u1eb7p m\u1ed9t truy v\u1ea5n h\u1ecfi, k\u1ebft h\u1ee3p v\u1edbi d\u1eef li\u1ec7u c\u00f3 s\u1eb5n, c\u00f9ng m\u1ea3ng <code>buffer</code>, s\u1ebd cho ra \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n. Khi <code>buffer</code> \u0111\u1ea7y, ta th\u1ef1c hi\u1ec7n c\u1eadp nh\u1eadt c\u00e1c thao t\u00e1c trong <code>buffer</code> l\u00ean c\u1ea5u tr\u00fac s\u1eb5n c\u00f3.</p>"},{"location":"CP/sqrt-decomposition/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<p>Reversal and Sum - CSES</p> \u0110\u1ec1 b\u00e0i <p>Cho m\u1ea3ng \\(a\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed. X\u1eed l\u00fd \\(q\\) truy v\u1ea5n thu\u1ed9c hai lo\u1ea1i:</p> <ul> <li>\u0110\u1ea3o ng\u01b0\u1ee3c \u0111o\u1ea1n \\([l,r]\\)</li> <li>T\u00ednh t\u1ed5ng \u0111o\u1ea1n \\([l,r]\\)</li> </ul> L\u1eddi gi\u1ea3i <p>Tr\u01b0\u1edbc ti\u00ean, ta c\u0169ng chia m\u1ea3ng \\(a\\) ra th\u00e0nh \\(\\frac{n}{T}\\) \u0111o\u1ea1n, m\u1ed7i \u0111o\u1ea1n c\u00f3 \\(T\\) ph\u1ea7n t\u1eed. M\u1ed7i kh\u1ed1i s\u1ebd ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed c\u00f3 ch\u1ec9 s\u1ed1 \\(i \\times T\\) \u0111\u1ebfn \\((i+1)\\times T-1\\)</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n t\u00ecm t\u1ed5ng \\([l,r]\\); ta s\u1ebd t\u00ecm block ch\u1ee9a \\(l\\), v\u00e0 c\u1eaft n\u00f3 ra l\u00e0m hai ph\u1ea7n: t\u1eeb \u0111\u1ea7u block ch\u1ee9a \\(l\\) \u0111\u1ebfn \\(l-1\\), v\u00e0 t\u1eeb \\(l\\) \u0111\u1ebfn cu\u1ed1i block ch\u1ee9a \\(l\\). Sau \u0111\u00f3, ta ti\u1ebfp t\u00ecm block ch\u1ee9a \\(r+1\\), v\u00e0 c\u1eaft n\u00f3 ra l\u00e0m hai ph\u1ea7n t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\u00ean.</p> <p></p> <p>L\u00fac n\u00e0y, trong m\u1ea3ng ch\u1ec9 g\u1ed3m c\u00e1c kh\u1ed1i n\u1eb1m g\u1ecdn trong \u0111o\u1ea1n \\([l,r]\\), ta ti\u1ebfn h\u00e0nh duy\u1ec7t qua c\u00e1c kh\u1ed1i n\u00e0y v\u00e0 ghi nh\u1eadn t\u1ed5ng v\u00e0o \u0111\u00e1p \u00e1n.</p> <p></p> <p>C\u00f2n v\u1edbi truy v\u1ea5n \u0111\u1ea3o ng\u01b0\u1ee3c \u0111o\u1ea1n \\([l,r]\\), ta c\u0169ng ti\u1ebfn h\u00e0nh c\u1eaft gh\u00e9p nh\u01b0 v\u1eady. V\u1edbi m\u1ed7i kh\u1ed1i, ta l\u01b0u th\u00eam m\u1ed9t tr\u01b0\u1eddng <code>is_reversed</code>, ngh\u0129a l\u00e0 tr\u01b0\u1edbc \u0111\u00e2y kh\u1ed1i n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n truy v\u1ea5n \u0111\u1ea3o ng\u01b0\u1ee3c ch\u01b0a. L\u01b0u \u00fd, \u0111\u1ea3o ng\u01b0\u1ee3c 2 l\u1ea7n c\u00f3 ngh\u0129a l\u00e0 kh\u00f4ng \u0111\u1ea3o ng\u01b0\u1ee3c. V\u1eady n\u00ean, <code>is_reversed</code> ch\u1ec9 c\u00f3 hai tr\u1ea1ng th\u00e1i: \\(0/1\\). Nh\u1eadn th\u1ea5y c\u00e1c kh\u1ed1i n\u1eb1m g\u1ecdn trong \u0111o\u1ea1n \\([l,r]\\) thu\u1ed9c m\u1ed9t \u0111o\u1ea1n li\u00ean ti\u1ebfp. N\u00ean ta ch\u1ec9 c\u1ea7n \u0111\u1ea3o ng\u01b0\u1ee3c \u0111o\u1ea1n n\u00e0y c\u0169ng nh\u01b0 g\u00e1n <code>is_reversed=!is_reversed</code> v\u1edbi c\u00e1c kh\u1ed1i n\u00e0y.</p> <p>V\u1edbi m\u1ed7i truy v\u1ea5n, ta t\u1ea1o th\u00eam 2 block m\u1edbi. V\u1eady tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t ta s\u1ebd t\u1ea1o th\u00eam \\(q\\) block v\u00e0 ph\u1ea3i duy\u1ec7t qua to\u00e0n b\u1ed9 c\u00e1c block n\u00e0y. \u0110\u1ec3 tr\u00e1nh d\u00ednh ph\u1ea3i tr\u01b0\u1eddng h\u1ee3p n\u00e0y, sau m\u1ed7i \\(T\\) truy v\u1ea5n, ta ti\u1ebfn h\u00e0nh <code>rebuild</code> l\u1ea1i c\u1ea5u tr\u00fac, ngh\u0129a l\u00e0 tr\u1ea3 l\u1ea1i m\u1ea3ng \\(a\\) v\u1ec1 gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 sau \\(T\\) truy v\u1ea5n, v\u00e0 chia l\u1ea1i n\u00f3 th\u00e0nh \\(\\frac{n}{T}\\) block.</p> <p>L\u01b0u \u00fd c\u00f2n m\u1ed9t ph\u1ea7n n\u1eefa l\u00e0 vi\u1ec7c x\u1eed l\u00ed c\u00e1c ch\u1ec9 s\u1ed1 trong khi th\u1ef1c hi\u1ec7n \u0111\u1ea3o ng\u01b0\u1ee3c kh\u1ed1i, ph\u1ea7n n\u00e0y xin d\u00e0nh cho b\u1ea1n \u0111\u1ecdc.</p> <p>Suy ra v\u1edbi m\u1ed7i truy v\u1ea5n, ta duy\u1ec7t qua kh\u00f4ng qu\u00e1 \\(3T\\) kh\u1ed1i. V\u00e0 c\u1ee9 \\(T\\) l\u1ea7n ta l\u1ea1i x\u00e2y d\u1ef1ng l\u1ea1i c\u1ea5u tr\u00fac, v\u1eady ta c\u00f3 \\(\\frac{q}{T}\\) l\u1ea7n rebuild v\u00e0 m\u1ed7i l\u1ea7n rebuild m\u1ea5t \\(O(n)\\). V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p cu\u1ed1i c\u00f9ng l\u00e0 \\(q \\times 3T + n \\times \\frac{q}{T}\\). Ta c\u00f3 th\u1ec3 ch\u1ecdn \\(T=\\sqrt{n}\\) \u0111\u1ec3 \u0111\u1ea1t m\u1ed9t \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00e1 t\u1ed1t v\u00e0 \u0111\u1ee7 \u0111\u1ec3 AC b\u00e0i n\u00e0y.</p> <p>B\u00e0i to\u00e1n v\u1eabn c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p chia block gi\u1ed1ng nh\u01b0 \u1edf tr\u00ean, tuy nhi\u00ean vi\u1ec7c c\u00e0i \u0111\u1eb7t s\u1ebd ph\u1ee9c t\u1ea1p h\u01a1n. V\u1eabn c\u00f3 nhi\u1ec1u b\u00e0i to\u00e1n ch\u1ec9 c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p n\u00e0y.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\n\nconst int N = 2e5 + 5;\nconst int S = 450;\n\nstruct Range {\n  int l, r;\n  int64_t sum;\n  bool is_reversed;\n  Range(int l = 0, int r = 0, int64_t sum = 0, bool is_reversed = 0) : l(l), r(r), sum(sum), is_reversed(is_reversed) {}\n};\n\nint n, q;\nint a[N];\nint new_a[N];\nint64_t s[N];\nRange segments[N];\nint cnt_ranges;\n\n// x\u00e2y d\u1ef1ng l\u1ea1i c\u00e1c block trong a\nvoid rebuild() {\n  int cur = 0;\n  for (int i = 1; i &lt;= cnt_ranges; i++) {\n    auto [l, r, sum, is_rev] = segments[i];\n    if (is_rev) {\n      for (int j = r; j &gt;= l; j--) {\n        new_a[++cur] = a[j];\n      }\n    } else {\n      for (int j = l; j &lt;= r; j++) {\n        new_a[++cur] = a[j];\n      }\n    }\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    a[i] = new_a[i];\n    s[i] = s[i - 1] + a[i];\n  }\n  cnt_ranges = 0;\n  for (int i = 1; i &lt;= n; i += S) {\n    segments[++cnt_ranges] = Range(i, min(n, i + S - 1), s[min(i + S - 1, n)] - s[i - 1], 0);\n  }\n}\n\nvoid insert_seg(int pos, Range rng) {\n  for (int i = cnt_ranges; i &gt;= pos; i--) {\n    segments[i + 1] = segments[i];\n  }\n  segments[pos] = rng;\n  cnt_ranges++;\n}\n\n// t\u00e1ch block ch\u1ee9a `pos` th\u00e0nh 2 ph\u1ea7n: t\u1eeb \u0111\u1ea7u block ch\u1ee9a `pos` -&gt; `pos` - 1, v\u00e0 t\u1eeb `pos` -&gt; cu\u1ed1i block ch\u1ee9a `pos`\n// v\u00e0 tr\u1ea3 v\u1ec1 ch\u1ec9 s\u1ed1 c\u1ee7a block ch\u1ee9a `pos`\nint split(int pos) {\n  int cur_low = -1, cur_high = 0;\n  for (int i = 1; i &lt;= cnt_ranges; i++) {\n    auto [l, r, sum, is_rev] = segments[i];\n    int len = r - l + 1;\n    int next_low = cur_high + 1;\n    int next_high = next_low + len - 1;\n    cur_low = next_low;\n    cur_high = next_high;\n    // \u0111ang \u1edf block b\u00ean tr\u00e1i `pos`\n    if (next_high &lt; pos) continue;\n    if (next_low == pos) {\n      return i;\n    }\n    Range range_left, range_right;\n    int left_len = pos - next_low, right_len = next_high - pos + 1;\n    if (!is_rev) {\n      range_left = Range(l, l + left_len - 1, s[l + left_len - 1] - s[l - 1], 0);\n      range_right = Range(l + left_len, r, s[r] - s[l + left_len - 1], 0);\n    } else {\n      range_left = Range(r - left_len + 1, r, s[r] - s[r - left_len], 1);\n      range_right = Range(l, r - left_len, s[r - left_len] - s[l - 1], 1);\n    }\n    segments[i] = range_left;\n    insert_seg(i + 1, range_right);\n    return i + 1;\n  }\n  return cnt_ranges + 1;\n}\n\nvoid do_reverse(int l, int r) {\n  // xu\u1ea5t ph\u00e1t t\u1eeb \u0111i\u1ec3m l\n  int block_l = split(l);\n  // k\u1ebft th\u00fac t\u1eeb \u0111i\u1ec3m r -&gt; ph\u1ea3i xo\u00e1 \u0111i\u1ec3m r+1\n  int block_r = split(r + 1);\n  for (int i = block_l; i &lt; block_r; i++) {\n    segments[i].is_reversed ^= 1;\n  }\n  reverse(segments + block_l, segments + block_r);\n}\n\nint64_t get_sum(int l, int r) {\n  int block_l = split(l);\n  int block_r = split(r + 1);\n  int64_t ans = 0;\n  for (int i = block_l; i &lt; block_r; i++) {\n    ans += segments[i].sum;\n  }\n  return ans;\n}\n\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin &gt;&gt; n &gt;&gt; q;\n  for (int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; a[i];\n    new_a[i] = a[i];\n  }\n  rebuild();\n  for (int i = 1; i &lt;= q; i++) {\n    int t, l, r;\n    cin &gt;&gt; t &gt;&gt; l &gt;&gt; r;\n    if (t == 1) {\n      do_reverse(l, r);\n    } else {\n      cout &lt;&lt; get_sum(l, r) &lt;&lt; \"\\n\";\n    }\n    // m\u1ed7i truy v\u1ea5n t\u1ea1o ra t\u1ed1i \u0111a hai \u0111o\u1ea1n m\u1edbi\n    // khi s\u1ed1 \u0111o\u1ea1n th\u00eam v\u00e0o v\u01b0\u1ee3t qu\u00e1 sqrt(q), kh\u1edfi t\u1ea1o l\u1ea1i \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o s\u1ed1 \u0111o\u1ea1n c\u1ea7n x\u00e9t trong m\u1ed7i query kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 2 * sqrt(n)\n    // s\u1ed1 l\u1ea7n kh\u1edfi t\u1ea1o l\u1ea1i l\u00e0 q / sqrt(q) = sqrt(q), m\u1ed7i l\u1ea7n kh\u1edfi t\u1ea1o m\u1ea5t O(n) -&gt; n * sqrt(q)\n    if (i % S == 0) {\n      rebuild();\n    }\n  }\n  return 0;\n}\n</code></pre> Bonus <p>N\u1ebfu c\u00f3 th\u00eam truy v\u1ea5n ch\u00e8n/xo\u00e1 ph\u1ea7n t\u1eed, b\u1ea1n c\u00f3 l\u00e0m \u0111\u01b0\u1ee3c kh\u00f4ng, v\u00e0 \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1t nh\u1ea5t l\u00e0 bao nhi\u00eau?</p>"},{"location":"CP/sqrt-decomposition/#bai-tap-ap-dung_1","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Edu SQRT Contest - Part 1</li> <li>Edu SQRT Contest - Part 2</li> <li>TopCoder 13206 - TreeColoring</li> </ul>"},{"location":"CP/sqrt-decomposition/#chia-2-cach-lam","title":"Chia 2 c\u00e1ch l\u00e0m","text":""},{"location":"CP/sqrt-decomposition/#inh-nghia_1","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p>Gi\u1ea3 s\u1eed ta c\u00f3 \\(N\\) t\u1eadp \\(A_1, A_2, \\cdots, A_N\\) v\u00e0 \\(|A_1| + |A_2| + \\cdots + |A_N| = M\\). Khi \u0111\u00f3 ta c\u00f3 m\u1ed9t nh\u1eadn x\u00e9t: c\u00f3 kh\u00f4ng qu\u00e1 \\(\\sqrt{M}\\) t\u1eadp \\(A_i\\) c\u00f3 \\(|A_i|&gt;\\sqrt{M}\\). Ch\u1ee9ng minh r\u1ea5t d\u1ec5 d\u00e0ng b\u1eb1ng ph\u1ea3n ch\u1ee9ng: n\u1ebfu c\u00f3 nhi\u1ec1u h\u01a1n \\(\\sqrt{M}\\) t\u1eadp l\u1edbn nh\u01b0 v\u1eady, th\u00ec \\(|A_1| + |A_2| + \\cdots + |A_N|&gt;\\sqrt{M} \\times \\sqrt{M}=M\\), v\u00f4 l\u00ed.</p> <p>Nh\u01b0 v\u1eady, t\u01b0 t\u01b0\u1edfng c\u1ee7a c\u00e1c b\u00e0i to\u00e1n n\u00e0y s\u1ebd l\u00e0 ph\u00e2n c\u00e1c t\u1eadp h\u1ee3p ra l\u00e0m hai lo\u1ea1i: m\u1ed9t lo\u1ea1i c\u00f3 \u00edt hon \\(\\sqrt{M}\\) ph\u1ea7n t\u1eed, v\u00e0 m\u1ed9t lo\u1ea1i c\u00f3 nhi\u1ec1u h\u01a1n \\(\\sqrt{M}\\) ph\u1ea7n t\u1eed. L\u1ee3i d\u1ee5ng v\u00e0o nh\u1eadn x\u00e9t tr\u00ean, ta s\u1ebd ch\u1ecdn c\u00e1ch l\u00e0m th\u00edch h\u1ee3p v\u1edbi t\u1eebng t\u1eadp h\u1ee3p \u0111\u1ec3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho vi\u1ec7c x\u1eed l\u00ed t\u1eebng truy v\u1ea5n kh\u00f4ng v\u01b0\u1ee3t qu\u00e1 \\(\\sqrt{M}\\)</p>"},{"location":"CP/sqrt-decomposition/#vi-du_2","title":"V\u00ed d\u1ee5","text":"<p>398D Codeforces</p> \u0110\u1ec1 b\u00e0i <p>Cho \u0111\u1ed3 th\u1ecb \\(N\\) \u0111\u1ec9nh, \\(M\\) c\u1ea1nh. X\u1eed l\u00ed 5 lo\u1ea1i truy v\u1ea5n:</p> <ul> <li>G\u00e1n \\(F_u=1\\)</li> <li>G\u00e1n \\(F_u=0\\)</li> <li>N\u1ed1i c\u1ea1nh \\((u,v)\\)</li> <li>Xo\u00e1 c\u1ea1nh \\((u,v)\\)</li> <li>\u0110\u1ebfm s\u1ed1 \u0111\u1ec9nh \\(v\\) k\u1ec1 v\u1edbi \\(u\\) v\u00e0 \\(F_v=1\\)</li> </ul> L\u1eddi gi\u1ea3i Thu\u1eadt tr\u00e2u 1 <p>S\u1eed d\u1ee5ng <code>std::set</code> l\u01b0u tr\u1eef danh s\u00e1ch k\u1ec1 c\u1ee7a \u0111\u1ed3 th\u1ecb. V\u1edbi m\u1ed7i truy v\u1ea5n th\u00eam/xo\u00e1 c\u1ea1nh, ta x\u1eed l\u00ed trong \\(O(log)\\) b\u1eb1ng c\u00e1c thao t\u00e1c ch\u00e8n xo\u00e1 tr\u00ean <code>set</code>. V\u1edbi m\u1ed7i truy v\u1ea5n g\u00e1n, ta g\u00e1n \\(F\\) t\u01b0\u01a1ng \u1ee9ng b\u1eb1ng \\(1/0\\). V\u1edbi truy v\u1ea5n h\u1ecfi, ta duy\u1ec7t to\u00e0n b\u1ed9 danh s\u00e1ch c\u00e1c \u0111\u1ec9nh k\u1ec1 v\u1edbi \\(u\\) v\u00e0 \u0111\u1ebfm s\u1ed1 \u0111\u1ec9nh \\(v\\) c\u00f3 \\(F_v=1\\). Thu\u1eadt to\u00e1n n\u00e0y c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p x\u1ea5u nh\u1ea5t l\u00e0 \\(O(nq)\\) khi ta c\u00f3 th\u1ec3 t\u1ea1o test \u0111\u1ec3 l\u00e0m c\u00e1c truy v\u1ea5n h\u1ecfi ch\u1ea1y trong \\(O(n)\\) b\u1eb1ng vi\u1ec7c cho \u0111\u1ed3 th\u1ecb \\(n\\) \u0111\u1ec9nh v\u00e0 \\(q\\) truy v\u1ea5n h\u1ecfi \u0111\u1ec9nh \\(1\\) nh\u01b0 sau:</p> <p></p> Thu\u1eadt tr\u00e2u 2 <p>Ta l\u01b0u m\u1ea3ng \\(ans_u\\) l\u00e0 \u0111\u00e1p \u00e1n cho \u0111\u1ec9nh \\(u\\). V\u1edbi m\u1ed7i truy v\u1ea5n c\u1eadp nh\u1eadt \\(F_u\\), ta duy\u1ec7t to\u00e0n b\u1ed9 \u0111\u1ec9nh \\(v\\) k\u1ec1 \\(u\\) v\u00e0 c\u1eadp nh\u1eadt m\u1ea3ng \\(ans_v\\) t\u01b0\u01a1ng \u1ee9ng. V\u1edbi m\u1ed7i truy v\u1ea5n th\u00eam xo\u00e1 c\u1ea1nh, ta d\u1ec5 d\u00e0ng c\u1eadp nh\u1eadt \\(ans_u\\) v\u00e0 \\(ans_v\\) trong \\(O(1)\\). C\u00f2n v\u1edbi truy v\u1ea5n h\u1ecfi, ta ch\u1ec9 vi\u1ec7c in ra \\(ans_u\\). T\u01b0\u01a1ng t\u1ef1 thu\u1eadt to\u00e1n tr\u00ean, ta c\u0169ng c\u00f3 th\u1ec3 ch\u1ec9 ra \u0111\u01b0\u1ee3c worst case c\u1ee7a m\u1ed7i truy v\u1ea5n c\u1eadp nh\u1eadt l\u00e0 \\(O(n)\\)</p> Thu\u1eadt to\u00e1n chu\u1ea9n <p>Nh\u1eadn th\u1ea5y nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a c\u1ea3 hai thu\u1eadt to\u00e1n l\u00e0 \u0111\u1ec1u ch\u1ea1y ch\u1eadm khi m\u1ed9t \u0111\u1ec9nh b\u1ecb k\u1ec1 v\u1edbi qu\u00e1 nhi\u1ec1u \u0111\u1ec9nh kh\u00e1c. Ta s\u1ebd th\u1eed k\u1ebft h\u1ee3p hai thu\u1eadt to\u00e1n tr\u00ean l\u1ea1i v\u1edbi nhau:</p> <ul> <li>Tr\u01b0\u1edbc ti\u00ean, \u0111\u1ecdc v\u00e0o t\u1ea5t c\u1ea3 c\u00e1c truy v\u1ea5n. X\u00e1c \u0111\u1ecbnh m\u1ea3ng \\(deg_u\\) l\u00e0 b\u1eadc t\u1ed1i \u0111a c\u1ee7a \u0111\u1ec9nh u, m\u1ea3ng n\u00e0y c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng c\u00e1ch add h\u1ebft c\u00e1c c\u1ea1nh trong \u0111\u1ed3 th\u1ecb c\u0169ng nh\u01b0 c\u00e1c truy v\u1ea5n th\u00eam c\u1ea1nh</li> <li>G\u1ecdi \\(u\\) l\u00e0 \u0111\u1ec9nh \"l\u1edbn\" n\u1ebfu \\(deg_u&gt;S\\), v\u00e0 \\(u\\) l\u00e0 \u0111\u1ec9nh \"b\u00e9\" n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i. L\u01b0u m\u1ea3ng \\(ans_u\\) l\u00e0 \u0111\u00e1p \u00e1n cho \u0111\u1ec9nh \\(u\\), l\u01b0u \u00fd m\u1ea3ng \\(ans\\) ch\u1ec9 l\u01b0u cho c\u00e1c \u0111\u1ec9nh \\(u\\) l\u00e0 \u0111\u1ec9nh \"l\u1edbn\".</li> <li>Ta s\u1ebd x\u1eed l\u00ed c\u00e1c truy v\u1ea5n nh\u01b0 sau:<ul> <li>V\u1edbi truy v\u1ea5n thay \u0111\u1ed5i \\(F_u\\), ta thay \u0111\u1ed5i \\(F_u\\) nh\u01b0 b\u00ecnh th\u01b0\u1eddng. Sau \u0111\u00f3, ta duy\u1ec7t c\u00e1c \u0111\u1ec9nh \\(v\\) l\u00e0 \u0111\u1ec9nh \"l\u1edbn\" v\u00e0 k\u1ec1 v\u1edbi \\(u\\), v\u00e0 c\u1eadp nh\u1eadt \\(ans_v\\)</li> <li>V\u1edbi truy v\u1ea5n thay \u0111\u1ed5i c\u1ea1nh, ta thay \u0111\u1ed5i danh s\u00e1ch k\u1ec1 b\u1eb1ng <code>std::set</code> nh\u01b0 thu\u1eadt to\u00e1n tr\u00e2u. N\u1ebfu \\(u\\) ho\u1eb7c \\(v\\) l\u00e0 \u0111\u1ec9nh \"l\u1edbn\", th\u00ec ta c\u1ea7n c\u1eadp nh\u1eadt l\u1ea1i \\(ans_u\\) v\u00e0 \\(ans_v\\) t\u01b0\u01a1ng \u1ee9ng.</li> <li>V\u1edbi truy v\u1ea5n h\u1ecfi, n\u1ebfu \\(u\\) l\u00e0 \u0111\u1ec9nh l\u1edbn, th\u00ec ta truy v\u1ea5n trong \\(ans_u\\). Ng\u01b0\u1ee3c l\u1ea1i, ta l\u00e0m nh\u01b0 thu\u1eadt to\u00e1n tr\u00e2u th\u1ee9 nh\u1ea5t \u0111\u1ec3 t\u00ednh \u0111\u00e1p \u00e1n.</li> </ul> </li> </ul> <p>\u0110\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p:</p> <ul> <li>\u0110\u1eb7t \\(D=\\sum_{i=1}^{N}deg_i\\)</li> <li>Khi truy v\u1ea5n v\u00e0o \u0111\u1ec9nh b\u00e9, ta ch\u1ec9 c\u1ea7n duy\u1ec7t kh\u00f4ng qu\u00e1 \\(O(S)\\)</li> <li>Khi truy v\u1ea5n v\u00e0o \u0111\u1ec9nh l\u1edbn, ta c\u1ea7n duy\u1ec7t kh\u00f4ng qu\u00e1 \\(O(\\frac{D}{S})\\)</li> <li>V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho \\(Q\\) truy v\u1ea5n t\u1ed1i \u0111a l\u00e0 \\(O(Q(S+\\frac{D}{S}))\\). Ta c\u1ea7n t\u00ecm \\(S\\) \u0111\u1ec3 bi\u1ec3u th\u1ee9c \u0111\u1ea1t gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t. \u00c1p d\u1ee5ng b\u1ea5t \u0111\u1eb3ng th\u1ee9c Cosi, ta c\u00f3 \\(S + \\frac{D}{S} \\geq 2 \\times \\sqrt{D}\\). D\u1ea5u b\u1eb1ng x\u1ea3y ra t\u1ea1i \\(S=\\frac{D}{S} \\Leftrightarrow S=\\sqrt{D}\\). </li> <li>Nh\u01b0 v\u1eady, c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed1i \u0111a l\u00e0 \\(O(Q\\sqrt{M+Q})\\)</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 50005;\nconst int M = 150005;\nconst int Q = 250005;\nconst int S = 650;\n\nstruct Query {\n  char type;\n  int u, v;\n  Query(char type = 0, int u = 0, int v = 0) : type(type), u(u), v(v) {}\n  friend istream&amp; operator&gt;&gt;(istream&amp; ist, Query&amp; qr) {\n    ist &gt;&gt; qr.type &gt;&gt; qr.u;\n    if (qr.type == 'A' || qr.type == 'D') {\n      ist &gt;&gt; qr.v;\n    }\n    return ist;\n  }\n};\n\nvector&lt;int&gt; g[N]; // ch\u1ec9 l\u01b0u danh s\u00e1ch k\u1ec1 \u0111\u1ed1i v\u1edbi c\u00e1c \u0111\u1ec9nh ``b\u00e9``\nint id_big[N];\nint cnt_big;\nbitset&lt;N&gt; adj[(M + Q) / S + 5]; // c\u00f2n v\u1edbi c\u00e1c \u0111\u1ec9nh l\u1edbn, ta c\u00f3 th\u1ec3 l\u01b0u d\u01b0\u1edbi d\u1ea1ng ma tr\u1eadn k\u1ec1, do ch\u1ec9 c\u00f3 &lt;= sqrt \u0111\u1ec9nh l\u1edbn -&gt; b\u1ed9 nh\u1edb N*sqrt\nint deg[N];  // b\u1eadc t\u1ed1i \u0111a c\u1ee7a m\u1ed9t \u0111\u1ec9nh\nQuery qr[Q];\nint is_online[N];\nint answer_for_big_nodes[N];  // ta ch\u1ec9 quan t\u00e2m \u0111\u00e1p \u00e1n c\u1ee7a c\u00e1c \u0111\u1ec9nh ``l\u1edbn``, v\u00ec c\u00f3 th\u1ec3 suy \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n c\u1ee7a c\u00e1c \u0111\u1ec9nh nh\u1ecf trong O(sqrt)\n\nbool is_big_node(int u) {\n  return deg[u] &gt;= S;\n}\n\nvoid turn_on(int u) {\n  is_online[u] = 1;\n  for (int i = 1; i &lt;= cnt_big; i++) {\n    if (adj[i][u]) answer_for_big_nodes[i]++;\n  }\n}\n\nvoid turn_off(int u) {\n  is_online[u] = 0;\n  for (int i = 1; i &lt;= cnt_big; i++) {\n    if (adj[i][u]) answer_for_big_nodes[i]--;\n  }\n}\n\nvoid add_edge(int u, int v) {\n  if (!is_big_node(u)) g[u].push_back(v);\n  if (!is_big_node(v)) g[v].push_back(u);\n  if (is_big_node(v)) {\n    adj[id_big[v]][u] = 1;\n    answer_for_big_nodes[id_big[v]] += is_online[u];\n  }\n  if (is_big_node(u)) {\n    adj[id_big[u]][v] = 1;\n    answer_for_big_nodes[id_big[u]] += is_online[v];\n  }\n}\n\nvoid remove_edge(int u, int v) {\n  // ta c\u00f3 th\u1ec3 erase tr\u00e2u v\u00ec s\u1ed1 l\u01b0\u1ee3ng \u0111\u1ec9nh k\u1ec1 v\u1edbi u t\u1ed1i \u0111a l\u00e0 sqrt()\n  if (!is_big_node(u)) g[u].erase(find(g[u].begin(), g[u].end(), v));\n  if (!is_big_node(v)) g[v].erase(find(g[v].begin(), g[v].end(), u));\n  if (is_big_node(v)) {\n    adj[id_big[v]][u] = 0;\n    answer_for_big_nodes[id_big[v]] -= is_online[u];\n  }\n  if (is_big_node(u)) {\n    adj[id_big[u]][v] = 0;\n    answer_for_big_nodes[id_big[u]] -= is_online[v];\n  }\n}\n\nint query(int u) {\n  if (is_big_node(u)) {\n    return answer_for_big_nodes[id_big[u]];\n  }\n  int ans = 0;\n  for (int v : g[u]) {\n    ans += is_online[v];\n  }\n  return ans;\n}\n\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, q;\n  cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;\n  int o;\n  cin &gt;&gt; o;\n  while (o--) {\n    int u;\n    cin &gt;&gt; u;\n    is_online[u] = 1;\n  }\n  for (int i = 1; i &lt;= m; i++) {\n    int u, v;\n    cin &gt;&gt; u &gt;&gt; v;\n    ++deg[u];\n    ++deg[v];\n    g[u].push_back(v);\n    g[v].push_back(u);\n  }\n  for (int i = 1; i &lt;= q; i++) {\n    cin &gt;&gt; qr[i];\n    if (qr[i].type == 'A') {\n      ++deg[qr[i].u];\n      ++deg[qr[i].v];\n    }\n  }\n  for (int u = 1; u &lt;= n; u++) {\n    if (is_big_node(u)) {\n      id_big[u] = ++cnt_big;\n    }\n  }\n  for (int u = 1; u &lt;= n; u++) {\n    if (is_big_node(u)) {\n      for (int v : g[u]) {\n        adj[id_big[u]][v] = 1;\n        answer_for_big_nodes[id_big[u]] += is_online[v];\n      }\n    }\n  }\n  for (int i = 1; i &lt;= q; i++) {\n    auto [type, u, v] = qr[i];\n    if (type == 'O') {\n      turn_on(u);\n    } else if (type == 'F') {\n      turn_off(u);\n    } else if (type == 'A') {\n      add_edge(u, v);\n    } else if (type == 'D') {\n      remove_edge(u, v);\n    } else {\n      cout &lt;&lt; query(u) &lt;&lt; \"\\n\";\n    }\n  }\n  return 0;\n}\n</code></pre>"},{"location":"CP/sqrt-decomposition/#bai-tap-ap-dung_2","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Educational SQRT Contest - Part 2, h\u1ea7u h\u1ebft c\u00e1c b\u00e0i t\u1eadp trong ph\u1ea7n n\u00e0y \u0111\u1ec1u khai th\u00e1c \u0111\u1ebfn kh\u00eda c\u1ea1nh chia 2 c\u00e1ch l\u00e0m c\u0169ng nh\u01b0 chia theo truy v\u1ea5n.</li> <li>1921F - Codeforces</li> <li>ABC335 F</li> <li>KTREEC</li> <li>FC100 - GOODARR</li> <li>PATULJCI</li> </ul>"},{"location":"CP/sqrt-decomposition/#thuat-toan-mo","title":"Thu\u1eadt to\u00e1n Mo","text":""},{"location":"CP/sqrt-decomposition/#khong-cap-nhat","title":"Kh\u00f4ng c\u1eadp nh\u1eadt","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t thu\u1eadt to\u00e1n kh\u00e1 kinh \u0111i\u1ec3n, b\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o v\u1ec1 l\u00fd thuy\u1ebft c\u01a1 b\u1ea3n c\u1ee7a n\u00f3 t\u1ea1i t\u1ea1i VNOI Wiki. </p>"},{"location":"CP/sqrt-decomposition/#mo-tren-cay","title":"Mo tr\u00ean c\u00e2y","text":""},{"location":"CP/sqrt-decomposition/#truy-van-cay-con","title":"Truy v\u1ea5n c\u00e2y con","text":"<p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft c\u1ee7a VNOI \u0111\u00e3 n\u00f3i v\u1ec1 v\u1ea5n \u0111\u1ec1 n\u00e0y. C\u1ee5 th\u1ec3, khi ta \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh theo Euler tour, th\u00ec khi \u0111\u00f3 c\u00e2y con g\u1ed1c \\(u\\) s\u1ebd thu\u1ed9c m\u1ed9t d\u00e3y li\u00ean ti\u1ebfp tr\u00ean m\u1ea3ng. Khi \u0111\u00f3, ta c\u00f3 th\u1ec3 s\u1eafp x\u1ebfp l\u1ea1i c\u00e1c truy v\u1ea5n theo thu\u1eadt to\u00e1n Mo v\u00e0 th\u1ef1c hi\u1ec7n truy v\u1ea5n</p>"},{"location":"CP/sqrt-decomposition/#truy-van-uong-i","title":"Truy v\u1ea5n \u0111\u01b0\u1eddng \u0111i","text":"<p>B\u00e0i vi\u1ebft v\u1ec1 Euler tour tr\u00ean VNOI \u0111\u00e3 n\u00eau \u0111\u1ebfn 3 c\u00e1ch \u0111\u00e1nh s\u1ed1 l\u1ea1i c\u00e1c \u0111\u1ec9nh \u0111\u1ec3 th\u1ef1c hi\u1ec7n truy v\u1ea5n. \u1ede \u0111\u00e2y, ch\u00fang ta quan t\u00e2m \u0111\u1ebfn c\u00e1ch s\u1ed1 2.</p> <p>C\u1ee5 th\u1ec3, theo \u0111\u01b0\u1eddng \u0111i Euler, ta th\u00eam \u0111\u1ec9nh \\(u\\) v\u00e0o m\u1ea3ng \\(tour\\) khi th\u0103m \u0111\u1ec9nh \\(u\\) l\u1ea7n \u0111\u1ea7u ti\u00ean v\u00e0 l\u1ea7n cu\u1ed1i c\u00f9ng.</p> <p>V\u00ed d\u1ee5:</p> <p></p> <p>\\(tour\u2009= [1,\u20092,\u20093,\u20094,\u20094,\u20093,\u20095,\u20096,\u20096,\u20095,\u20092,\u20097,\u20098,\u20098,\u20099,\u20099,\u20097,\u20091]\\)</p> <p>T\u01b0\u01a1ng t\u1ef1, ta c\u0169ng g\u1ecdi \\(st_u\\) v\u00e0 \\(en_u\\) l\u1ea7n l\u01b0\u1ee3t l\u00e0 th\u1eddi \u0111i\u1ec3m \u0111\u1ea7u ti\u00ean v\u00e0 cu\u1ed1i c\u00f9ng g\u1eb7p \u0111\u1ec9nh \\(u\\) trong m\u1ea3ng \\(tour\\). M\u1ed7i \u0111\u1ec9nh \\(u\\) xu\u1ea5t hi\u1ec7n \u0111\u00fang 2 l\u1ea7n trong m\u1ea3ng n\u00e0y.</p> <p>Gi\u1ea3 s\u1eed ta c\u00f3 m\u1ed9t truy v\u1ea5n h\u1ecfi m\u1ed9t th\u00f4ng tin g\u00ec \u0111\u00f3 tr\u00ean \u0111\u01b0\u1eddng \u0111i \\((u,v)\\). V\u1eady ta s\u1ebd l\u1ee3i d\u1ee5ng m\u1ea3ng \\(tour\\) th\u1ebf n\u00e0o \u0111\u1ec3 \u0111\u01b0a v\u1ec1 truy v\u1ea5n tr\u00ean \u0111o\u1ea1n li\u00ean ti\u1ebfp?</p> Spoiler <ul> <li>N\u1ebfu \\(u\\) l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\), l\u00fac n\u00e0y ta c\u00f3 \\(st_u \\leq st_v \\leq en_v \\leq en_u\\)<ul> <li>Ta kh\u00f4ng c\u1ea7n quan t\u00e2m \u0111\u1ebfn c\u00e1c \u0111\u1ec9nh c\u00f3 ch\u1ec9 s\u1ed1 kh\u00f4ng thu\u1ed9c \u0111o\u1ea1n \\([st_u, st_v]\\), do nh\u1eefng \u0111i\u1ec3m thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\) ch\u1eafc ch\u1eafn thu\u1ed9c \u0111o\u1ea1n n\u00e0y.</li> <li>N\u1ebfu \\(p\\) thu\u1ed9c \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\), ngh\u0129a l\u00e0 \\(st_u \\leq st_p \\leq st_v &lt; en_v\\), ngh\u0129a l\u00e0 \\(p\\) xu\u1ea5t hi\u1ec7n duy nh\u1ea5t m\u1ed9t l\u1ea7n trong \u0111o\u1ea1n c\u1ea7n x\u00e9t.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, ngh\u0129a l\u00e0 \\(p\\) kh\u00f4ng ph\u1ea3i l\u00e0 t\u1ed5 ti\u00ean c\u1ee7a \\(v\\), v\u1eady ta c\u00f3 \\(st_u&lt;st_p&lt;en_p&lt;st_v\\), ngh\u0129a l\u00e0 \\(p\\) xu\u1ea5t hi\u1ec7n hai l\u1ea7n tr\u00ean \u0111o\u1ea1n.</li> <li>V\u1eady b\u00e0i to\u00e1n c\u00f3 th\u1ec3 chuy\u1ec3n v\u1ec1 th\u00e0nh qu\u1ea3n l\u00fd c\u00e1c \u0111\u1ec9nh xu\u1ea5t hi\u1ec7n \u0111\u00fang 1 l\u1ea7n trong \u0111o\u1ea1n \\([st_u,st_v]\\)</li> </ul> </li> <li>N\u1ebfu \\(u\\) v\u00e0 \\(v\\) thu\u1ed9c hai c\u00e2y con kh\u00e1c nhau<ul> <li>G\u1ecdi \\(p=lca(u,v)\\)</li> <li>L\u00fac n\u00e0y, \u0111o\u1ea1n ch\u00fang ta c\u1ea7n quan t\u00e2m l\u00e0 \\([en_u, st_v] \\subset [st_p,st_p]\\)</li> <li>C\u00e1c \u0111\u1ec9nh \\(v'\\) thu\u1ed9c subtree kh\u00e1c g\u1ed1c \\(p\\) m\u00e0 n\u1eb1m trong \u0111o\u1ea1n \\([en_u,st_v]\\) th\u00ec c\u00f3 \\(st_p&lt;en_u&lt;st_{p'}&lt;en_{p'}&lt;st_v\\) ho\u1eb7c \\(en_u&lt;st_v&lt;st_{v'}\\), v\u1eady n\u00ean ch\u00fang ch\u1ec9 xu\u1ea5t hi\u1ec7n 0 ho\u1eb7c 2 l\u1ea7n trong d\u00e3y \u0111ang x\u00e9t</li> <li>C\u00f2n c\u00e1c \u0111\u1ec9nh \\(p'\\) l\u00e0 \"cha\" c\u1ee7a \\(u\\) v\u00e0 \\(v\\) v\u00e0 n\u1eb1m tr\u00ean \u0111\u01b0\u1eddng \u0111i t\u1eeb \\(u\\) \u0111\u1ebfn \\(v\\), th\u00ec khi duy\u1ec7t theo order t\u1eeb \\(en_u \\rightarrow st_v\\), ho\u1eb7c l\u00e0 ta th\u00eam \u0111i\u1ec3m xu\u1ea5t hi\u1ec7n l\u1ea7n \u0111\u1ea7u c\u1ee7a \\(p'\\), ho\u1eb7c l\u00e0 th\u00eam \u0111i\u1ec3m cu\u1ed1i c\u00f9ng xu\u1ea5t hi\u1ec7n \\(p'\\), v\u1eady n\u00ean ta c\u0169ng ch\u1ec9 x\u00e9t c\u00e1c \u0111\u1ec9nh n\u00e0y \u0111\u00fang m\u1ed9t l\u1ea7n.</li> <li>\u0110\u1ec9nh \\(p\\) c\u00f3 th\u1ec3 ch\u01b0a \u0111\u01b0\u1ee3c th\u00eam v\u00e0o c\u1ea5u tr\u00fac, do ta ch\u1ec9 x\u00e9t c\u00e1c \u0111\u1ec9nh c\u00f3 \\(st_p&lt;en_u&lt;st_v&lt;en_p\\). Nh\u01b0 v\u1eady, ta c\u1ea7n th\u00eam \u0111o\u1ea1n \\([st_p,st_p]\\)</li> <li>K\u1ebft lu\u1eadn, ta ch\u1ec9 c\u1ea7n x\u00e9t nh\u1eefng \u0111\u1ec9nh xu\u1ea5t hi\u1ec7n duy nh\u1ea5t m\u1ed9t l\u1ea7n trong \u0111o\u1ea1n c\u1ea7n quan t\u00e2m.</li> </ul> </li> </ul>"},{"location":"CP/sqrt-decomposition/#bai-toan-ap-dung","title":"B\u00e0i to\u00e1n \u00e1p d\u1ee5ng","text":"<ul> <li>COT2 - SPOJ - tri\u1ec3n khai m\u1eabu</li> <li>Frank Sinatra - Prob.F</li> <li>Vasya and Little Bear - Codechef</li> <li>Dating</li> </ul>"},{"location":"CP/sqrt-decomposition/#mot-so-thu-thuat-toi-uu","title":"M\u1ed9t s\u1ed1 th\u1ee7 thu\u1eadt t\u1ed1i \u01b0u","text":""},{"location":"CP/sqrt-decomposition/#mot-cach-sap-xep-truy-van-khac","title":"M\u1ed9t c\u00e1ch s\u1eafp x\u1ebfp truy v\u1ea5n kh\u00e1c","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t c\u00e1ch s\u1eafp x\u1ebfp c\u00e1c truy v\u1ea5n \u0111\u1ec3 gi\u1ea3m \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1eeb \\(O((n+q) \\times \\sqrt{n})\\) xu\u1ed1ng \\(O(n \\times \\sqrt{q})\\), s\u1eed d\u1ee5ng Hilbert Curve. C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o b\u00e0i vi\u1ebft sau \u0111\u1ec3 hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 t\u01b0 t\u01b0\u1edfng.</p>"},{"location":"CP/sqrt-decomposition/#khu-log","title":"Kh\u1eed \\(\\log\\)","text":"<p>X\u00e9t b\u00e0i to\u00e1n: Cho m\u1ea3ng \\(A\\) g\u1ed3m \\(n\\) ph\u1ea7n t\u1eed v\u00e0 \\(q\\) truy v\u1ea5n, m\u1ed7i truy v\u1ea5n y\u00eau c\u1ea7u t\u00ecm \\(mex(a_l, \\cdots, a_r)\\). B\u00e0i to\u00e1n n\u00e0y c\u00f3 th\u1ec3 gi\u1ea3i offline trong \\(O(q\\log(n))\\) ho\u1eb7c online v\u1edbi c\u00e1c c\u1ea5u tr\u00fac persistent, tuy nhi\u00ean nh\u1eefng c\u00e1ch gi\u1ea3i n\u00e0y s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c x\u00e9t \u0111\u1ebfn trong ph\u1ea1m vi blog n\u00e0y, m\u00e0 ta s\u1ebd x\u00e9t c\u00e1ch l\u00e0m s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n Mo:</p> <ul> <li>S\u1eafp x\u1ebfp c\u00e1c truy v\u1ea5n theo thu\u1eadt to\u00e1n Mo</li> <li>Duy tr\u00ec m\u1ed9t set \\(S\\) th\u1ec3 hi\u1ec7n c\u00e1c ph\u1ea7n t\u1eed ch\u01b0a xu\u1ea5t hi\u1ec7n trong m\u1ea3ng. Ban \u0111\u1ea7u \\(S\\) ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed t\u1eeb \\(0 \\rightarrow n\\) do gi\u00e1 tr\u1ecb mex t\u1ed1i \u0111a c\u1ee7a ta ch\u1ec9 l\u00e0 \\(n\\) n\u00ean ta c\u0169ng ch\u1ec9 quan t\u00e2m \u0111\u1ebfn \u0111\u00f3</li> <li>B\u1eb1ng set \\(S\\) n\u00e0y, v\u1edbi m\u1ed7i truy v\u1ea5n ta c\u00f3 th\u1ec3 th\u00eam/xo\u00e1 ph\u1ea7n t\u1eed trong \\(O(\\log(n))\\) v\u00e0 t\u00ecm min trong \\(O(\\log(n))\\)</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p c\u1ee7a c\u00e1ch l\u00e0m n\u00e0y l\u00e0 \\(O(n \\sqrt{n} \\log(n))\\), qu\u00e1 ch\u1eadm v\u00e0 ch\u1eadm h\u01a1n n\u1eefa khi ta s\u1eed d\u1ee5ng <code>std::set</code>. C\u00f3 c\u00e1ch l\u00e0m kh\u00e1c s\u1eed d\u1ee5ng hash table, tuy nhi\u00ean constant c\u1ee7a n\u00f3 c\u0169ng kh\u00e1 cao v\u00e0 kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c b\u00e0i to\u00e1n c\u1ea7n truy xu\u1ea5t m\u1ed9t l\u01b0\u1ee3ng l\u1edbn c\u00e1c truy v\u1ea5n th\u00eam/xo\u00e1 ph\u1ea7n t\u1eed nh\u01b0 b\u00e0i to\u00e1n n\u00e0y.</p> <p>Ta x\u00e9t m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u cho ph\u00e9p:</p> <ul> <li>Ch\u00e8n/xo\u00e1 ph\u1ea7n t\u1eed trong \\(O(1)\\)</li> <li>T\u00ecm mex trong \\(O(\\sqrt{n})\\)</li> </ul> <p>Sau t\u1ea5t c\u1ea3, m\u00ecnh l\u1ea1i tr\u1edf v\u1ec1 v\u1edbi nhau...</p> <p>\u0110\u00fang v\u1eady, ta l\u1ea1i quay v\u1ec1 vi\u1ec7c chia block nh\u01b0 ban \u0111\u1ea7u. Nh\u1eadn th\u1ea5y ta c\u00f3 th\u1ec3 l\u01b0u m\u1ea3ng \\(cnt_x\\) l\u00e0 c\u00e1c ph\u1ea7n t\u1eed c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(x\\). V\u1edbi m\u1ed7i truy v\u1ea5n t\u00ecm \\(mex\\), ta duy\u1ec7t \\(x\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(n\\), v\u00e0 d\u1eebng l\u1ea1i khi g\u1eb7p \\(cnt_x=0\\). Tuy nhi\u00ean vi\u1ec7c l\u00e0m n\u00e0y qu\u00e1 l\u00e2u, ta s\u1ebd t\u1ed1i \u01b0u l\u1ea1i b\u1eb1ng ph\u01b0\u01a1ng ph\u00e1p chia block nh\u01b0 sau:</p> <ul> <li>Chia m\u1ea3ng \\(cnt\\) th\u00e0nh \\(\\sqrt{n}\\) kh\u1ed1i. V\u1edbi m\u1ed7i kh\u1ed1i ta l\u01b0u \\(cntB_i\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed ph\u00e2n bi\u1ec7t xu\u1ea5t hi\u1ec7n tr\u00ean kh\u1ed1i th\u1ee9 \\(i\\)</li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n th\u00eam \\(x\\), ta t\u0103ng \\(cnt_x\\) l\u00ean \\(1\\) v\u00e0 \\(cntB_{\\frac{x}{\\sqrt{N}}}\\) l\u00ean 1 n\u1ebfu \\(cnt_x=1\\). T\u01b0\u01a1ng t\u1ef1 v\u1edbi truy v\u1ea5n xo\u00e1.</li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n t\u00ecm mex, ta duy\u1ec7t c\u00e1c kh\u1ed1i v\u00e0 t\u00ecm kh\u1ed1i \\(i\\) \u0111\u1ea7u ti\u00ean c\u00f3 \\(cntB_i \\neq \\sqrt{n}\\). Sau \u0111\u00f3 ta duy\u1ec7t c\u00e1c ph\u1ea7n t\u1eed \\(j\\) thu\u1ed9c kh\u1ed1i \\(i\\), v\u00e0 t\u00ecm \\(j\\) \u0111\u1ea7u ti\u00ean c\u00f3 \\(cnt_j=0\\). Ta c\u00f3 \\(\\sqrt{n}\\) kh\u1ed1i, m\u1ed7i kh\u1ed1i c\u00f3 \\(\\sqrt{n}\\) ph\u1ea7n t\u1eed. V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p cho ph\u1ea7n n\u00e0y l\u00e0 \\(O(\\sqrt{n})\\)</li> </ul> <p>Nh\u01b0 v\u1eady l\u00e0 ta gi\u1ea3i quy\u1ebft xong b\u00e0i to\u00e1n n\u00e0y trong \\(O((n+q) \\times \\sqrt{n})\\)</p> <p>B\u1ea1n \u0111\u1ecdc c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t th\u1eed t\u1ea1i link: 1000F - Codeforces</p>"},{"location":"CP/sqrt-decomposition/#co-cap-nhat","title":"C\u00f3 c\u1eadp nh\u1eadt","text":""},{"location":"CP/sqrt-decomposition/#vi-du_3","title":"V\u00ed d\u1ee5","text":"<p>940F Codeforces</p> \u0110\u1ec1 b\u00e0i <p>X\u1eed l\u00ed 2 lo\u1ea1i truy v\u1ea5n:</p> <ul> <li>G\u00e1n \\(a_i=x\\)</li> <li>Cho 2 s\u1ed1 \\(l,r\\). G\u1ecdi \\(cnt_i\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng \\(i\\) trong \u0111o\u1ea1n \\([l,r]\\). T\u00ecm \\(mex(cnt_0, \\cdots, cnt_{10^9})\\)</li> </ul> L\u1eddi gi\u1ea3i <p>Ta s\u1ebd t\u00e1ch ri\u00eang hai lo\u1ea1i truy v\u1ea5n g\u00e1n v\u00e0 h\u1ecfi. V\u1edbi m\u1ed7i truy v\u1ea5n h\u1ecfi, ta bi\u1ec3u di\u1ec5n n\u00f3 d\u01b0\u1edbi d\u1ea1ng \\((t,l,r)\\) v\u1edbi \\(t\\) l\u00e0 s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n g\u00e1n tr\u01b0\u1edbc n\u00f3. Ng\u01b0\u1ee3c l\u1ea1i, ta bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng \\((i,x)\\) - nh\u01b0 \u0111\u1ec1 b\u00e0i \u0111\u00e3 cho.</p> <p>\u0110\u1eb7t \\(P=n^{\\frac{2}{3}}\\). L\u00fac n\u00e0y, ta c\u00f3 th\u1ec3 chia m\u1ea3ng \\(a\\) th\u00e0nh \\(\\frac{n}{P}=n^{\\frac{1}{3}}\\) \u0111o\u1ea1n. V\u1eady m\u1ed7i c\u1eb7p \\((l,r)\\) c\u00f3 th\u1ec3 thu\u1ed9c t\u1ed1i \u0111a \\(P\\) c\u1eb7p \u0111o\u1ea1n (do m\u1ed7i bi\u1ebfn \\(l\\) v\u00e0 \\(r\\) c\u00f3 th\u1ec3 thu\u1ed9c \\(\\frac{n}{P}\\) \u0111o\u1ea1n ri\u00eang bi\u1ec7t)</p> <p>Ta x\u00e9t t\u1ea5t c\u1ea3 c\u00e1c c\u1eb7p kh\u1ed1i \\((b_l,b_r)\\) c\u00f3 th\u1ec3 x\u1ea3y ra. V\u1edbi m\u1ed7i c\u1eb7p kh\u1ed1i:</p> <ul> <li>Ta duy\u1ec7t c\u00e1c b\u1ed9 \\((t,l,r)\\) v\u1edbi \\(\\frac{l}{P}=b_l\\) v\u00e0 \\(\\frac{r}{P}=b_r\\) theo th\u1ee9 t\u1ef1 t\u0103ng d\u1ea7n c\u1ee7a \\(t\\). </li> <li>C\u0169ng nh\u01b0 thu\u1eadt to\u00e1n Mo, ta duy tr\u00ec hai bi\u1ebfn \\(cur_l,cur_r\\) th\u1ec3 hi\u1ec7n hai bi\u00ean hi\u1ec7n t\u1ea1i t\u00ednh \u0111\u1ebfn truy v\u1ea5n \u0111ang x\u00e9t. V\u1edbi m\u1ed7i truy v\u1ea5n x\u00e9t \u0111\u1ebfn, ta ti\u1ebfn h\u00e0nh t\u0103ng gi\u1ea3m \\(cur_l,cur_r\\) v\u00e0 c\u1eadp nh\u1eadt \\(a_{cur_l},a_{cur_r}\\) v\u00e0o c\u1ea5u tr\u00fac d\u1eef li\u1ec7u, t\u01b0\u01a1ng t\u1ef1 nh\u01b0 khi th\u1ef1c hi\u1ec7n thu\u1eadt to\u00e1n Mo th\u00f4ng th\u01b0\u1eddng. </li> <li>Tuy nhi\u00ean, ta v\u1eabn ch\u01b0a x\u00e9t c\u00e1c thao t\u00e1c update. Ta l\u01b0u th\u00eam m\u1ed9t bi\u1ebfn \\(cur_t\\) th\u1ec3 hi\u1ec7n xem ta \u0111\u00e3 duy\u1ec7t \u0111\u1ebfn truy v\u1ea5n update th\u1ee9 bao nhi\u00eau. Trong khi \\(cur_t&lt;t\\), ta ti\u1ebfn h\u00e0nh c\u1eadp nh\u1eadt v\u00e0o m\u1ea3ng \\(a\\) ngh\u0129a l\u00e0 g\u00e1n \\(a_i=x\\), v\u00e0 thay \u0111\u1ed5i c\u1ea5u tr\u00fac d\u1eef li\u1ec7u n\u1ebfu \\(cur_l \\leq i \\leq cur_r\\)</li> </ul> <p>V\u00ec \\(q \\approx n\\), n\u00ean khi \u0111\u00e1nh gi\u00e1 \u0111\u1ed9 ph\u1ee9c t\u1ea1p, ta coi nh\u01b0 \\(q=n\\).</p> <p>Ta c\u00f3 \\((\\frac{n}{P})^2=n^{\\frac{2}{3}}\\) c\u1eb7p \\((b_l,b_r)\\) c\u1ea7n x\u00e9t. V\u1edbi c\u00e1c bi\u00ean \\((cur_l,cur_r)\\), ta ch\u1ec9 di chuy\u1ec1n ch\u00fang trong kh\u1ed1i \\(b_l\\) v\u00e0 \\(b_r\\), v\u1eady s\u1ed1 b\u01b0\u1edbc di chuy\u1ec3n t\u1ed1i \u0111a l\u00e0 \\(n^{\\frac{2}{3}}\\), v\u00e0 ta c\u00f3 \\(n\\) truy v\u1ea5n, n\u00ean s\u1ed1 b\u01b0\u1edbc di chuy\u1ec3n l\u00e0 \\(n \\times P=n^{\\frac{5}{3}}\\). Bi\u1ebfn \\(t\\) thay \u0111\u1ed5i t\u1ed1i \u0111a \\(n\\) l\u1ea7n v\u1edbi m\u1ed7i c\u1eb7p \\(b\\), n\u00ean c\u00f3 \\(n \\times (\\frac{n}{P})^2 = n^{\\frac{5}{3}}\\) l\u1ea7n duy\u1ec7t \\(t\\). V\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p t\u1ed5ng c\u00f3 th\u1ec3 xem l\u00e0 \\(O(n^{\\frac{5}{3}})\\)</p> <p>\u0110\u1ebfn \u0111\u00e2y vi\u1ec7c c\u00f2n l\u1ea1i ch\u1ec9 l\u00e0 t\u00ecm mex. B\u1eb1ng vi\u1ec7c s\u1eed d\u1ee5ng th\u1ee7 thu\u1eadt \u0111\u01b0\u1ee3c n\u00eau \u1edf ph\u1ea7n tr\u00ean, ta c\u00f3 th\u1ec3 t\u00ecm mex trong \\(O(\\sqrt{n})\\), do \u0111\u00e1p \u00e1n t\u1ed1i \u0111a l\u00e0 \\(n\\). Tuy nhi\u00ean, ta c\u0169ng c\u00f3 th\u1ec3 r\u00fat ra m\u1ed9t c\u1eadn ch\u1eb7t h\u01a1n l\u00e0 \u0111\u00e1p \u00e1n c\u1ee7a ch\u00fang ta \\(\\leq 2\\sqrt{n}\\). Do \u0111\u1ec3 mex b\u1eb1ng \\(c\\) th\u00ec \u00edt nh\u1ea5t ta ph\u1ea3i c\u00f3 \u00edt nh\u1ea5t m\u1ed9t s\u1ed1 xu\u1ea5t hi\u1ec7n \\(1\\) l\u1ea7n, m\u1ed9t s\u1ed1 xu\u1ea5t hi\u1ec7n \\(2\\) l\u1ea7n, \\(\\cdots\\), m\u1ed9t s\u1ed1 xu\u1ea5t hi\u1ec7n \\(c-1\\) l\u1ea7n. V\u1eady ta c\u1ea7n c\u00f3 \u00edt nh\u1ea5t \\(1+2+\\cdots+c-1=\\frac{c(c-1)}{2}\\) s\u1ed1 trong \u0111o\u1ea1n \u0111ang x\u00e9t. M\u00e0 \u0111o\u1ea1n d\u00e0i nh\u1ea5t t\u1ed1i \u0111a l\u00e0 \\(n\\) \\(\\rightarrow \\frac{c(c-1)}{2} \\leq n \\rightarrow c \\leq 2\\sqrt{n}\\). Nh\u01b0 v\u1eady mu\u1ed1n t\u00ecm mex ta ch\u1ec9 c\u1ea7n duy\u1ec7t tr\u00e2u l\u00e0 AC, v\u00ec t\u1ed1i \u0111a ch\u1ec9 c\u00f3 \\(q\\) truy v\u1ea5n.</p> C\u00e0i \u0111\u1eb7t <p>https://codeforces.com/contest/940/submission/122177453</p>"},{"location":"CP/sqrt-decomposition/#bai-tap-ap-dung_3","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Primitive Queries</li> <li>Candy Park</li> </ul>"},{"location":"CP/sqrt-decomposition/#xau","title":"X\u00e2u","text":""},{"location":"CP/sqrt-decomposition/#gioi-thieu_1","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Cho d\u00e3y \\(a\\) c\u00f3 \\(n\\) ph\u1ea7n t\u1eed nguy\u00ean kh\u00f4ng \u00e2m v\u00e0 \\(a_1+a_2+\\cdots+a_n=m\\). Nh\u1eadn x\u00e9t: s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed ph\u00e2n bi\u1ec7t c\u1ee7a d\u00e3y \\(a\\) \\(\\leq \\sqrt{m}\\) </p> Ch\u1ee9ng minh <ul> <li>G\u1ecdi \\(b_0,\\cdots,b_{k-1}\\) l\u00e0 d\u00e3y \\(a\\) sau khi \u0111\u01b0\u1ee3c sort unique</li> <li>V\u00ec \\(b_i\\) nguy\u00ean kh\u00f4ng \u00e2m \\(\\Rightarrow b_i \\geq i\\) \\(\\Rightarrow \\sum_{i=0}^{k-1}b_i \\geq \\sum_{i=0}^{k-1}i=\\frac{k(k-1)}{2}\\)</li> <li>L\u1ea1i c\u00f3 \\(b_0+\\cdots+b_{k-1} \\leq m \\Rightarrow \\frac{k(k-1)}{2} \\leq m \\Rightarrow k \\leq \\sqrt{m}\\)</li> </ul>"},{"location":"CP/sqrt-decomposition/#vi-du_4","title":"V\u00ed d\u1ee5","text":"<p>Olympic Sinh Vi\u00ean 2022 - Si\u00eau c\u00fap - T\u00ecm x\u00e2u \u0111\u1eb9p</p> \u0110\u1ec1 b\u00e0i <p>X\u1eed l\u00ed c\u00e1c truy v\u1ea5n</p> <ul> <li>Th\u00eam x\u00e2u \\(S\\) v\u00e0o t\u1eadp</li> <li>Xo\u00e1 x\u00e2u \\(S\\) kh\u1ecfi t\u1eadp</li> <li>\u0110\u1ebfm s\u1ed1 x\u00e2u trong t\u1eadp ch\u1ee9a \\(S\\) nh\u01b0 m\u1ed9t x\u00e2u con</li> </ul> <p>\u0110\u1eb7t \\(T =\\) t\u1ed5ng \u0111\u1ed9 d\u00e0i c\u00e1c x\u00e2u \\(S\\). Ta c\u00f3 \\(T \\leq 5 \\times 10^5\\) </p> L\u1eddi gi\u1ea3i <p>B\u1eb1ng m\u1ed9t s\u1ed1 thu\u1eadt to\u00e1n Automation ho\u1eb7c chia hai c\u00e1ch l\u00e0m ta c\u0169ng c\u00f3 th\u1ec3 gi\u1ea3i \u0111\u01b0\u1ee3c b\u00e0i n\u00e0y. Tuy nhi\u00ean t\u1eeb nh\u1eadn x\u00e9t tr\u00ean ta c\u00f3 th\u1ec3 r\u00fat ra thu\u1eadt to\u00e1n sau \u0111\u00e2y:</p> <ul> <li>Ch\u1ec9 c\u00f3 \\(\\sqrt{T}\\) \u0111\u1ed9 d\u00e0i ph\u00e2n bi\u1ec7t c\u1ee7a \\(S\\). L\u01b0u c\u00e1c \u0111\u1ed9 d\u00e0i n\u00e0y v\u00e0o m\u1ed9t m\u1ea3ng \\(L\\)</li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n th\u00eam ho\u1eb7c xo\u00e1 x\u00e2u \\(S\\), ta duy\u1ec7t m\u1ecdi \u0111\u1ed9 d\u00e0i \\(len\\) trong \\(L\\), v\u00e0 s\u1eed d\u1ee5ng m\u1ed9t c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1ec3 ghi nh\u1eadn s\u1ed1 l\u1ea7n xu\u1ea5t hi\u1ec7n c\u1ee7a m\u1ecdi x\u00e2u con ph\u00e2n bi\u1ec7t \u0111\u1ed9 d\u00e0i \\(len\\) c\u1ee7a \\(S\\) </li> <li>V\u1edbi m\u1ed7i truy v\u1ea5n h\u1ecfi, ta truy xu\u1ea5t trong c\u1ea5u tr\u00fac d\u1eef li\u1ec7u \u0111\u1ec3 ra \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n</li> <li>Ta c\u00f3 th\u1ec3 d\u00f9ng Hash k\u1ebft h\u1ee3p v\u1edbi ch\u1eb7t nh\u1ecb ph\u00e2n \u0111\u1ec3 l\u00e0m vi\u1ec7c n\u00e0y. C\u1ee5 th\u1ec3, ta l\u01b0u m\u00e3 Hash c\u1ee7a to\u00e0n b\u1ed9 truy v\u1ea5n x\u00e2u \\(S\\) v\u00e0o m\u1ed9t m\u1ea3ng \\(H\\). Sau \u0111\u00f3, ta s\u1eafp x\u1ebfp m\u1ea3ng \\(H\\) n\u00e0y l\u1ea1i. Khi th\u00eam/b\u1edbt m\u1ed9t x\u00e2u, ta ch\u1eb7t nh\u1ecb ph\u00e2n m\u00e3 hash c\u1ee7a n\u00f3 tr\u00ean \\(H\\). N\u1ebfu t\u1ed3n t\u1ea1i, gi\u1ea3 s\u1eed v\u1ecb tr\u00ed c\u1ee7a n\u00f3 tr\u00ean \\(H\\) l\u00e0 \\(P\\), ta s\u1eed d\u1ee5ng m\u1ea3ng \u0111\u1ebfm \\(cnt\\) v\u00e0 ti\u1ebfn h\u00e0nh truy xu\u1ea5t \\(cnt_P\\).</li> <li>Ngo\u00e0i c\u00e1ch s\u1eed d\u1ee5ng Hash, ta c\u0169ng c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac d\u1eef li\u1ec7u Trie \u0111\u1ec3 l\u01b0u tr\u1eef c\u00e1c x\u00e2u.</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p s\u1ebd l\u00e0 \\(O(Q\\sqrt{T})\\). D\u00f9 \u0111\u1ed9 ph\u1ee9c t\u1ea1p r\u1ea5t l\u1edbn nh\u01b0ng tr\u00ean th\u1ef1c t\u1ebf kh\u00f4ng c\u00f3 nhi\u1ec1u \u0111\u1ed9 d\u00e0i \u0111\u1ebfn v\u1eady, n\u00ean v\u1eabn c\u00f3 th\u1ec3 AC.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 5e5 + 5;\nconst int BASE = 311;\n\nstruct Query {\n  string type, s;\n  Query(string t = \"\", string s = \"\") : type(t), s(s) {}\n};\n\ntemplate &lt;typename T&gt;\nvoid sort_and_unique(vector&lt;T&gt;&amp; v) {\n  sort(v.begin(), v.end());\n  v.resize(unique(v.begin(), v.end()) - v.begin());\n}\n\nint64_t power[N];\nint64_t cur_hash[N];\nint cnt[N];\nint vis[N];\n\nint64_t get_hash(int i, int j) {\n  return cur_hash[j] - cur_hash[i - 1] * power[j - i + 1];\n}\n\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  power[0] = 1;\n  for (int i = 1; i &lt; N; i++) {\n    power[i] = power[i - 1] * BASE;\n  }\n  vector&lt;Query&gt; qr;\n  int n;\n  cin &gt;&gt; n;\n  for (int i = 1; i &lt;= n; i++) {\n    string s;\n    cin &gt;&gt; s;\n    qr.push_back({\"i\", s});\n  }\n  int q;\n  cin &gt;&gt; q;\n  vector&lt;int&gt; len_query;\n  vector&lt;int64_t&gt; hash_query;\n  for (int i = 1; i &lt;= q; i++) {\n    string ask, s;\n    cin &gt;&gt; ask &gt;&gt; s;\n    qr.push_back({ask, s});\n    if (ask == \"q\") {\n      len_query.push_back(s.size());\n      hash_query.push_back(0);\n      for (char c : s) {\n        hash_query.back() = hash_query.back() * BASE + c;\n      }\n    }\n  }\n  sort_and_unique(len_query);\n  sort_and_unique(hash_query);\n  int timer = 0;\n  auto add = [&amp;](string s, int delta) {\n    for (int i = 1; i &lt;= int(s.size()); i++) {\n      cur_hash[i] = cur_hash[i - 1] * BASE + s[i - 1];\n    }\n    for (int len : len_query) {\n      ++timer;\n      for (int i = 1; i + len - 1 &lt;= int(s.size()); i++) {\n        int64_t cur_val = get_hash(i, i + len - 1);\n        int pos = lower_bound(hash_query.begin(), hash_query.end(), cur_val) - hash_query.begin();\n        if (pos != int(hash_query.size()) &amp;&amp; hash_query[pos] == cur_val &amp;&amp; vis[pos] != timer) {\n          vis[pos] = timer;\n          cnt[pos] += delta;\n        }\n      }\n    }\n  };\n  for (auto [type, s] : qr) {\n    if (type == \"q\") {\n      int64_t val = 0;\n      for (char c : s) {\n        val = val * BASE + c;\n      }\n      cout &lt;&lt; cnt[lower_bound(hash_query.begin(), hash_query.end(), val) - hash_query.begin()] &lt;&lt; \"\\n\";\n    } else if (type == \"i\") {\n      add(s, 1);\n    } else {\n      add(s, -1);\n    }\n  }\n  return 0;\n}\n</code></pre> <p>Bedao R16 - Domino</p> \u0110\u1ec1 b\u00e0i <p>Cho \\(n\\) domino c\u00f3 m\u1eb7t tr\u00ean l\u00e0 \\(a_i\\), m\u1eb7t d\u01b0\u1edbi l\u00e0 \\(b_i\\). T\u00ecm c\u00e1ch flip m\u1ed9t s\u1ed1 domino sao cho ch\u00eanh l\u1ec7ch gi\u1eefa t\u1ed5ng m\u1eb7t tr\u00ean v\u00e0 t\u1ed5ng m\u1eb7t d\u01b0\u1edbi l\u00e0 nh\u1ecf nh\u1ea5t c\u00f3 th\u1ec3. \\(n \\leq 10^5; a_i, b_i \\leq 6\\)</p> L\u1eddi gi\u1ea3i <p>Nh\u1eadn x\u00e9t m\u1ed7i domino ta ch\u1ec9 t\u00e1c \u0111\u1ed9ng t\u1ed1i \u0111a 1 l\u1ea7n. V\u00e0 khi bi\u1ebft \u0111\u01b0\u1ee3c t\u1ed5ng m\u1eb7t tr\u00ean, ta d\u1ec5 d\u00e0ng suy ra \u0111\u01b0\u1ee3c t\u1ed5ng m\u1eb7t d\u01b0\u1edbi b\u1eb1ng c\u00e1ch l\u1ea5y t\u1ed5ng \\(a_i+b_i\\) r\u1ed3i tr\u1eeb \u0111i.</p> <p>\u0110\u1ebfn \u0111\u00e2y ta c\u00f3 h\u01b0\u1edbng \u0111i dp knapsack: G\u1ecdi \\(F(i,s)=0/1\\) khi x\u00e9t \u0111\u1ebfn v\u1ecb tr\u00ed \\(i\\) v\u00e0 ta t\u1ea1o \u0111\u01b0\u1ee3c t\u1ed5ng \\(s\\). D\u1ec5 th\u1ea5y c\u00f4ng th\u1ee9c s\u1ebd l\u00e0 \\(F(i,s)=F(i-1,s-a_i)||F(i-1,s-b_i)\\). Tuy nhi\u00ean l\u00e0m nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n^2)\\) do \\(max(s)=n \\times 6\\)</p> <p>Nh\u00ecn l\u1ea1i b\u00e0i to\u00e1n. Gi\u1ea3 s\u1eed ban \u0111\u1ea7u ta c\u00f3 \\(a_i \\leq b_i \\ \\forall i\\) (n\u1ebfu kh\u00f4ng c\u00f3 \u0111i\u1ec1u ki\u1ec7n n\u00e0y th\u00ec ta c\u00f3 th\u1ec3 flip lu\u00f4n t\u1eeb khi \u0111\u1ecdc input). Ban \u0111\u1ea7u ch\u00eanh l\u1ec7ch c\u1ee7a ta l\u00e0 \\(|\\sum_{i=1}^{n} a_i-b_i|\\). Khi t\u00e1c \u0111\u1ed9ng l\u00ean domino th\u1ee9 \\(i\\), ta \u0111\u01b0\u1ee3c c\u1ed9ng v\u00e0o \u0111\u00e1p \u00e1n m\u1ed9t l\u01b0\u1ee3ng l\u00e0 \\(b_i-a_i\\). V\u1eady ta c\u00f3 th\u1ec3 coi b\u00e0i to\u00e1n nh\u01b0 l\u00e0 c\u00f3 \\(n\\) v\u1eadt gi\u00e1 tr\u1ecb \\(b_i-a_i\\), ta c\u1ea7n quy ho\u1ea1ch \u0111\u1ed9ng t\u00ecm m\u1ed9t d\u00e3y c\u00f3 t\u1ed5ng x\u00e1c \u0111\u1ecbnh \u0111\u1ec3 ch\u00eanh l\u1ec7ch \u0111\u1ea1t gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t.</p> <p>V\u00ec \\(b_i-a_i \\leq 6\\). Ta c\u00f3 th\u1ec3 duy tr\u00ec m\u1ea3ng \\(cnt_i\\) l\u00e0 s\u1ed1 v\u1eadt c\u00f3 gi\u00e1 tr\u1ecb \\(b_i-a_i\\). Sau \u0111\u00f3 ta c\u00f3 th\u1ec3 quy ho\u1ea1ch \u0111\u1ed9ng \\(F(i,s)\\) l\u00e0 x\u00e9t \u0111\u1ebfn v\u1eadt c\u00f3 gi\u00e1 tr\u1ecb \\(i\\) v\u00e0 \u0111\u1ea1t \u0111\u01b0\u1ee3c t\u1ed5ng \\(s\\). D\u1ec5 thu nh\u1eadn \u0111\u01b0\u1ee3c \\(F(i,s)=F(i-1,s-c \\times i) \\ \\forall c \\in [0,cnt_i]\\). Tuy nhi\u00ean l\u00e0m nh\u01b0 v\u1eady \u0111\u1ed9 ph\u1ee9c t\u1ea1p v\u1eabn l\u00e0 \\(O(n^2)\\)</p> <p>Ta s\u1ebd d\u00f9ng m\u1ed9t trick nh\u01b0 sau: </p> <ul> <li>Gi\u1ea3 s\u1eed c\u00f3 c\u00e1c v\u1eadt v\u1edbi gi\u00e1 tr\u1ecb \\(i\\) v\u00e0 s\u1ed1 l\u01b0\u1ee3ng \\(cnt_i\\)</li> <li>G\u1ecdi \\(k\\) l\u00e0 s\u1ed1 l\u1edbn nh\u1ea5t tho\u1ea3 m\u00e3n: \\(2^0+2^1+\u22ef+2^k=2^{k+1}-1 \\leq cnt_i (1)\\). D\u1ec5 th\u1ea5y \\(k \\leq \\log_2(cnt_i)\\)</li> <li>Khi \u0111\u00f3 ta chia th\u00e0nh c\u00e1c v\u1eadt nh\u1ecf h\u01a1n v\u1edbi gi\u00e1 tr\u1ecb l\u00e0 \\(2^0,\\cdots,2^k\\); th\u00eam m\u1ed9t v\u1eadt n\u1eefa n\u1ebfu nh\u01b0 \\(cnt_i-2^{k+1}+1&gt;0\\). Ta s\u1ebd ch\u1ee9ng minh b\u1eb1ng c\u00e1ch ch\u1ecdn m\u1ed9t t\u1eadp con c\u1ee7a c\u00e1c v\u1eadt m\u1edbi t\u00e1ch ra n\u00e0y, ta lu\u00f4n c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c s\u1ed1 nguy\u00ean thu\u1ed9c \\([0,cnt_i]\\)</li> <li>B\u1eb1ng c\u00e1ch ch\u1ecdn m\u1ed9t t\u1eadp con c\u1ee7a \\([0,k]\\), ta c\u00f3 th\u1ec3 t\u1ea1o \u0111\u01b0\u1ee3c c\u00e1c s\u1ed1 thu\u1ed9c \\([0,2^{k+1})\\) </li> <li>C\u00f2n th\u1eeba l\u1ea1i \\(x=cnt_i-2^{k+1}+1\\), ta c\u1ea7n ch\u1ee9ng minh r\u1eb1ng c\u00f3 th\u1ec3 t\u1ea1o \u0111\u01b0\u1ee3c t\u1eadp \\([2^{k+1},cnt_i]\\)</li> <li>D\u1ec5 th\u1ea5y v\u1edbi c\u00e1c s\u1ed1 thu\u1ed9c \\([0,2^{k+1})\\) , khi ta c\u1ed9ng th\u00eam \\(x\\), s\u1ebd t\u1ea1o \u0111\u01b0\u1ee3c c\u00e1c s\u1ed1 thu\u1ed9c \\([x,x+2^{k+1}-1]\\)</li> <li>V\u00ec \\(k\\) l\u00e0 s\u1ed1 l\u1edbn nh\u1ea5t tho\u1ea3 m\u00e3n \\((1)\\) n\u00ean \\(x \\leq 2^{k+1}-1\\)</li> <li>\\(x \\leq 2^{k+1}-1 \\leq cnt_i = x+2^{k+1}-1\u2192[2^{k+1},cnt_i ] \\subset [x,x+2^{k+1}-1]\\)</li> <li>Nh\u01b0 v\u1eady ta c\u00f3 th\u1ec3 t\u1ea1o \u0111\u01b0\u1ee3c c\u00e1c s\u1ed1 thu\u1ed9c \\([0,cnt_i]\\)</li> </ul> <p>B\u1eb1ng nh\u1eadn x\u00e9t \u1edf ph\u1ea7n gi\u1edbi thi\u1ec7u, ta c\u0169ng c\u00f3 th\u1ec3 r\u00fat ra \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng ph\u1ea7n t\u1eed ph\u00e2n bi\u1ec7t trong d\u00e3y m\u1edbi l\u00e0 \\(\\leq \\sqrt{6 \\times n}\\). Vi\u1ec7c quy ho\u1ea1ch \u0111\u1ed9ng tr\u00ean d\u00e3y m\u1edbi cho ta thu\u1eadt to\u00e1n v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p l\u00e0 \\(O(n\\sqrt{n})\\). Ph\u1ea7n truy v\u1ebft xin d\u00e0nh cho b\u1ea1n \u0111\u1ecdc.</p> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int MAX_N = 1e5 + 5;\nconst int MAX_TYPE = 15;\n\nint n;\nint A[MAX_N];\nint B[MAX_N];\nint a[MAX_N];\nint cnt[MAX_N];\nint F[6 * MAX_N];\nvector&lt;int&gt; bucket[MAX_TYPE];\nint ansCnt[MAX_N];\nbool flipped[MAX_N];\n\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n#define task \"a\"\n  if (fopen(task \".inp\", \"r\")) {\n    freopen(task \".inp\", \"r\", stdin);\n    freopen(task \".out\", \"w\", stdout);\n  }\n  cin &gt;&gt; n;\n  for (int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; A[i];\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    cin &gt;&gt; B[i];\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    if (A[i] &gt; B[i]) {\n      flipped[i] = true;\n      swap(A[i], B[i]);\n    }\n  }\n  for (int i = 1; i &lt;= n; i++) {\n    a[i] = abs(A[i] - B[i]);\n    bucket[a[i]].emplace_back(i);\n  }\n  vector&lt;pair&lt;int, int&gt;&gt; items;\n  for (int i = 1; i &lt;= n; i++) ++cnt[a[i]];\n  for (int i = 0; i &lt;= 6; i++) {\n    if (!cnt[i]) continue;\n    for (int l = 0; cnt[i] - (1 &lt;&lt; l) &gt;= 0; l++) {\n      cnt[i] -= 1 &lt;&lt; l;\n      items.emplace_back((1 &lt;&lt; l) * i, i);\n    }\n    if (cnt[i]) items.emplace_back(cnt[i] * i, i);\n  }\n  memset(F, 0x3f, sizeof(F));\n  F[0] = 0;\n  int maxSum = 6 * n;\n  int N = items.size();\n  for (int i = 1; i &lt;= maxSum; i++) {\n    for (int j = 1; j &lt;= N; j++) {\n      if (items[j - 1].first &lt;= i &amp;&amp; F[i - items[j - 1].first] &lt; j) {\n        F[i] = j;\n        break;\n      }\n    }\n  }\n  auto trace = [&amp;](int sum) {\n    while (sum &gt; 0) {\n      int i = F[sum] - 1;\n      ansCnt[items[i].second] += items[i].first / items[i].second;\n      sum -= items[i].first;\n    }\n  };\n  int ansSum = -1;\n  int best = 2e9;\n  int S1 = 0, S = 0;\n  for (int i = 1; i &lt;= n; i++) S1 += A[i], S += A[i] + B[i];\n  for (int sum = 0; sum &lt;= maxSum; sum++) {\n    if (F[sum] != 0x3f3f3f3f) {\n      int cur = abs(2 * S1 - S + 2 * sum);\n      if (best &gt; cur) {\n        best = cur, ansSum = sum;\n      }\n    }\n  }\n  assert(ansSum != -1);\n  trace(ansSum);\n  cout &lt;&lt; best &lt;&lt; \"\\n\";\n  for (int i = 0; i &lt;= 12; i++) {\n    while (ansCnt[i]--) {\n      flipped[bucket[i].back()] ^= 1;\n      bucket[i].pop_back();\n    }\n  }\n  cout &lt;&lt; count(flipped + 1, flipped + n + 1, 1) &lt;&lt; \" \";\n  for (int i = 1; i &lt;= n; i++)\n    if (flipped[i]) cout &lt;&lt; i &lt;&lt; \" \";\n  return 0;\n}\n</code></pre>"},{"location":"CP/sqrt-decomposition/#bai-tap-ap-dung_4","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>Strongest Friendship Group - USACO Gold 2022</li> </ul>"},{"location":"CP/sqrt-decomposition/#baby-step-giant-step","title":"Baby step giant step","text":""},{"location":"CP/sqrt-decomposition/#gioi-thieu_2","title":"Gi\u1edbi thi\u1ec7u","text":"<p>X\u00e9t ph\u01b0\u01a1ng tr\u00ecnh: \\(a^x \\equiv b \\ (\\mod m)\\), v\u1edbi gi\u1ea3 thi\u1ebft \\(\\gcd(a,m)=1\\). Ta c\u1ea7n t\u00ecm m\u1ed9t nghi\u1ec7m \\(x\\) tho\u1ea3 m\u00e3n ph\u01b0\u01a1ng tr\u00ecnh tr\u00ean.</p> <ul> <li>Nh\u1eadn x\u00e9t: sau t\u1ed1i \u0111a \\(m\\) b\u01b0\u1edbc th\u00ec s\u1ebd g\u1eb7p l\u1ea1i m\u1ed9t gi\u00e1 tr\u1ecb \\(a^i\\) \u0111\u00e3 th\u0103m tr\u01b0\u1edbc \u0111\u00f3. V\u00ec theo nguy\u00ean l\u00ed Dirichlet, n\u1ebfu ta c\u00f3 \\(m\\) s\u1ed1 gi\u00e1 tr\u1ecb \\(&lt;m\\), th\u00ec \u00edt nh\u1ea5t c\u00f3 2 s\u1ed1 c\u00f3 gi\u00e1 tr\u1ecb b\u1eb1ng nhau. V\u00ec v\u1eady th\u1eed c\u00e1c gi\u00e1 tr\u1ecb \\(x&gt;m\\) l\u00e0 v\u00f4 ngh\u0129a. </li> <li>V\u1eady c\u00e1ch gi\u1ea3i tr\u00e2u \u1edf \u0111\u00e2y s\u1ebd l\u00e0 duy\u1ec7t \\(x\\) t\u1eeb \\(0\\) \u0111\u1ebfn \\(m\\), v\u00e0 ki\u1ec3m tra \\(a^x\\) c\u00f3 tho\u1ea3 m\u00e3n \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec1 b\u00e0i kh\u00f4ng. Nh\u01b0ng nh\u01b0 v\u1eady kh\u00f4ng \u0111\u1ee7 \u0111\u1ec3 gi\u1ea3i v\u1edbi \\(m\\) l\u1edbn.</li> <li>\u0110\u1eb7t \\(x=Tp+q\\), v\u1edbi \\(T\\) l\u00e0 m\u1ed9t h\u1eb1ng s\u1ed1 x\u00e1c \u0111\u1ecbnh. C\u00e1ch ch\u1ecdn \\(T\\) s\u1ebd \u0111\u01b0\u1ee3c tr\u00ecnh b\u00e0y sau. \u1ede \u0111\u00e2y \\(p\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \"giant step\", c\u00f2n \\(q\\) \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 \"baby step\"</li> <li>Khi \u0111\u00f3 ph\u01b0\u01a1ng tr\u00ecnh tr\u1edf th\u00e0nh \\(a^{Tp+q} \\equiv b (\\mod m)\\)</li> <li>Ph\u01b0\u01a1ng tr\u00ecnh t\u01b0\u01a1ng \u0111\u01b0\u01a1ng \\(a^{Tp} \\equiv a^{-q} \\times b (\\mod m)\\)</li> <li>Ta c\u00f3 th\u1ec3 t\u00ednh \\(a^{Tp}\\) v\u1edbi m\u1ecdi gi\u00e1 tr\u1ecb \\(p \\in [0,\\lfloor \\frac{m}{T}\\rfloor]\\) v\u00e0 \\(a^{-q} \\times b\\) v\u1edbi m\u1ecdi gi\u00e1 tr\u1ecb \\(q&lt;T\\). Sau \u0111\u00f3, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng ch\u1eb7t nh\u1ecb ph\u00e2n \u0111\u1ec3 \u0111\u1ebfm s\u1ed1 c\u1eb7p gi\u00e1 tr\u1ecb b\u1eb1ng nhau tr\u00ean hai m\u1ea3ng tr\u00ean.</li> </ul> <p>\u0110\u1ed9 ph\u1ee9c t\u1ea1p ph\u1ee5 thu\u1ed9c v\u00e0o \\(\\frac{m}{T} + T\\). Nh\u01b0 \u0111\u00e3 \u0111\u1ec1 c\u1eadp \u1edf c\u00e1c ph\u1ea7n tr\u01b0\u1edbc, bi\u1ec3u th\u1ee9c n\u00e0y \u0111\u1ea1t gi\u00e1 tr\u1ecb nh\u1ecf nh\u1ea5t khi \\(T=\\sqrt{m}\\).</p> <p>Thu\u1eadt to\u00e1n tr\u00ean kh\u00f4ng ch\u1ec9 gi\u1edbi h\u1ea1n \u1edf m\u1ee9c gi\u1ea3i ph\u01b0\u01a1ng tr\u00ecnh, m\u00e0 ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng cho b\u1ea5t c\u1ee9 cyclic group \u0111\u1ed9 d\u00e0i \\(n\\) n\u00e0o m\u00e0 t\u1ed3n t\u1ea1i inverse c\u1ee7a ch\u00fang.</p>"},{"location":"CP/sqrt-decomposition/#vi-du_5","title":"V\u00ed d\u1ee5","text":"<p>1840G1 - Codeforces</p> L\u1eddi gi\u1ea3i <ul> <li>\u0110\u1ec3 t\u00ecm \\(n\\) c\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 duy\u1ec7t \\(10^6\\) l\u1ea7n t\u1eeb v\u1ecb tr\u00ed xu\u1ea5t ph\u00e1t \u0111\u01b0\u1ee3c cho ban \u0111\u1ea7u \u0111\u1ebfn khi g\u1eb7p l\u1ea1i s\u1ed1 \u0111\u00e3 \u0111i qua. \u0110\u1ed9 d\u00e0i chu tr\u00ecnh \u0111\u00f3 ch\u00ednh l\u00e0 \\(n\\). Tuy nhi\u00ean l\u00e0m v\u1eady s\u1ebd b\u1ecb qu\u00e1 s\u1ed1 c\u00e2u h\u1ecfi.</li> <li>Ch\u1ecdn m\u1ed9t s\u1ed1 \\(K\\) b\u1ea5t k\u00ec. H\u1ecfi \\(K\\) c\u00e2u h\u1ecfi \\(+1\\) \u0111\u1ec3 t\u00ecm \\(K\\) s\u1ed1 \u0111\u1ea7u ti\u00ean. N\u1ebfu \\(N&lt;K\\), s\u1ebd c\u00f3 2 s\u1ed1 tr\u00f9ng nhau trong \\(K\\) s\u1ed1 \u0111\u1ea7u ti\u00ean \u0111\u01b0\u1ee3c th\u0103m. V\u1eady \\(N\\) s\u1ebd l\u00e0 kho\u1ea3ng c\u00e1ch gi\u1eefa 2 s\u1ed1 tr\u00f9ng nhau \u0111\u00f3.</li> <li>Ng\u01b0\u1ee3c l\u1ea1i, \\(N \\geq K\\). Ta chia v\u00f2ng tr\u00f2n l\u00e0m \\(\\frac{N}{K}\\) cung nh\u1ecf. B\u1eaft \u0111\u1ea7u t\u1eeb v\u1ecb tr\u00ed hi\u1ec7n t\u1ea1i, ta nh\u1ea3y \\(K\\) b\u01b0\u1edbc m\u1ed9t qua t\u1eebng cung, ngh\u0129a l\u00e0 h\u1ecfi c\u00e1c c\u00e2u h\u1ecfi \\(+K\\) \u0111\u1ec3 t\u00ecm s\u1ed1 \u1edf v\u1ecb tr\u00ed \\(2K,3K,...\\). N\u1ebfu nh\u01b0 quay l\u1ea1i cung ch\u1ee9a s\u1ed1 \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u \\(\\Rightarrow\\) s\u1ed1 \u0111\u00f3 \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u \u1edf \\(K\\) b\u01b0\u1edbc \u0111\u1ea7u \\(\\Rightarrow\\) t\u00ecm l\u1ea1i \u0111\u01b0\u1ee3c \\(N\\).</li> <li>\u0110\u1ed9 ph\u1ee9c t\u1ea1p: \\(O(K+\\frac{N}{K})\\). \u0110\u1ec3 t\u1ed1i \u01b0u s\u1ed1 c\u00e2u h\u1ecfi ta c\u1ea7n t\u00ecm \\(K\\) sao cho \\(K+\\frac{N}{K}\\) min. Theo Cosi ta c\u00f3 \\(K+\\frac{N}{K} \\geq 2 \\times \\sqrt{K \\times \\frac{N}{K}} = 2 \\sqrt {N}\\). D\u1ea5u b\u1eb1ng x\u1ea3y ra khi \\(K=\\frac{N}{K} \\Leftrightarrow K = \\sqrt{N}\\). V\u1eady s\u1ed1 c\u00e2u h\u1ecfi c\u1ea7n d\u00f9ng t\u1ed1i \u0111a l\u00e0 \\(2000\\) c\u00e2u.</li> </ul> C\u00e0i \u0111\u1eb7t <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nint marked[1000005];\n\nint main() {\n  memset(marked, -1, sizeof(marked));\n  int x;\n  cin &gt;&gt; x;\n  marked[x] = 0;\n  for (int i = 1; i &lt;= 1000; i++) {\n    cout &lt;&lt; \"+ 1\" &lt;&lt; endl;\n    int p;\n    cin &gt;&gt; p;\n    if (marked[p] != -1) {\n      cout &lt;&lt; \"! \" &lt;&lt; i - marked[p] &lt;&lt; endl;\n      return 0;\n    }\n    marked[p] = i;\n  }\n  for (int i = 2000; i &lt;= 1001000; i += 1000) {\n    cout &lt;&lt; \"+ 1000\" &lt;&lt; endl;\n    int p;\n    cin &gt;&gt; p;\n    if (marked[p] != -1) {\n      cout &lt;&lt; \"! \" &lt;&lt; abs(i - marked[p]) &lt;&lt; endl;\n      return 0;\n    }\n  }\n  assert(false);\n  return 0;\n}\n</code></pre>"},{"location":"CP/sqrt-decomposition/#bai-tap-ap-dung_5","title":"B\u00e0i t\u1eadp \u00e1p d\u1ee5ng","text":"<ul> <li>SPOJ - MOD</li> <li>TopCoder - SplitingFoxes3</li> <li>Codechef - INVXOR</li> <li>Codeforces - Hard equation - b\u00e0i to\u00e1n y\u00eau c\u1ea7u gi\u1ea3i \\(a^x \\equiv b\\) nh\u01b0ng kh\u00f4ng v\u1edbi \u0111i\u1ec1u ki\u1ec7n \\(gcd(a,m)=1\\). G\u1ee3i \u00fd: ta c\u00f3 th\u1ec3 \u0111\u1ed5i bi\u1ebfn \\(a'=ga,b'=gb,m'=gm\\) v\u1edbi \\(g=gcd(a,m)\\).</li> <li>Codechef - CHEFMOD</li> </ul>"},{"location":"CP/sqrt-decomposition/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>To\u00e0n b\u1ed9 c\u00e1c h\u00ecnh \u1ea3nh trong b\u00e0i vi\u1ebft: imgur</li> <li>MIPT Spring Camp 2016</li> <li>Discrete log - CP-Algorithm</li> <li>Chia c\u0103n - VNOI Wiki</li> <li>Baby step giant step - Wikiwand</li> <li>Collection of little techniques - Codeforces</li> <li>An alternative sorting order for Mo's algorithm - Codeforces</li> <li>Sqrt decomposition - Errichto</li> <li>SQRT Decomposition Problems - Codeforces</li> <li>USACO - Sqrt Decomposition</li> <li>Mo's Algorithm on Trees [Tutorial] - Codeforces</li> <li>Mo's Algorithm (with update and without update, now you can understand both) - Codeforces</li> <li>ei1333's blog</li> <li>kazuma8128's blog</li> </ul>"}]}